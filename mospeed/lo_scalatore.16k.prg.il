PROGRAMSTART:
JSR START
0:
NOP
MOVB 648,#30{INTEGER}
NOP
MOVB 36869,#240{INTEGER}
NOP
MOVB 36866,#150{INTEGER}
NOP
MOV A,#{clr}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOVB 36869,#255{INTEGER}
NOP
MOVB 36878,#143.0{REAL}
NOP
MOVB 36879,#25{INTEGER}
1:
NOP
NOP
NOP
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,DO[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#1{INTEGER}
MOV G,DO[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV G,DO[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV DI{REAL},X
2:
NOP
NOP
MOV Y,#30720.0{REAL}
MOV G{REAL},Y
3:
NOP
MOV Y,#0.1{REAL}
MOV KK{REAL},Y
NOP
NOP
NOP
MOV Y,#1{INTEGER}
MOV SC{REAL},Y
NOP
MOV Y,#2{INTEGER}
MOV CH{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV E1{REAL},Y
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#4{INTEGER}
MOV G,D[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#2.0{REAL}
MOV G,D[]{REAL}
JSR ARRAYSTORE
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#6.0{REAL}
MOV G,D[]{REAL}
JSR ARRAYSTORE
NOP
NOP
MOV Y,#1{INTEGER}
MOV E3{REAL},Y
NOP
MOV Y,#10000{INTEGER}
MOV Q{REAL},Y
NOP
MOV Y,#56{INTEGER}
MOV J{REAL},Y
10:
NOP
JSR GOSUB
JSR 200
NOP
JSR GOSUB
JSR 100
NOP
MOVB 36869,#255{INTEGER}
NOP
NOP
15:
NOP
JSR GOSUB
JSR 70
NOP
MOV Y,#0{INTEGER}
MOV H{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV Y{REAL},Y
16:
NOP
MOV Y,#20{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV Y,#8143{INTEGER}
ADD X,Y
MOV S{REAL},X
NOP
MOV Y,#59{INTEGER}
PUSH Y
MOV Y,S{REAL}
MOVB X,(Y)
POP Y
EQ X,Y
PUSH X
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP0
JMP SKIP0
NSKIP0:
JMP 16
NOP
SKIP0:
17:
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
NOP
MOV Y,S{REAL}
MOVB (Y),#58{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
19:
NOP
MOV X,Y{REAL}
MOV G,B[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#7712{INTEGER}
ADD X,Y
MOV V{REAL},X
NOP
MOV Y,#62{INTEGER}
MOV W{REAL},Y
NOP
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV G,DO[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV DO{REAL},X
20:
NOP
JSR $33c
NOP
JSR $384
NOP
JSR $384
NOP
MOVB X,1
INT X,X
ON0SUB0:
CMP X,#1{INTEGER}
JNE AFTER0SUB0
JMP 35
AFTER0SUB0:
ON0SUB1:
CMP X,#2{INTEGER}
JNE AFTER0SUB1
JMP 26
AFTER0SUB1:
ON0SUB2:
CMP X,#3{INTEGER}
JNE AFTER0SUB2
JMP 28
AFTER0SUB2:
ON0SUB3:
CMP X,#4{INTEGER}
JNE AFTER0SUB3
JMP 31
AFTER0SUB3:
ON0SUB4:
CMP X,#5{INTEGER}
JNE AFTER0SUB4
JMP 33
AFTER0SUB4:
GSKIPON0:
21:
NOP
JMP 41
NOP
26:
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#57.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP1
JMP SKIP1
NSKIP1:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV S{REAL},X
JMP 40
NOP
SKIP1:
27:
NOP
JMP 41
28:
NOP
MOV Y,#-1.0{REAL}
MOV DI{REAL},Y
NOP
MOV Y,#21{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP2
JMP SKIP2
NSKIP2:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,S{REAL}
SUB X,Y
MOV S{REAL},X
JMP 40
NOP
SKIP2:
29:
NOP
MOV Y,#57.0{REAL}
MOV X,T{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP3
JMP SKIP3
NSKIP3:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,DI{REAL}
MOV X,S{REAL}
ADD X,Y
MOV S{REAL},X
NOP
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
JMP 55
NOP
SKIP3:
30:
NOP
JMP 41
31:
NOP
MOV Y,#57.0{REAL}
MOV X,T{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP4
JMP SKIP4
NSKIP4:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
SUB X,Y
MOV S{REAL},X
JMP 40
NOP
SKIP4:
32:
NOP
JMP 41
33:
NOP
MOV Y,#1{INTEGER}
MOV DI{REAL},Y
NOP
MOV Y,#23{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP5
JMP SKIP5
NSKIP5:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV S{REAL},X
JMP 40
NOP
SKIP5:
34:
NOP
JMP 29
35:
NOP
MOVB 36876,#240{INTEGER}
NOP
MOV Y,S{REAL}
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
SUB X,Y
MOV Y,DI{REAL}
ADD X,Y
MOV S{REAL},X
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
NOP
MOV Y,S{REAL}
MOVB (Y),#58{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
NOP
MOV Y,#60{INTEGER}
MOV X,T{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP6
JMP SKIP6
NSKIP6:
JMP 55
NOP
SKIP6:
36:
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#60{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP7
JMP SKIP7
NSKIP7:
NOP
NOP
MOV Y,#1000{INTEGER}
MOV X,SS{REAL}
ADD X,Y
MOV SS{REAL},X
NOP
NOP
MOV A,#{home}{rvon}{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,SS{REAL}
CHGCTX #1
JSR STR
MOV B,A
CHGCTX #0
JSR LEN
MOV Y,X
MOV X,#8{INTEGER}
SUB X,Y
MOV Y,X
CHGCTX #1
JSR TAB
NOP
MOV X,SS{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
SKIP7:
37:
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR $384
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,S{REAL}
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,DI{REAL}
ADD X,Y
MOV S{REAL},X
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
NOP
MOV Y,S{REAL}
MOVB (Y),#58{INTEGER}
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#61{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP8
JMP SKIP8
NSKIP8:
JMP 55
NOP
SKIP8:
38:
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
NOP
MOVB 36876,#0{INTEGER}
NOP
JMP 41
40:
NOP
MOVB 36876,#200{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV Y,#1{INTEGER}
MOV X,KK{REAL}
ADD X,Y
MOV KK{REAL},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOVB 36876,#0{INTEGER}
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
NOP
MOV Y,S{REAL}
MOVB (Y),#58{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
NOP
JSR $384
41:
NOP
MOV Y,#61{INTEGER}
MOV X,T{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP9
JMP SKIP9
NSKIP9:
MOV Y,#252{INTEGER}
NOP
MOV X,Y
MOVB 36877,X
NOP
NOP
MOV Y,#150{INTEGER}
MOV X,SS{REAL}
ADD X,Y
MOV SS{REAL},X
NOP
NOP
MOV A,#{home}{rvon}{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,SS{REAL}
CHGCTX #1
JSR STR
MOV B,A
CHGCTX #0
JSR LEN
MOV Y,X
MOV X,#8{INTEGER}
SUB X,Y
MOV Y,X
CHGCTX #1
JSR TAB
NOP
MOV X,SS{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,H{REAL}
ADD X,Y
MOV H{REAL},X
NOP
NOP
MOV Y,#62{INTEGER}
MOV T{REAL},Y
MOV Y,#0{INTEGER}
NOP
MOV X,Y
MOVB 36877,X
NOP
NOP
MOV Y,#16{INTEGER}
MOV X,H{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP10
JMP SKIP10
NSKIP10:
JMP 64
SKIP10:
NOP
SKIP9:
42:
NOP
MOV Y,#60{INTEGER}
MOV X,T{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP11
JMP SKIP11
NSKIP11:
JMP 55
NOP
SKIP11:
43:
NOP
JSR GOSUB
JSR 98
45:
NOP
JSR $384
NOP
JSR $384
NOP
MOV Y,V{REAL}
PUSH Y
MOV X,W{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,G{REAL}
MOV X,V{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,W{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,DO{REAL}
MOV X,V{REAL}
ADD X,Y
MOV V{REAL},X
NOP
MOV Y,V{REAL}
MOVB X,(Y)
MOV W{REAL},X
NOP
MOV Y,V{REAL}
MOVB (Y),#60{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,V{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#6.0{REAL}
46:
NOP
MOV Y,#22{INTEGER}
MOV X,V{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#56{INTEGER}
EQ X,Y
PUSH X
MOV Y,#22{INTEGER}
MOV X,DO{REAL}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP12
JMP SKIP12
NSKIP12:
NOP
NOP
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV G,DO[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV DO{REAL},X
JMP 48
NOP
SKIP12:
47:
NOP
MOV Y,#63{INTEGER}
MOV X,W{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP13
JMP SKIP13
NSKIP13:
NOP
NOP
MOV Y,#22{INTEGER}
MOV DO{REAL},Y
SKIP13:
48:
NOP
MOV Y,#58{INTEGER}
MOV X,W{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP14
JMP SKIP14
NSKIP14:
JMP 55
NOP
SKIP14:
49:
NOP
MOV Y,#8164{INTEGER}
MOV X,V{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP15
JMP SKIP15
NSKIP15:
JMP 20
NOP
SKIP15:
50:
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#12{INTEGER}
MOV X,Y{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP16
JMP SKIP16
NSKIP16:
JMP 55
NOP
SKIP16:
51:
NOP
MOV Y,V{REAL}
MOVB (Y),#62{INTEGER}
NOP
JMP 19
55:
NOP
MOVB 36876,#0{INTEGER}
NOP
MOV Y,#250{INTEGER}
MOV SO{REAL},Y
NOP
MOV Y,#60{INTEGER}
MOV X,T{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP17
JMP SKIP17
NSKIP17:
NOP
NOP
MOV Y,W{REAL}
MOV T{REAL},Y
SKIP17:
56:
NOP
MOV X,SO{REAL}
MOVB 36874,X
NOP
MOV Y,#8164{INTEGER}
MOV X,S{REAL}
LT X,Y
PUSH X
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#56{INTEGER}
NEQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP18
JMP SKIP18
NSKIP18:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
NOP
MOV Y,#22{INTEGER}
MOV X,S{REAL}
ADD X,Y
MOV S{REAL},X
NOP
NOP
MOV Y,S{REAL}
MOVB X,(Y)
MOV T{REAL},X
MOV Y,S{REAL}
NOP
MOVB (Y),#58{INTEGER}
MOV Y,G{REAL}
NOP
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
SKIP18:
57:
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR $384
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#5{INTEGER}
MOV X,SO{REAL}
SUB X,Y
MOV SO{REAL},X
NOP
MOV Y,#150{INTEGER}
MOV X,SO{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP19
JMP SKIP19
NSKIP19:
JMP 56
NOP
SKIP19:
58:
NOP
MOVB 36874,#0{INTEGER}
NOP
MOV Y,#1{INTEGER}
MOV X,CH{REAL}
SUB X,Y
MOV CH{REAL},X
NOP
MOV Y,#-1.0{REAL}
MOV X,CH{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP20
JMP SKIP20
NSKIP20:
JMP 300
NOP
SKIP20:
59:
NOP
MOV A,#{home}{rvon}{STRING}
JSR STROUT
NOP
MOV Y,#14{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV X,CH{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
NOP
MOV Y,V{REAL}
PUSH Y
MOV X,W{REAL}
POP Y
MOVB (Y),X
NOP
MOV Y,G{REAL}
MOV X,V{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,W{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
ADD X,Y
MOV Y{REAL},X
NOP
MOV Y,#58{INTEGER}
MOV X,W{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP21
JMP SKIP21
NSKIP21:
MOV Y,V{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
MOV Y,G{REAL}
NOP
MOV X,V{REAL}
ADD X,Y
PUSH X
MOV Y,J{REAL}
MOV X,T{REAL}
SUB X,Y
MOV G,D[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
SKIP21:
60:
NOP
MOV Y,#10{INTEGER}
MOV X,Y{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP22
JMP SKIP22
NSKIP22:
JMP 15
NOP
SKIP22:
61:
NOP
MOV Y,#8163{INTEGER}
MOV X,S{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP23
JMP SKIP23
NSKIP23:
MOV Y,S{REAL}
NOP
PUSH Y
MOV X,T{REAL}
POP Y
MOVB (Y),X
JMP 16
NOP
SKIP23:
62:
NOP
MOV Y,S{REAL}
MOVB (Y),#58{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,S{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
NOP
JMP 19
64:
NOP
MOV Y,#11{INTEGER}
MOV X,Y{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP24
JMP SKIP24
NSKIP24:
JMP 67
NOP
SKIP24:
65:
NOP
MOV Y,#1{INTEGER}
MOV X,Y{REAL}
ADD X,Y
MOV N{REAL},X
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV X,N{REAL}
MOV G,B[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#7712{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#62{INTEGER}
NOP
MOV Y,#100{INTEGER}
MOV X,SS{REAL}
ADD X,Y
MOV SS{REAL},X
NOP
MOV A,#{home}{rvon}{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,SS{REAL}
CHGCTX #1
JSR STR
MOV B,A
CHGCTX #0
JSR LEN
MOV Y,X
MOV X,#8{INTEGER}
SUB X,Y
MOV Y,X
CHGCTX #1
JSR TAB
NOP
MOV X,SS{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
NOP
JSR GOSUB
JSR 98
66:
NOP
MOVB 36877,#250{INTEGER}
NOP
MOV Y,#240{INTEGER}
MOV M{REAL},Y
NOP
MOV Y,#250{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(M{REAL})
JSR INITFOR
NOP
JSR $384
NOP
MOV X,M{REAL}
MOVB 36876,X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOVB 36876,#0{INTEGER}
NOP
MOVB 36877,#0{INTEGER}
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
67:
NOP
MOV Y,#0.05{REAL}
MOV X,E2{REAL}
ADD X,Y
MOV E2{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,SC{REAL}
ADD X,Y
MOV SC{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,E1{REAL}
ADD X,Y
MOV E1{REAL},X
NOP
MOV Y,#8{INTEGER}
MOV X,E1{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP25
JMP SKIP25
NSKIP25:
NOP
NOP
MOV Y,#8{INTEGER}
MOV E1{REAL},Y
SKIP25:
68:
NOP
JMP 15
69:
NOP
JMP 69
70:
NOP
MOV A,#{clr}{pur}{STRING}
JSR STROUT
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#21{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV A,#>>>>>>>>>>>>>>>>>>>>>{left}{inst}>{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV A,#>>>>>>>>>>>>>>>>>>>>>{left}{inst}>{STRING}
JSR STROUT
NOP
MOV A,#{home}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
71:
NOP
MOV A,#{down}{down}{STRING}
JSR STROUT
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV A,#?>>>>>>>>?{red}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV A,#9{pur}88888888{red}9{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV A,#9>>>>>>>>9{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV Y,#6{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV A,#9>>>>>>>>9{pur}{STRING}
JSR STROUT
JSR LINEBREAK
72:
NOP
MOV Y,#1{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV A,#>88888888888888888888{STRING}
JSR STROUT
NOP
MOV A,#{down}{down}{down}{down}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV A,#>88888888888888888888{STRING}
JSR STROUT
NOP
MOV A,#{home}{STRING}
JSR STROUT
NOP
MOVB 8185,#62{INTEGER}
73:
NOP
MOV A,#{rvon}{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,SS{REAL}
CHGCTX #1
JSR STR
MOV B,A
CHGCTX #0
JSR LEN
MOV Y,X
MOV X,#8{INTEGER}
SUB X,Y
MOV Y,X
CHGCTX #1
JSR TAB
NOP
MOV X,SS{REAL}
JSR REALOUT
JSR CRSRRIGHT
NOP
MOV Y,#14{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV X,CH{REAL}
JSR REALOUT
JSR CRSRRIGHT
NOP
MOV Y,#17{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV X,SC{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
NOP
MOVB 7697,#163{INTEGER}
NOP
MOV Y,#0{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV X,N{REAL}
MOV G,B[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#7712{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#60{INTEGER}
74:
NOP
MOV X,N{REAL}
MOV G,B[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#7712{INTEGER}
ADD X,Y
MOV Y,G{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#6.0{REAL}
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#7834{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#8164{INTEGER}
PUSH Y
NOP
MOV Y,#110{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV Y,#8164{INTEGER}
MOV X,N{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP26
JMP SKIP26
NSKIP26:
JMP 80
NOP
SKIP26:
75:
NOP
MOV Y,#1{INTEGER}
MOV O{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(O{REAL})
JSR INITFOR
76:
NOP
MOV Y,#20{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,N{REAL}
ADD X,Y
POP Y
ADD X,Y
MOV R{REAL},X
NOP
MOV Y,#56{INTEGER}
PUSH Y
MOV Y,R{REAL}
MOVB X,(Y)
POP Y
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP27
JMP SKIP27
NSKIP27:
JMP 76
NOP
SKIP27:
77:
NOP
MOV Y,R{REAL}
MOV M{REAL},Y
NOP
MOV Y,#88{INTEGER}
MOV X,R{REAL}
ADD X,Y
PUSH X
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV A,(M{REAL})
JSR INITFOR
NOP
MOV Y,M{REAL}
MOVB (Y),#57{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,M{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#2.0{REAL}
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,E2{REAL}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
LT X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,O{REAL}
GT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP28
JMP SKIP28
NSKIP28:
MOV Y,#2{INTEGER}
NOP
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
MOV Y,#2{INTEGER}
ADD X,Y
MOV Y,#22{INTEGER}
MUL X,Y
MOV Y,R{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#63{INTEGER}
SKIP28:
78:
NOP
MOV Y,#22{INTEGER}
MOV X,R{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
EQ X,Y
PUSH X
MOV Y,#0.5{REAL}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
LT X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP29
JMP SKIP29
NSKIP29:
MOV Y,#22{INTEGER}
NOP
MOV X,R{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#63{INTEGER}
SKIP29:
79:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
80:
NOP
MOV Y,#1{INTEGER}
MOV O{REAL},Y
NOP
MOV Y,E1{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(O{REAL})
JSR INITFOR
81:
NOP
MOV Y,#16{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
PUSH X
MOV Y,#3{INTEGER}
MOV X,N{REAL}
ADD X,Y
POP Y
ADD X,Y
MOV R{REAL},X
NOP
MOV Y,#1{INTEGER}
MOV X,R{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
EQ X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,R{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
EQ X,Y
PUSH X
MOV Y,#22{INTEGER}
MOV X,R{REAL}
SUB X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
NEQ X,Y
PUSH X
MOV Y,#56{INTEGER}
PUSH Y
MOV Y,R{REAL}
MOVB X,(Y)
POP Y
NEQ X,Y
POP Y
OR X,Y
POP Y
OR X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP30
JMP SKIP30
NSKIP30:
JMP 85
NOP
SKIP30:
84:
NOP
MOV Y,R{REAL}
MOVB (Y),#62{INTEGER}
NOP
MOV Y,#22{INTEGER}
MOV X,R{REAL}
SUB X,Y
MOV Y,X
MOVB (Y),#63{INTEGER}
85:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
86:
NOP
MOV Y,#1{INTEGER}
MOV O{REAL},Y
NOP
MOV Y,#4{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(O{REAL})
JSR INITFOR
87:
NOP
MOV Y,#20{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV Y,X
INT X,Y
PUSH X
MOV Y,#21{INTEGER}
MOV X,N{REAL}
SUB X,Y
POP Y
ADD X,Y
MOV R{REAL},X
NOP
MOV Y,#22{INTEGER}
MOV X,R{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV Y,#62{INTEGER}
EQ X,Y
PUSH X
MOV Y,#62{INTEGER}
PUSH Y
MOV Y,R{REAL}
MOVB X,(Y)
POP Y
NEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP31
JMP SKIP31
NSKIP31:
JMP 87
NOP
SKIP31:
88:
NOP
MOV Y,R{REAL}
MOVB (Y),#61{INTEGER}
NOP
MOV Y,G{REAL}
MOV X,R{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#0{INTEGER}
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
89:
NOP
MOVB 7710,#63{INTEGER}
NOP
MOVB 7715,#63{INTEGER}
NOP
MOVB 7731,#63{INTEGER}
NOP
MOVB 7738,#63{INTEGER}
90:
NOP
MOV Y,#7812{INTEGER}
MOV N{REAL},Y
MOV Y,#8142{INTEGER}
PUSH Y
MOV Y,#110{INTEGER}
PUSH Y
MOV A,(N{REAL})
MOV X,#63{INTEGER}
JSR FASTFOR
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#7833{INTEGER}
MOV N{REAL},Y
MOV Y,#8163{INTEGER}
PUSH Y
MOV Y,#110{INTEGER}
PUSH Y
MOV A,(N{REAL})
MOV X,#63{INTEGER}
JSR FASTFOR
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JSR RETURN
RTS
98:
NOP
MOV Y,E3{REAL}
MOV X,Q{REAL}
MUL X,Y
MOV Y,X
MOV X,SS{REAL}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP32
JMP SKIP32
NSKIP32:
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,CH{REAL}
ADD X,Y
MOV CH{REAL},X
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,E3{REAL}
ADD X,Y
MOV E3{REAL},X
NOP
NOP
MOV A,#{home}{rvon}{STRING}
JSR STROUT
NOP
MOV Y,#14{INTEGER}
CHGCTX #1
JSR TAB
NOP
MOV X,CH{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
SKIP32:
99:
NOP
JSR RETURN
RTS
100:
101:
102:
103:
106:
107:
108:
109:
NOP
MOV Y,#0{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV Y,N{REAL}
PUSH Y
JSR READNUMBER
POP X
MOV G,B[]{REAL}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#7616{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#7679{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV M{REAL},Y
NOP
MOV Y,N{REAL}
PUSH Y
MOV X,M{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
110:
NOP
MOV Y,#828{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#914.0{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV M{REAL},Y
NOP
MOV Y,N{REAL}
PUSH Y
MOV X,M{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JSR RETURN
RTS
200:
NOP
MOVB 36879,#25{INTEGER}
NOP
MOVB 36869,#242{INTEGER}
210:
NOP
MOV A,#{clr}{blue}{down}{down}{rvson} THE HARDHAT CLIMBER {rvsoff}{down}{STRING}
JSR STROUT
JSR LINEBREAK
220:
NOP
MOV A,#      written by{STRING}
JSR STROUT
JSR LINEBREAK
221:
NOP
JSR LINEBREAK
225:
NOP
MOV A,#     {black}Chris Lesher{blue}{STRING}
JSR STROUT
JSR LINEBREAK
226:
NOP
JSR LINEBREAK
227:
NOP
MOV A,#  Compute!'s Gazette{STRING}
JSR STROUT
JSR LINEBREAK
228:
NOP
MOV A,#      Jan, 1984{STRING}
JSR STROUT
JSR LINEBREAK
229:
NOP
JSR LINEBREAK
230:
NOP
JSR LINEBREAK
NOP
JSR LINEBREAK
231:
NOP
MOV A,#  2023 turbo edition{STRING}
JSR STROUT
JSR LINEBREAK
240:
NOP
MOV A,# by Antonino Porcino{STRING}
JSR STROUT
JSR LINEBREAK
246:
NOP
JSR LINEBREAK
247:
NOP
MOV A,#{green}github.com/nippur72{STRING}
JSR STROUT
JSR LINEBREAK
248:
NOP
MOV A,#/lo-scalatore{blue}{STRING}
JSR STROUT
JSR LINEBREAK
249:
NOP
JSR LINEBREAK
250:
NOP
JSR LINEBREAK
NOP
JSR LINEBREAK
251:
NOP
MOV A,#    press any key{STRING}
JSR STROUT
JSR LINEBREAK
252:
NOP
MOVB 198,#0{INTEGER}
260:
NOP
JSR GETSTR
MOV K${STRING},A
NOP
MOV B,#{STRING}
MOV A,K${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP33
JMP SKIP33
NSKIP33:
JMP 260
NOP
SKIP33:
270:
NOP
JSR RETURN
RTS
300:
NOP
MOVB 37154,#255{INTEGER}
NOP
MOVB 36869,#240{INTEGER}
NOP
MOV A,#{clr}{blk}your score: {STRING}
JSR STROUT
NOP
MOV X,SS{REAL}
JSR REALOUT
JSR CHECKCMD
JSR LINEBREAK
320:
NOP
MOV A,#{down}{down}{down}{down}press any key{STRING}
JSR STROUT
JSR LINEBREAK
325:
NOP
MOVB 198,#0{INTEGER}
330:
NOP
JSR GETSTR
MOV K${STRING},A
NOP
MOV B,#{STRING}
MOV A,K${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP34
JMP SKIP34
NSKIP34:
JMP 330
NOP
SKIP34:
340:
NOP
JSR RUN
997:
NOP
998:
NOP
999:
NOP
JSR END
RTS
