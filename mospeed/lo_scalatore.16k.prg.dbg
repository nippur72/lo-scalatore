117	.$2000	TSX
118	.$2001	STX SP_SAVE
120	.$2004	PROGRAMSTART:
121	.$2004	JSR START
123	.$2007	LINE_0:
125	.$2007	LDY #30
126	.$2009	STY 648
128	.$200c	LDY #240
129	.$200e	STY 36869
131	.$2011	LDY #150
132	.$2013	STY 36866
134	.$2016	LDA #<CONST_3
135	.$2018	LDY #>CONST_3
136	.$201a	JSR STROUTBRKWL
139	.$201d	LDY #255
140	.$201f	STY 36869
142	.$2022	LDY #143
143	.$2024	STY 36878
150	.$2027	LDY #25
151	.$2029	STY 36879
154	.$202c	LINE_1:
156	.$202c	LDA #<CONST_7R
157	.$202e	LDY #>CONST_7R
158	.$2030	JSR COPY2_XYA_XREG
162	.$2033	LDA #<CONST_8
163	.$2035	LDY #>CONST_8
164	.$2037	JSR COPY2_XYA_YREG
168	.$203a	LDA #<VAR_DO[]
169	.$203c	LDY #>VAR_DO[]
170	.$203e	STA G_REG
171	.$2040	STY G_REG+1
172	.$2042	JSR ARRAYSTORE_REAL
173	.$2045	LDA #<CONST_9R
174	.$2047	LDY #>CONST_9R
175	.$2049	JSR COPY2_XYA_XREG
179	.$204c	LDA #<CONST_9R
180	.$204e	LDY #>CONST_9R
181	.$2050	JSR COPY2_XYA_YREG
185	.$2053	LDA #<VAR_DO[]
186	.$2055	LDY #>VAR_DO[]
187	.$2057	STA G_REG
188	.$2059	STY G_REG+1
189	.$205b	JSR ARRAYSTORE_REAL
190	.$205e	JSR ONETOFAC
195	.$2061	JSR FACRND
196	.$2064	JSR FACXREG
197	.$2067	LDY #1
198	.$2069	STY A_REG
200	.$206c	JSR SHL
205	.$206f	JSR BASINT
206	.$2072	JSR FACXREG
208	.$2075	LDA #<VAR_DO[]
209	.$2077	LDY #>VAR_DO[]
210	.$2079	JSR ARRAYACCESS_REAL_S
212	.$207c	JSR XREGFAC
214	.$207f	LDX #<VAR_DI
215	.$2081	LDY #>VAR_DI
217	.$2083	JSR FACMEM
219	.$2086	LINE_2:
222	.$2086	LINE_3:
223	.$2086	LDX #4
224	.$2088	dcloop229_1:
225	.$2088	LDA CONST_10,X
226	.$208b	STA VAR_KK,X
227	.$208e	LDA CONST_9R,X
228	.$2091	STA VAR_SC,X
229	.$2094	LDA CONST_11R,X
230	.$2097	STA VAR_CH,X
231	.$209a	DEX
232	.$209b	BPL dcloop229_1
235	.$209d	LDA #0
236	.$209f	STA VAR_E1
237	.$20a2	STA VAR_E1+1
238	.$20a5	STA VAR_E1+2
239	.$20a8	STA VAR_E1+3
240	.$20ab	STA VAR_E1+4
242	.$20ae	LDA #<CONST_7R
243	.$20b0	LDY #>CONST_7R
244	.$20b2	JSR COPY2_XYA_XREG
248	.$20b5	LDA #<CONST_12R
249	.$20b7	LDY #>CONST_12R
250	.$20b9	JSR COPY2_XYA_YREG
254	.$20bc	LDA #<VAR_D[]
255	.$20be	LDY #>VAR_D[]
256	.$20c0	STA G_REG
257	.$20c2	STY G_REG+1
258	.$20c4	JSR ARRAYSTORE_REAL
259	.$20c7	LDA #<CONST_9R
260	.$20c9	LDY #>CONST_9R
261	.$20cb	JSR COPY2_XYA_XREG
265	.$20ce	LDA #<CONST_13
266	.$20d0	LDY #>CONST_13
267	.$20d2	JSR COPY2_XYA_YREG
271	.$20d5	LDA #<VAR_D[]
272	.$20d7	LDY #>VAR_D[]
273	.$20d9	STA G_REG
274	.$20db	STY G_REG+1
275	.$20dd	JSR ARRAYSTORE_REAL
276	.$20e0	LDA #<CONST_12R
277	.$20e2	LDY #>CONST_12R
278	.$20e4	JSR COPY2_XYA_XREG
282	.$20e7	LDA #<CONST_14
283	.$20e9	LDY #>CONST_14
284	.$20eb	JSR COPY2_XYA_YREG
288	.$20ee	LDA #<VAR_D[]
289	.$20f0	LDY #>VAR_D[]
290	.$20f2	STA G_REG
291	.$20f4	STY G_REG+1
292	.$20f6	JSR ARRAYSTORE_REAL
293	.$20f9	LDX #4
294	.$20fb	dcloop229_4:
295	.$20fb	LDA CONST_15R,X
296	.$20fe	STA VAR_Z,X
297	.$2101	LDA CONST_9R,X
298	.$2104	STA VAR_E3,X
299	.$2107	LDA CONST_16R,X
300	.$210a	STA VAR_Q,X
301	.$210d	DEX
302	.$210e	BPL dcloop229_4
306	.$2110	LINE_10:
308	.$2110	JSR GOSUB
309	.$2113	JSR LINE_200
310	.$2116	JSR GOSUB
311	.$2119	JSR LINE_100
312	.$211c	LDY #255
313	.$211e	STY 36869
316	.$2121	LINE_15:
318	.$2121	JSR GOSUB
319	.$2124	JSR LINE_70
320	.$2127	LDA #0
321	.$2129	STA VAR_H
322	.$212c	STA VAR_H+1
323	.$212f	STA VAR_H+2
324	.$2132	STA VAR_H+3
325	.$2135	STA VAR_H+4
327	.$2138	STA VAR_Y
328	.$213b	STA VAR_Y+1
329	.$213e	STA VAR_Y+2
330	.$2141	STA VAR_Y+3
331	.$2144	STA VAR_Y+4
334	.$2147	LINE_16:
336	.$2147	JSR ONETOFAC
341	.$214a	JSR FACRND
342	.$214d	JSR FACXREG
343	.$2150	LDY #4
344	.$2152	LDA #0
345	.$2154	STY A_REG
346	.$2157	STA A_REG+1
347	.$215a	JSR COPY_XREG2YREG
351	.$215d	JSR SHL
352	.$2160	JSR FACXREG
354	.$2163	LDY #2
355	.$2165	LDA #0
356	.$2167	STY A_REG
357	.$216a	STA A_REG+1
358	.$216d	JSR YREGFAC
361	.$2170	JSR SHL
363	.$2173	LDA #<X_REG
364	.$2175	LDY #>X_REG
366	.$2177	JSR FACADD
371	.$217a	JSR BASINT
372	.$217d	JSR FACXREG
374	.$2180	LDA #<CONST_17R
375	.$2182	LDY #>CONST_17R
376	.$2184	JSR REALFAC
379	.$2187	LDA #<X_REG
380	.$2189	LDY #>X_REG
382	.$218b	JSR FACADD
385	.$218e	LDX #<VAR_S
386	.$2190	LDY #>VAR_S
387	.$2192	JSR FACMEM
391	.$2195	JSR FACWORD
392	.$2198	STY MOVBSELF8+1
393	.$219b	STA MOVBSELF8+2
394	.$219e	MOVBSELF8:
395	.$219e	LDA $FFFF
396	.$21a1	CMP #59
397	.$21a3	BCC PEEKLT0
398	.$21a5	BEQ PEEKEQ0
399	.$21a7	LDA #$FF
400	.$21a9	JMP PEEKDONE0
401	.$21ac	PEEKLT0:
402	.$21ac	LDA #$01
403	.$21ae	JMP PEEKDONE0
404	.$21b1	PEEKEQ0:
405	.$21b1	LDA #0
406	.$21b3	PEEKDONE0:
410	.$21b3	BEQ EQ_EQ0
411	.$21b5	LDA #<REAL_CONST_ZERO
412	.$21b7	LDY #>REAL_CONST_ZERO
413	.$21b9	JMP EQ_SKIP0
414	.$21bc	EQ_EQ0:
415	.$21bc	LDA #<REAL_CONST_MINUS_ONE
416	.$21be	LDY #>REAL_CONST_MINUS_ONE
417	.$21c0	EQ_SKIP0:
419	.$21c0	JSR REALFACPUSH
421	.$21c3	LDA #<CONST_19R
422	.$21c5	LDY #>CONST_19R
423	.$21c7	JSR REALFAC
424	.$21ca	LDA #<VAR_S
425	.$21cc	LDY #>VAR_S
426	.$21ce	JSR FACADD
432	.$21d1	JSR FACWORD
433	.$21d4	STY MOVBSELF9+1
434	.$21d7	STA MOVBSELF9+2
435	.$21da	MOVBSELF9:
436	.$21da	LDA $FFFF
437	.$21dd	CMP #62
438	.$21df	BCC PEEKLT1
439	.$21e1	BEQ PEEKEQ1
440	.$21e3	LDA #$FF
441	.$21e5	JMP PEEKDONE1
442	.$21e8	PEEKLT1:
443	.$21e8	LDA #$01
444	.$21ea	JMP PEEKDONE1
445	.$21ed	PEEKEQ1:
446	.$21ed	LDA #0
447	.$21ef	PEEKDONE1:
451	.$21ef	BEQ EQ_EQ1
452	.$21f1	LDA #<REAL_CONST_ZERO
453	.$21f3	LDY #>REAL_CONST_ZERO
454	.$21f5	JMP EQ_SKIP1
455	.$21f8	EQ_EQ1:
456	.$21f8	LDA #<REAL_CONST_MINUS_ONE
457	.$21fa	LDY #>REAL_CONST_MINUS_ONE
458	.$21fc	EQ_SKIP1:
460	.$21fc	JSR REALFAC
461	.$21ff	JSR FACXREG
463	.$2202	JSR POPREAL2X
465	.$2205	JSR FASTOR
468	.$2208	JSR FACXREG
470	.$220b	LDA X_REG
471	.$220d	COMP_SKP0:
472	.$220d	BEQ LINE_SKIP35
475	.$220f	LINE_NSKIP35:
477	.$220f	JMP LINE_16
479	.$2212	LINE_SKIP35:
482	.$2212	LINE_17:
484	.$2212	LDA #<VAR_S
485	.$2214	LDY #>VAR_S
486	.$2216	JSR REALFAC
489	.$2219	JSR FACWORD
490	.$221c	STY MOVBSELF10+1
491	.$221f	STA MOVBSELF10+2
492	.$2222	MOVBSELF10:
493	.$2222	LDY $FFFF
494	.$2225	LDA #0
496	.$2227	JSR INTFAC
498	.$222a	LDX #<VAR_T
499	.$222c	LDY #>VAR_T
501	.$222e	JSR FACMEM
502	.$2231	LDA #<VAR_S
503	.$2233	LDY #>VAR_S
504	.$2235	JSR REALFAC
507	.$2238	JSR FACWORD
508	.$223b	STY MOVBSELF11+1
509	.$223e	STA MOVBSELF11+2
510	.$2241	LDA #$3A
511	.$2243	MOVBSELF11:
512	.$2243	STA $FFFF
513	.$2246	LDA #<CONST_22
514	.$2248	LDY #>CONST_22
515	.$224a	JSR REALFAC
516	.$224d	LDA #<VAR_S
517	.$224f	LDY #>VAR_S
518	.$2251	JSR FACADD
524	.$2254	JSR FACWORD
525	.$2257	STY MOVBSELF12+1
526	.$225a	STA MOVBSELF12+2
527	.$225d	LDA #$0
528	.$225f	MOVBSELF12:
529	.$225f	STA $FFFF
531	.$2262	LINE_19:
533	.$2262	LDA #<VAR_Y
534	.$2264	LDY #>VAR_Y
535	.$2266	JSR COPY2_XYA_XREG
539	.$2269	LDA #<VAR_B[]
540	.$226b	LDY #>VAR_B[]
541	.$226d	JSR ARRAYACCESS_REAL_S
543	.$2270	LDA #<CONST_23R
544	.$2272	LDY #>CONST_23R
545	.$2274	JSR REALFAC
548	.$2277	LDA #<X_REG
549	.$2279	LDY #>X_REG
551	.$227b	JSR FACADD
554	.$227e	LDX #<VAR_V
555	.$2280	LDY #>VAR_V
557	.$2282	JSR FACMEM
558	.$2285	LDX #4
559	.$2287	dcloop229_7:
560	.$2287	LDA CONST_20R,X
561	.$228a	STA VAR_W,X
562	.$228d	DEX
563	.$228e	BPL dcloop229_7
565	.$2290	JSR ONETOFAC
570	.$2293	JSR FACRND
571	.$2296	JSR FACXREG
572	.$2299	LDY #1
573	.$229b	STY A_REG
575	.$229e	JSR SHL
580	.$22a1	JSR BASINT
581	.$22a4	JSR FACXREG
583	.$22a7	LDA #<VAR_DO[]
584	.$22a9	LDY #>VAR_DO[]
585	.$22ab	JSR ARRAYACCESS_REAL_S
587	.$22ae	JSR XREGFAC
589	.$22b1	LDX #<VAR_DO
590	.$22b3	LDY #>VAR_DO
592	.$22b5	JSR FACMEM
594	.$22b8	LINE_20:
596	.$22b8	LDA #<828
597	.$22ba	STA TMP_ZP
598	.$22bc	LDA #>828
599	.$22be	STA TMP_ZP+1
600	.$22c0	JSR SYSTEMCALL
601	.$22c3	LDA #<900
602	.$22c5	STA TMP_ZP
603	.$22c7	LDA #>900
604	.$22c9	STA TMP_ZP+1
605	.$22cb	JSR SYSTEMCALL
606	.$22ce	LDA #<900
607	.$22d0	STA TMP_ZP
608	.$22d2	LDA #>900
609	.$22d4	STA TMP_ZP+1
610	.$22d6	JSR SYSTEMCALL
611	.$22d9	LDY 1
612	.$22db	LDA #0
614	.$22dd	STY TMP_ZP
617	.$22df	ON1SUB0:
618	.$22df	LDX #1
619	.$22e1	CPX TMP_ZP
620	.$22e3	COMP_SKP1:
621	.$22e3	BNE AFTER1SUB0
622	.$22e5	JMP LINE_35
623	.$22e8	AFTER1SUB0:
624	.$22e8	ON1SUB1:
625	.$22e8	INX
626	.$22e9	CPX TMP_ZP
627	.$22eb	COMP_SKP2:
628	.$22eb	BNE AFTER1SUB1
629	.$22ed	JMP LINE_26
630	.$22f0	AFTER1SUB1:
631	.$22f0	ON1SUB2:
632	.$22f0	INX
633	.$22f1	CPX TMP_ZP
634	.$22f3	COMP_SKP3:
635	.$22f3	BNE AFTER1SUB2
636	.$22f5	JMP LINE_28
637	.$22f8	AFTER1SUB2:
638	.$22f8	ON1SUB3:
639	.$22f8	INX
640	.$22f9	CPX TMP_ZP
641	.$22fb	COMP_SKP4:
642	.$22fb	BNE AFTER1SUB3
643	.$22fd	JMP LINE_31
644	.$2300	AFTER1SUB3:
645	.$2300	ON1SUB4:
646	.$2300	INX
647	.$2301	CPX TMP_ZP
648	.$2303	COMP_SKP5:
649	.$2303	BNE AFTER1SUB4
650	.$2305	JMP LINE_33
651	.$2308	AFTER1SUB4:
681	.$2308	GSKIPON1:
683	.$2308	LINE_21:
685	.$2308	JMP LINE_41
687	.$230b	LINE_26:
689	.$230b	LDA #<CONST_19R
690	.$230d	LDY #>CONST_19R
691	.$230f	JSR REALFAC
692	.$2312	LDA #<VAR_S
693	.$2314	LDY #>VAR_S
694	.$2316	JSR FACADD
700	.$2319	JSR FACWORD
701	.$231c	STY MOVBSELF14+1
702	.$231f	STA MOVBSELF14+2
703	.$2322	MOVBSELF14:
704	.$2322	LDA $FFFF
705	.$2325	CMP #57
706	.$2327	BCC PEEKLT2
707	.$2329	BEQ PEEKEQ2
708	.$232b	LDA #$FF
709	.$232d	JMP PEEKDONE2
710	.$2330	PEEKLT2:
711	.$2330	LDA #$01
712	.$2332	JMP PEEKDONE2
713	.$2335	PEEKEQ2:
714	.$2335	LDA #0
715	.$2337	PEEKDONE2:
718	.$2337	BEQ EQ_EQ2
719	.$2339	LDA #0
720	.$233b	JMP EQ_SKIP2
721	.$233e	EQ_EQ2:
722	.$233e	LDA #$1
723	.$2340	EQ_SKIP2:
724	.$2340	COMP_SKP6:
725	.$2340	BNE LINE_NSKIP36
727	.$2342	JMP LINE_SKIP36
729	.$2345	LINE_NSKIP36:
731	.$2345	LDA #<VAR_S
732	.$2347	LDY #>VAR_S
733	.$2349	JSR COPY2_XYA_YREG
737	.$234c	LDA #<Y_REG
738	.$234e	LDY #>Y_REG
740	.$2350	JSR REALFACPUSH
742	.$2353	LDA #<VAR_T
743	.$2355	LDY #>VAR_T
744	.$2357	JSR COPY2_XYA_XREG
748	.$235a	JSR POPREAL
749	.$235d	JSR FACWORD
751	.$2360	STY MOVBSELF15+1
752	.$2363	STA MOVBSELF15+2
753	.$2366	JSR XREGFAC
756	.$2369	JSR FACWORD
757	.$236c	MOVBSELF15:
758	.$236c	STY $FFFF
759	.$236f	LDA #<CONST_22
760	.$2371	LDY #>CONST_22
761	.$2373	JSR COPY2_XYA_YREG
765	.$2376	LDA #<VAR_S
766	.$2378	LDY #>VAR_S
767	.$237a	JSR COPY2_XYA_XREG
771	.$237d	JSR YREGFAC
773	.$2380	LDA #<X_REG
774	.$2382	LDY #>X_REG
776	.$2384	JSR FACADD
779	.$2387	JSR PUSHREAL
780	.$238a	LDA #<CONST_27
781	.$238c	LDY #>CONST_27
782	.$238e	JSR REALFAC
783	.$2391	LDA #<VAR_T
784	.$2393	LDY #>VAR_T
785	.$2395	JSR MEMSUB
788	.$2398	JSR FACXREG
790	.$239b	LDA #<VAR_D[]
791	.$239d	LDY #>VAR_D[]
792	.$239f	JSR ARRAYACCESS_REAL_S
794	.$23a2	JSR POPREAL
795	.$23a5	JSR FACWORD
797	.$23a8	STY MOVBSELF16+1
798	.$23ab	STA MOVBSELF16+2
799	.$23ae	JSR XREGFAC
802	.$23b1	JSR FACWORD
803	.$23b4	MOVBSELF16:
804	.$23b4	STY $FFFF
805	.$23b7	LDA #<CONST_19R
806	.$23b9	LDY #>CONST_19R
807	.$23bb	JSR REALFAC
808	.$23be	LDA #<VAR_S
809	.$23c0	LDY #>VAR_S
810	.$23c2	JSR FACADD
814	.$23c5	LDX #<VAR_S
815	.$23c7	LDY #>VAR_S
817	.$23c9	JSR FACMEM
818	.$23cc	JMP LINE_40
820	.$23cf	LINE_SKIP36:
823	.$23cf	LINE_27:
825	.$23cf	JMP LINE_41
827	.$23d2	LINE_28:
829	.$23d2	LDX #4
830	.$23d4	dcloop229_8:
831	.$23d4	LDA CONST_8,X
832	.$23d7	STA VAR_DI,X
833	.$23da	DEX
834	.$23db	BPL dcloop229_8
836	.$23dd	LDA #<CONST_28R
837	.$23df	LDY #>CONST_28R
838	.$23e1	JSR REALFAC
839	.$23e4	LDA #<VAR_S
840	.$23e6	LDY #>VAR_S
841	.$23e8	JSR FACADD
847	.$23eb	JSR FACWORD
848	.$23ee	STY MOVBSELF17+1
849	.$23f1	STA MOVBSELF17+2
850	.$23f4	MOVBSELF17:
851	.$23f4	LDA $FFFF
852	.$23f7	CMP #62
853	.$23f9	BCC PEEKLT3
854	.$23fb	BEQ PEEKEQ3
855	.$23fd	LDA #$FF
856	.$23ff	JMP PEEKDONE3
857	.$2402	PEEKLT3:
858	.$2402	LDA #$01
859	.$2404	JMP PEEKDONE3
860	.$2407	PEEKEQ3:
861	.$2407	LDA #0
862	.$2409	PEEKDONE3:
866	.$2409	BEQ LT_LT_EQ3
867	.$240b	ROL
868	.$240c	BCC LT_LT3
869	.$240e	LT_LT_EQ3:
870	.$240e	LDA #0
871	.$2410	JMP LT_SKIP3
872	.$2413	LT_LT3:
873	.$2413	LDA #$1
874	.$2415	LT_SKIP3:
875	.$2415	COMP_SKP7:
876	.$2415	BNE LINE_NSKIP37
878	.$2417	JMP LINE_SKIP37
880	.$241a	LINE_NSKIP37:
882	.$241a	LDA #<VAR_S
883	.$241c	LDY #>VAR_S
884	.$241e	JSR COPY2_XYA_YREG
888	.$2421	LDA #<Y_REG
889	.$2423	LDY #>Y_REG
891	.$2425	JSR REALFACPUSH
893	.$2428	LDA #<VAR_T
894	.$242a	LDY #>VAR_T
895	.$242c	JSR COPY2_XYA_XREG
899	.$242f	JSR POPREAL
900	.$2432	JSR FACWORD
902	.$2435	STY MOVBSELF18+1
903	.$2438	STA MOVBSELF18+2
904	.$243b	JSR XREGFAC
907	.$243e	JSR FACWORD
908	.$2441	MOVBSELF18:
909	.$2441	STY $FFFF
910	.$2444	LDA #<CONST_22
911	.$2446	LDY #>CONST_22
912	.$2448	JSR COPY2_XYA_YREG
916	.$244b	LDA #<VAR_S
917	.$244d	LDY #>VAR_S
918	.$244f	JSR COPY2_XYA_XREG
922	.$2452	JSR YREGFAC
924	.$2455	LDA #<X_REG
925	.$2457	LDY #>X_REG
927	.$2459	JSR FACADD
930	.$245c	JSR PUSHREAL
931	.$245f	LDA #<CONST_27
932	.$2461	LDY #>CONST_27
933	.$2463	JSR REALFAC
934	.$2466	LDA #<VAR_T
935	.$2468	LDY #>VAR_T
936	.$246a	JSR MEMSUB
939	.$246d	JSR FACXREG
941	.$2470	LDA #<VAR_D[]
942	.$2472	LDY #>VAR_D[]
943	.$2474	JSR ARRAYACCESS_REAL_S
945	.$2477	JSR POPREAL
946	.$247a	JSR FACWORD
948	.$247d	STY MOVBSELF19+1
949	.$2480	STA MOVBSELF19+2
950	.$2483	JSR XREGFAC
953	.$2486	JSR FACWORD
954	.$2489	MOVBSELF19:
955	.$2489	STY $FFFF
956	.$248c	JSR ONETOFAC
958	.$248f	LDA #<VAR_S
959	.$2491	LDY #>VAR_S
960	.$2493	JSR MEMSUB
964	.$2496	LDX #<VAR_S
965	.$2498	LDY #>VAR_S
967	.$249a	JSR FACMEM
968	.$249d	JMP LINE_40
970	.$24a0	LINE_SKIP37:
973	.$24a0	LINE_29:
975	.$24a0	LDA #<CONST_26
976	.$24a2	LDY #>CONST_26
977	.$24a4	JSR REALFAC
978	.$24a7	LDA #<VAR_T
979	.$24a9	LDY #>VAR_T
980	.$24ab	JSR CMPFAC
982	.$24ae	BNE NEQ_NEQ4
983	.$24b0	LDA #0
984	.$24b2	JMP NEQ_SKIP4
985	.$24b5	NEQ_NEQ4:
986	.$24b5	LDA #$1
987	.$24b7	NEQ_SKIP4:
988	.$24b7	COMP_SKP8:
989	.$24b7	BNE LINE_NSKIP38
991	.$24b9	JMP LINE_SKIP38
993	.$24bc	LINE_NSKIP38:
995	.$24bc	LDA #<VAR_S
996	.$24be	LDY #>VAR_S
997	.$24c0	JSR COPY2_XYA_YREG
1001	.$24c3	LDA #<Y_REG
1002	.$24c5	LDY #>Y_REG
1004	.$24c7	JSR REALFACPUSH
1006	.$24ca	LDA #<VAR_T
1007	.$24cc	LDY #>VAR_T
1008	.$24ce	JSR COPY2_XYA_XREG
1012	.$24d1	JSR POPREAL
1013	.$24d4	JSR FACWORD
1015	.$24d7	STY MOVBSELF20+1
1016	.$24da	STA MOVBSELF20+2
1017	.$24dd	JSR XREGFAC
1020	.$24e0	JSR FACWORD
1021	.$24e3	MOVBSELF20:
1022	.$24e3	STY $FFFF
1023	.$24e6	LDA #<CONST_22
1024	.$24e8	LDY #>CONST_22
1025	.$24ea	JSR COPY2_XYA_YREG
1029	.$24ed	LDA #<VAR_S
1030	.$24ef	LDY #>VAR_S
1031	.$24f1	JSR COPY2_XYA_XREG
1035	.$24f4	JSR YREGFAC
1037	.$24f7	LDA #<X_REG
1038	.$24f9	LDY #>X_REG
1040	.$24fb	JSR FACADD
1043	.$24fe	JSR PUSHREAL
1044	.$2501	LDA #<CONST_27
1045	.$2503	LDY #>CONST_27
1046	.$2505	JSR REALFAC
1047	.$2508	LDA #<VAR_T
1048	.$250a	LDY #>VAR_T
1049	.$250c	JSR MEMSUB
1052	.$250f	JSR FACXREG
1054	.$2512	LDA #<VAR_D[]
1055	.$2514	LDY #>VAR_D[]
1056	.$2516	JSR ARRAYACCESS_REAL_S
1058	.$2519	JSR POPREAL
1059	.$251c	JSR FACWORD
1061	.$251f	STY MOVBSELF21+1
1062	.$2522	STA MOVBSELF21+2
1063	.$2525	JSR XREGFAC
1066	.$2528	JSR FACWORD
1067	.$252b	MOVBSELF21:
1068	.$252b	STY $FFFF
1069	.$252e	LDA #<VAR_DI
1070	.$2530	LDY #>VAR_DI
1071	.$2532	JSR REALFAC
1072	.$2535	LDA #<VAR_S
1073	.$2537	LDY #>VAR_S
1074	.$2539	JSR FACADD
1078	.$253c	LDX #<VAR_S
1079	.$253e	LDY #>VAR_S
1081	.$2540	JSR FACMEM
1082	.$2543	LDA #<VAR_S
1083	.$2545	LDY #>VAR_S
1084	.$2547	JSR REALFAC
1087	.$254a	JSR FACWORD
1088	.$254d	STY MOVBSELF22+1
1089	.$2550	STA MOVBSELF22+2
1090	.$2553	MOVBSELF22:
1091	.$2553	LDY $FFFF
1092	.$2556	LDA #0
1094	.$2558	JSR INTFAC
1096	.$255b	LDX #<VAR_T
1097	.$255d	LDY #>VAR_T
1099	.$255f	JSR FACMEM
1100	.$2562	JMP LINE_55
1102	.$2565	LINE_SKIP38:
1105	.$2565	LINE_30:
1107	.$2565	JMP LINE_41
1109	.$2568	LINE_31:
1111	.$2568	LDA #<CONST_26
1112	.$256a	LDY #>CONST_26
1113	.$256c	JSR REALFAC
1114	.$256f	LDA #<VAR_T
1115	.$2571	LDY #>VAR_T
1116	.$2573	JSR CMPFAC
1118	.$2576	BEQ EQ_EQ5
1119	.$2578	LDA #0
1120	.$257a	JMP EQ_SKIP5
1121	.$257d	EQ_EQ5:
1122	.$257d	LDA #$1
1123	.$257f	EQ_SKIP5:
1124	.$257f	COMP_SKP9:
1125	.$257f	BNE LINE_NSKIP39
1127	.$2581	JMP LINE_SKIP39
1129	.$2584	LINE_NSKIP39:
1131	.$2584	LDA #<VAR_S
1132	.$2586	LDY #>VAR_S
1133	.$2588	JSR COPY2_XYA_YREG
1137	.$258b	LDA #<Y_REG
1138	.$258d	LDY #>Y_REG
1140	.$258f	JSR REALFACPUSH
1142	.$2592	LDA #<VAR_T
1143	.$2594	LDY #>VAR_T
1144	.$2596	JSR COPY2_XYA_XREG
1148	.$2599	JSR POPREAL
1149	.$259c	JSR FACWORD
1151	.$259f	STY MOVBSELF23+1
1152	.$25a2	STA MOVBSELF23+2
1153	.$25a5	JSR XREGFAC
1156	.$25a8	JSR FACWORD
1157	.$25ab	MOVBSELF23:
1158	.$25ab	STY $FFFF
1159	.$25ae	LDA #<CONST_22
1160	.$25b0	LDY #>CONST_22
1161	.$25b2	JSR COPY2_XYA_YREG
1165	.$25b5	LDA #<VAR_S
1166	.$25b7	LDY #>VAR_S
1167	.$25b9	JSR COPY2_XYA_XREG
1171	.$25bc	JSR YREGFAC
1173	.$25bf	LDA #<X_REG
1174	.$25c1	LDY #>X_REG
1176	.$25c3	JSR FACADD
1179	.$25c6	JSR PUSHREAL
1180	.$25c9	LDA #<CONST_27
1181	.$25cb	LDY #>CONST_27
1182	.$25cd	JSR REALFAC
1183	.$25d0	LDA #<VAR_T
1184	.$25d2	LDY #>VAR_T
1185	.$25d4	JSR MEMSUB
1188	.$25d7	JSR FACXREG
1190	.$25da	LDA #<VAR_D[]
1191	.$25dc	LDY #>VAR_D[]
1192	.$25de	JSR ARRAYACCESS_REAL_S
1194	.$25e1	JSR POPREAL
1195	.$25e4	JSR FACWORD
1197	.$25e7	STY MOVBSELF24+1
1198	.$25ea	STA MOVBSELF24+2
1199	.$25ed	JSR XREGFAC
1202	.$25f0	JSR FACWORD
1203	.$25f3	MOVBSELF24:
1204	.$25f3	STY $FFFF
1205	.$25f6	LDA #<CONST_19R
1206	.$25f8	LDY #>CONST_19R
1207	.$25fa	JSR REALFAC
1208	.$25fd	LDA #<VAR_S
1209	.$25ff	LDY #>VAR_S
1210	.$2601	JSR MEMSUB
1214	.$2604	LDX #<VAR_S
1215	.$2606	LDY #>VAR_S
1217	.$2608	JSR FACMEM
1218	.$260b	JMP LINE_40
1220	.$260e	LINE_SKIP39:
1223	.$260e	LINE_32:
1225	.$260e	JMP LINE_41
1227	.$2611	LINE_33:
1229	.$2611	LDX #4
1230	.$2613	dcloop389_1:
1231	.$2613	LDA CONST_9R,X
1232	.$2616	STA VAR_DI,X
1233	.$2619	DEX
1234	.$261a	BPL dcloop389_1
1236	.$261c	LDA #<CONST_29R
1237	.$261e	LDY #>CONST_29R
1238	.$2620	JSR REALFAC
1239	.$2623	LDA #<VAR_S
1240	.$2625	LDY #>VAR_S
1241	.$2627	JSR FACADD
1247	.$262a	JSR FACWORD
1248	.$262d	STY MOVBSELF25+1
1249	.$2630	STA MOVBSELF25+2
1250	.$2633	MOVBSELF25:
1251	.$2633	LDA $FFFF
1252	.$2636	CMP #62
1253	.$2638	BCC PEEKLT4
1254	.$263a	BEQ PEEKEQ4
1255	.$263c	LDA #$FF
1256	.$263e	JMP PEEKDONE4
1257	.$2641	PEEKLT4:
1258	.$2641	LDA #$01
1259	.$2643	JMP PEEKDONE4
1260	.$2646	PEEKEQ4:
1261	.$2646	LDA #0
1262	.$2648	PEEKDONE4:
1266	.$2648	BEQ LT_LT_EQ6
1267	.$264a	ROL
1268	.$264b	BCC LT_LT6
1269	.$264d	LT_LT_EQ6:
1270	.$264d	LDA #0
1271	.$264f	JMP LT_SKIP6
1272	.$2652	LT_LT6:
1273	.$2652	LDA #$1
1274	.$2654	LT_SKIP6:
1275	.$2654	COMP_SKP10:
1276	.$2654	BNE LINE_NSKIP40
1278	.$2656	JMP LINE_SKIP40
1280	.$2659	LINE_NSKIP40:
1282	.$2659	LDA #<VAR_S
1283	.$265b	LDY #>VAR_S
1284	.$265d	JSR COPY2_XYA_YREG
1288	.$2660	LDA #<Y_REG
1289	.$2662	LDY #>Y_REG
1291	.$2664	JSR REALFACPUSH
1293	.$2667	LDA #<VAR_T
1294	.$2669	LDY #>VAR_T
1295	.$266b	JSR COPY2_XYA_XREG
1299	.$266e	JSR POPREAL
1300	.$2671	JSR FACWORD
1302	.$2674	STY MOVBSELF26+1
1303	.$2677	STA MOVBSELF26+2
1304	.$267a	JSR XREGFAC
1307	.$267d	JSR FACWORD
1308	.$2680	MOVBSELF26:
1309	.$2680	STY $FFFF
1310	.$2683	LDA #<CONST_22
1311	.$2685	LDY #>CONST_22
1312	.$2687	JSR COPY2_XYA_YREG
1316	.$268a	LDA #<VAR_S
1317	.$268c	LDY #>VAR_S
1318	.$268e	JSR COPY2_XYA_XREG
1322	.$2691	JSR YREGFAC
1324	.$2694	LDA #<X_REG
1325	.$2696	LDY #>X_REG
1327	.$2698	JSR FACADD
1330	.$269b	JSR PUSHREAL
1331	.$269e	LDA #<CONST_27
1332	.$26a0	LDY #>CONST_27
1333	.$26a2	JSR REALFAC
1334	.$26a5	LDA #<VAR_T
1335	.$26a7	LDY #>VAR_T
1336	.$26a9	JSR MEMSUB
1339	.$26ac	JSR FACXREG
1341	.$26af	LDA #<VAR_D[]
1342	.$26b1	LDY #>VAR_D[]
1343	.$26b3	JSR ARRAYACCESS_REAL_S
1345	.$26b6	JSR POPREAL
1346	.$26b9	JSR FACWORD
1348	.$26bc	STY MOVBSELF27+1
1349	.$26bf	STA MOVBSELF27+2
1350	.$26c2	JSR XREGFAC
1353	.$26c5	JSR FACWORD
1354	.$26c8	MOVBSELF27:
1355	.$26c8	STY $FFFF
1356	.$26cb	JSR ONETOFAC
1358	.$26ce	LDA #<VAR_S
1359	.$26d0	LDY #>VAR_S
1360	.$26d2	JSR FACADD
1364	.$26d5	LDX #<VAR_S
1365	.$26d7	LDY #>VAR_S
1367	.$26d9	JSR FACMEM
1368	.$26dc	JMP LINE_40
1370	.$26df	LINE_SKIP40:
1373	.$26df	LINE_34:
1375	.$26df	JMP LINE_29
1377	.$26e2	LINE_35:
1379	.$26e2	LDY #240
1380	.$26e4	STY 36876
1382	.$26e7	LDA #<VAR_T
1383	.$26e9	LDY #>VAR_T
1384	.$26eb	JSR COPY2_XYA_XREG
1385	.$26ee	LDA #<VAR_S
1386	.$26f0	LDY #>VAR_S
1387	.$26f2	JSR REALFAC
1388	.$26f5	JSR FACWORD
1391	.$26f8	STY MOVBSELF29+1
1392	.$26fb	STA MOVBSELF29+2
1393	.$26fe	JSR XREGFAC
1396	.$2701	JSR FACWORD
1397	.$2704	MOVBSELF29:
1398	.$2704	STY $FFFF
1399	.$2707	LDA #<CONST_22
1400	.$2709	LDY #>CONST_22
1401	.$270b	JSR REALFAC
1402	.$270e	LDA #<VAR_S
1403	.$2710	LDY #>VAR_S
1404	.$2712	JSR FACADD
1408	.$2715	JSR PUSHREAL
1409	.$2718	LDA #<CONST_27
1410	.$271a	LDY #>CONST_27
1411	.$271c	JSR REALFAC
1412	.$271f	LDA #<VAR_T
1413	.$2721	LDY #>VAR_T
1414	.$2723	JSR MEMSUB
1417	.$2726	JSR FACXREG
1419	.$2729	LDA #<VAR_D[]
1420	.$272b	LDY #>VAR_D[]
1421	.$272d	JSR ARRAYACCESS_REAL_S
1423	.$2730	JSR POPREAL
1424	.$2733	JSR FACWORD
1426	.$2736	STY MOVBSELF30+1
1427	.$2739	STA MOVBSELF30+2
1428	.$273c	JSR XREGFAC
1431	.$273f	JSR FACWORD
1432	.$2742	MOVBSELF30:
1433	.$2742	STY $FFFF
1434	.$2745	LDA #<CONST_19R
1435	.$2747	LDY #>CONST_19R
1436	.$2749	JSR REALFAC
1437	.$274c	LDA #<VAR_S
1438	.$274e	LDY #>VAR_S
1439	.$2750	JSR MEMSUB
1442	.$2753	JSR FACXREG
1444	.$2756	LDA #<VAR_DI
1445	.$2758	LDY #>VAR_DI
1446	.$275a	JSR REALFAC
1448	.$275d	LDA #<X_REG
1449	.$275f	LDY #>X_REG
1451	.$2761	JSR FACADD
1454	.$2764	LDX #<VAR_S
1455	.$2766	LDY #>VAR_S
1456	.$2768	JSR FACMEM
1460	.$276b	JSR FACWORD
1461	.$276e	STY MOVBSELF31+1
1462	.$2771	STA MOVBSELF31+2
1463	.$2774	MOVBSELF31:
1464	.$2774	LDY $FFFF
1465	.$2777	LDA #0
1467	.$2779	JSR INTFAC
1469	.$277c	LDX #<VAR_T
1470	.$277e	LDY #>VAR_T
1472	.$2780	JSR FACMEM
1473	.$2783	LDA #<VAR_S
1474	.$2785	LDY #>VAR_S
1475	.$2787	JSR REALFAC
1478	.$278a	JSR FACWORD
1479	.$278d	STY MOVBSELF32+1
1480	.$2790	STA MOVBSELF32+2
1481	.$2793	LDA #$3A
1482	.$2795	MOVBSELF32:
1483	.$2795	STA $FFFF
1484	.$2798	LDA #<CONST_22
1485	.$279a	LDY #>CONST_22
1486	.$279c	JSR REALFAC
1487	.$279f	LDA #<VAR_S
1488	.$27a1	LDY #>VAR_S
1489	.$27a3	JSR FACADD
1495	.$27a6	JSR FACWORD
1496	.$27a9	STY MOVBSELF33+1
1497	.$27ac	STA MOVBSELF33+2
1498	.$27af	LDA #$0
1499	.$27b1	MOVBSELF33:
1500	.$27b1	STA $FFFF
1501	.$27b4	LDX #4
1502	.$27b6	dceloop1122_1:
1503	.$27b6	LDA CONST_30R,X
1504	.$27b9	CMP VAR_T,X
1505	.$27bc	BNE LINE_SKIP41
1506	.$27be	DEX
1507	.$27bf	BPL dceloop1122_1
1509	.$27c1	LINE_NSKIP41:
1512	.$27c1	JMP LINE_55
1514	.$27c4	LINE_SKIP41:
1517	.$27c4	LINE_36:
1519	.$27c4	LDA #<CONST_19R
1520	.$27c6	LDY #>CONST_19R
1521	.$27c8	JSR REALFAC
1522	.$27cb	LDA #<VAR_S
1523	.$27cd	LDY #>VAR_S
1524	.$27cf	JSR FACADD
1530	.$27d2	JSR FACWORD
1531	.$27d5	STY MOVBSELF34+1
1532	.$27d8	STA MOVBSELF34+2
1533	.$27db	MOVBSELF34:
1534	.$27db	LDA $FFFF
1535	.$27de	CMP #60
1536	.$27e0	BCC PEEKLT5
1537	.$27e2	BEQ PEEKEQ5
1538	.$27e4	LDA #$FF
1539	.$27e6	JMP PEEKDONE5
1540	.$27e9	PEEKLT5:
1541	.$27e9	LDA #$01
1542	.$27eb	JMP PEEKDONE5
1543	.$27ee	PEEKEQ5:
1544	.$27ee	LDA #0
1545	.$27f0	PEEKDONE5:
1549	.$27f0	BEQ EQ_EQ8
1550	.$27f2	LDA #0
1551	.$27f4	JMP EQ_SKIP8
1552	.$27f7	EQ_EQ8:
1553	.$27f7	LDA #$1
1554	.$27f9	EQ_SKIP8:
1555	.$27f9	COMP_SKP12:
1556	.$27f9	BNE LINE_NSKIP42
1558	.$27fb	JMP LINE_SKIP42
1560	.$27fe	LINE_NSKIP42:
1562	.$27fe	LDA #<CONST_31R
1563	.$2800	LDY #>CONST_31R
1564	.$2802	JSR REALFAC
1565	.$2805	LDA #<VAR_SS
1566	.$2807	LDY #>VAR_SS
1567	.$2809	JSR FACADD
1570	.$280c	JSR FACXREG
1573	.$280f	LDX #<VAR_SS
1574	.$2811	LDY #>VAR_SS
1576	.$2813	JSR FACMEM
1577	.$2816	LDA #<CONST_32
1578	.$2818	LDY #>CONST_32
1579	.$281a	JSR STROUTWL
1581	.$281d	JSR COMPACTMAX
1582	.$2820	LDA #<VAR_SS
1583	.$2822	LDY #>VAR_SS
1584	.$2824	JSR COPY2_XYA_YREG
1589	.$2827	JSR STR
1590	.$282a	LDY A_REG
1591	.$282d	LDA A_REG+1
1592	.$2830	STY B_REG
1593	.$2833	STA B_REG+1
1595	.$2836	JSR LEN
1596	.$2839	JSR COPY_XREG2YREG
1600	.$283c	LDA #<CONST_33R
1601	.$283e	LDY #>CONST_33R
1602	.$2840	JSR COPY2_XYA_XREG
1606	.$2843	JSR YREGFAC
1608	.$2846	LDA #<X_REG
1609	.$2848	LDY #>X_REG
1611	.$284a	JSR MEMSUB
1614	.$284d	JSR FACYREG
1617	.$2850	JSR TAB
1618	.$2853	LDA #<VAR_SS
1619	.$2855	LDY #>VAR_SS
1620	.$2857	JSR COPY2_XYA_XREG
1624	.$285a	JSR REALOUT
1625	.$285d	JSR CHECKCMD
1626	.$2860	JSR LINEBREAK
1628	.$2863	LINE_SKIP42:
1631	.$2863	LINE_37:
1633	.$2863	LDX #4
1634	.$2865	dcloop389_2:
1635	.$2865	LDA CONST_9R,X
1636	.$2868	STA VAR_N,X
1637	.$286b	DEX
1638	.$286c	BPL dcloop389_2
1640	.$286e	LDA #<CONST_24R
1641	.$2870	LDY #>CONST_24R
1642	.$2872	JSR REALFACPUSH
1644	.$2875	LDA #<CONST_9R
1645	.$2877	LDY #>CONST_9R
1646	.$2879	JSR REALFACPUSH
1648	.$287c	LDA #<VAR_N
1649	.$287e	LDY #>VAR_N
1650	.$2880	STA A_REG
1651	.$2883	STY A_REG+1
1652	.$2886	LDA #<FORLOOP0
1653	.$2888	STA JUMP_TARGET
1654	.$288a	LDA #>FORLOOP0
1655	.$288c	STA JUMP_TARGET+1
1656	.$288e	JSR INITFOR
1657	.$2891	FORLOOP0:
1658	.$2891	LDA #<900
1659	.$2893	STA TMP_ZP
1660	.$2895	LDA #>900
1661	.$2897	STA TMP_ZP+1
1662	.$2899	JSR SYSTEMCALL
1663	.$289c	LDA #0
1664	.$289e	STA A_REG
1665	.$28a1	STA A_REG+1
1666	.$28a4	JSR NEXT
1668	.$28a7	LDA A_REG
1669	.$28aa	BNE RBEQ_0
1670	.$28ac	JMP (JUMP_TARGET)
1672	.$28af	RBEQ_0:
1673	.$28af	LDA #<VAR_T
1674	.$28b1	LDY #>VAR_T
1675	.$28b3	JSR COPY2_XYA_XREG
1676	.$28b6	LDA #<VAR_S
1677	.$28b8	LDY #>VAR_S
1678	.$28ba	JSR REALFAC
1679	.$28bd	JSR FACWORD
1682	.$28c0	STY MOVBSELF35+1
1683	.$28c3	STA MOVBSELF35+2
1684	.$28c6	JSR XREGFAC
1687	.$28c9	JSR FACWORD
1688	.$28cc	MOVBSELF35:
1689	.$28cc	STY $FFFF
1690	.$28cf	LDA #<CONST_22
1691	.$28d1	LDY #>CONST_22
1692	.$28d3	JSR REALFAC
1693	.$28d6	LDA #<VAR_S
1694	.$28d8	LDY #>VAR_S
1695	.$28da	JSR FACADD
1699	.$28dd	JSR PUSHREAL
1700	.$28e0	LDA #<CONST_27
1701	.$28e2	LDY #>CONST_27
1702	.$28e4	JSR REALFAC
1703	.$28e7	LDA #<VAR_T
1704	.$28e9	LDY #>VAR_T
1705	.$28eb	JSR MEMSUB
1708	.$28ee	JSR FACXREG
1710	.$28f1	LDA #<VAR_D[]
1711	.$28f3	LDY #>VAR_D[]
1712	.$28f5	JSR ARRAYACCESS_REAL_S
1714	.$28f8	JSR POPREAL
1715	.$28fb	JSR FACWORD
1717	.$28fe	STY MOVBSELF36+1
1718	.$2901	STA MOVBSELF36+2
1719	.$2904	JSR XREGFAC
1722	.$2907	JSR FACWORD
1723	.$290a	MOVBSELF36:
1724	.$290a	STY $FFFF
1725	.$290d	LDA #<CONST_19R
1726	.$290f	LDY #>CONST_19R
1727	.$2911	JSR REALFAC
1728	.$2914	LDA #<VAR_S
1729	.$2916	LDY #>VAR_S
1730	.$2918	JSR FACADD
1733	.$291b	JSR FACXREG
1735	.$291e	LDA #<VAR_DI
1736	.$2920	LDY #>VAR_DI
1737	.$2922	JSR REALFAC
1739	.$2925	LDA #<X_REG
1740	.$2927	LDY #>X_REG
1742	.$2929	JSR FACADD
1745	.$292c	LDX #<VAR_S
1746	.$292e	LDY #>VAR_S
1747	.$2930	JSR FACMEM
1751	.$2933	JSR FACWORD
1752	.$2936	STY MOVBSELF37+1
1753	.$2939	STA MOVBSELF37+2
1754	.$293c	MOVBSELF37:
1755	.$293c	LDY $FFFF
1756	.$293f	LDA #0
1758	.$2941	JSR INTFAC
1760	.$2944	LDX #<VAR_T
1761	.$2946	LDY #>VAR_T
1763	.$2948	JSR FACMEM
1764	.$294b	LDA #<VAR_S
1765	.$294d	LDY #>VAR_S
1766	.$294f	JSR REALFAC
1769	.$2952	JSR FACWORD
1770	.$2955	STY MOVBSELF38+1
1771	.$2958	STA MOVBSELF38+2
1772	.$295b	LDA #$3A
1773	.$295d	MOVBSELF38:
1774	.$295d	STA $FFFF
1775	.$2960	LDA #<CONST_19R
1776	.$2962	LDY #>CONST_19R
1777	.$2964	JSR REALFAC
1778	.$2967	LDA #<VAR_S
1779	.$2969	LDY #>VAR_S
1780	.$296b	JSR FACADD
1786	.$296e	JSR FACWORD
1787	.$2971	STY MOVBSELF39+1
1788	.$2974	STA MOVBSELF39+2
1789	.$2977	MOVBSELF39:
1790	.$2977	LDA $FFFF
1791	.$297a	CMP #61
1792	.$297c	BCC PEEKLT6
1793	.$297e	BEQ PEEKEQ6
1794	.$2980	LDA #$FF
1795	.$2982	JMP PEEKDONE6
1796	.$2985	PEEKLT6:
1797	.$2985	LDA #$01
1798	.$2987	JMP PEEKDONE6
1799	.$298a	PEEKEQ6:
1800	.$298a	LDA #0
1801	.$298c	PEEKDONE6:
1805	.$298c	ROL
1806	.$298d	BCS GT_GT9
1807	.$298f	LDA #0
1808	.$2991	JMP GT_SKIP9
1809	.$2994	GT_GT9:
1810	.$2994	LDA #$1
1811	.$2996	GT_SKIP9:
1812	.$2996	COMP_SKP14:
1813	.$2996	BEQ LINE_SKIP43
1816	.$2998	LINE_NSKIP43:
1818	.$2998	JMP LINE_55
1820	.$299b	LINE_SKIP43:
1823	.$299b	LINE_38:
1825	.$299b	LDA #<CONST_22
1826	.$299d	LDY #>CONST_22
1827	.$299f	JSR REALFAC
1828	.$29a2	LDA #<VAR_S
1829	.$29a4	LDY #>VAR_S
1830	.$29a6	JSR FACADD
1836	.$29a9	JSR FACWORD
1837	.$29ac	STY MOVBSELF40+1
1838	.$29af	STA MOVBSELF40+2
1839	.$29b2	LDA #$0
1840	.$29b4	MOVBSELF40:
1841	.$29b4	STA $FFFF
1842	.$29b7	LDY #0
1843	.$29b9	STY 36876
1845	.$29bc	JMP LINE_41
1847	.$29bf	LINE_40:
1849	.$29bf	LDY #200
1850	.$29c1	STY 36876
1852	.$29c4	LDX #4
1853	.$29c6	dcloop389_3:
1854	.$29c6	LDA CONST_9R,X
1855	.$29c9	STA VAR_N,X
1856	.$29cc	DEX
1857	.$29cd	BPL dcloop389_3
1859	.$29cf	LDA #<CONST_25R
1860	.$29d1	LDY #>CONST_25R
1861	.$29d3	JSR REALFACPUSH
1863	.$29d6	LDA #<CONST_9R
1864	.$29d8	LDY #>CONST_9R
1865	.$29da	JSR REALFACPUSH
1867	.$29dd	LDA #<VAR_N
1868	.$29df	LDY #>VAR_N
1869	.$29e1	STA A_REG
1870	.$29e4	STY A_REG+1
1871	.$29e7	LDA #<FORLOOP1
1872	.$29e9	STA JUMP_TARGET
1873	.$29eb	LDA #>FORLOOP1
1874	.$29ed	STA JUMP_TARGET+1
1875	.$29ef	JSR INITFOR
1876	.$29f2	FORLOOP1:
1877	.$29f2	LDA #0
1878	.$29f4	STA A_REG
1879	.$29f7	STA A_REG+1
1880	.$29fa	JSR NEXT
1882	.$29fd	LDA A_REG
1883	.$2a00	BNE RBEQ_1
1884	.$2a02	JMP (JUMP_TARGET)
1886	.$2a05	RBEQ_1:
1887	.$2a05	LDY #0
1888	.$2a07	STY 36876
1890	.$2a0a	LDA #<VAR_S
1891	.$2a0c	LDY #>VAR_S
1892	.$2a0e	JSR REALFAC
1895	.$2a11	JSR FACWORD
1896	.$2a14	STY MOVBSELF44+1
1897	.$2a17	STA MOVBSELF44+2
1898	.$2a1a	MOVBSELF44:
1899	.$2a1a	LDY $FFFF
1900	.$2a1d	LDA #0
1902	.$2a1f	JSR INTFAC
1904	.$2a22	LDX #<VAR_T
1905	.$2a24	LDY #>VAR_T
1907	.$2a26	JSR FACMEM
1908	.$2a29	LDA #<VAR_S
1909	.$2a2b	LDY #>VAR_S
1910	.$2a2d	JSR REALFAC
1913	.$2a30	JSR FACWORD
1914	.$2a33	STY MOVBSELF45+1
1915	.$2a36	STA MOVBSELF45+2
1916	.$2a39	LDA #$3A
1917	.$2a3b	MOVBSELF45:
1918	.$2a3b	STA $FFFF
1919	.$2a3e	LDA #<CONST_22
1920	.$2a40	LDY #>CONST_22
1921	.$2a42	JSR REALFAC
1922	.$2a45	LDA #<VAR_S
1923	.$2a47	LDY #>VAR_S
1924	.$2a49	JSR FACADD
1930	.$2a4c	JSR FACWORD
1931	.$2a4f	STY MOVBSELF46+1
1932	.$2a52	STA MOVBSELF46+2
1933	.$2a55	LDA #$0
1934	.$2a57	MOVBSELF46:
1935	.$2a57	STA $FFFF
1936	.$2a5a	LDA #<900
1937	.$2a5c	STA TMP_ZP
1938	.$2a5e	LDA #>900
1939	.$2a60	STA TMP_ZP+1
1940	.$2a62	JSR SYSTEMCALL
1942	.$2a65	LINE_41:
1944	.$2a65	LDA #<CONST_34R
1945	.$2a67	LDY #>CONST_34R
1946	.$2a69	JSR REALFAC
1947	.$2a6c	LDA #<VAR_T
1948	.$2a6e	LDY #>VAR_T
1949	.$2a70	JSR CMPFAC
1951	.$2a73	BEQ EQ_EQ10
1952	.$2a75	LDA #0
1953	.$2a77	JMP EQ_SKIP10
1954	.$2a7a	EQ_EQ10:
1955	.$2a7a	LDA #$1
1956	.$2a7c	EQ_SKIP10:
1957	.$2a7c	COMP_SKP16:
1958	.$2a7c	BNE LINE_NSKIP44
1960	.$2a7e	JMP LINE_SKIP44
1962	.$2a81	LINE_NSKIP44:
1964	.$2a81	LDY #252
1965	.$2a83	LDA #0
1976	.$2a85	STY 36877
1977	.$2a88	LDA #<CONST_2R
1978	.$2a8a	LDY #>CONST_2R
1979	.$2a8c	JSR REALFAC
1980	.$2a8f	LDA #<VAR_SS
1981	.$2a91	LDY #>VAR_SS
1982	.$2a93	JSR FACADD
1985	.$2a96	JSR FACXREG
1988	.$2a99	LDX #<VAR_SS
1989	.$2a9b	LDY #>VAR_SS
1991	.$2a9d	JSR FACMEM
1992	.$2aa0	LDA #<CONST_32
1993	.$2aa2	LDY #>CONST_32
1994	.$2aa4	JSR STROUTWL
1996	.$2aa7	JSR COMPACTMAX
1997	.$2aaa	LDA #<VAR_SS
1998	.$2aac	LDY #>VAR_SS
1999	.$2aae	JSR COPY2_XYA_YREG
2004	.$2ab1	JSR STR
2005	.$2ab4	LDY A_REG
2006	.$2ab7	LDA A_REG+1
2007	.$2aba	STY B_REG
2008	.$2abd	STA B_REG+1
2010	.$2ac0	JSR LEN
2011	.$2ac3	JSR COPY_XREG2YREG
2015	.$2ac6	LDA #<CONST_33R
2016	.$2ac8	LDY #>CONST_33R
2017	.$2aca	JSR COPY2_XYA_XREG
2021	.$2acd	JSR YREGFAC
2023	.$2ad0	LDA #<X_REG
2024	.$2ad2	LDY #>X_REG
2026	.$2ad4	JSR MEMSUB
2029	.$2ad7	JSR FACYREG
2032	.$2ada	JSR TAB
2033	.$2add	LDA #<VAR_SS
2034	.$2adf	LDY #>VAR_SS
2035	.$2ae1	JSR COPY2_XYA_XREG
2039	.$2ae4	JSR REALOUT
2040	.$2ae7	JSR CHECKCMD
2041	.$2aea	JSR LINEBREAK
2042	.$2aed	JSR ONETOFAC
2044	.$2af0	LDA #<VAR_H
2045	.$2af2	LDY #>VAR_H
2046	.$2af4	JSR FACADD
2050	.$2af7	LDX #<VAR_H
2051	.$2af9	LDY #>VAR_H
2053	.$2afb	JSR FACMEM
2054	.$2afe	LDX #4
2055	.$2b00	dcloop549_1:
2056	.$2b00	LDA CONST_20R,X
2057	.$2b03	STA VAR_T,X
2058	.$2b06	DEX
2059	.$2b07	BPL dcloop549_1
2061	.$2b09	LDY #0
2062	.$2b0b	LDA #0
2073	.$2b0d	STY 36877
2074	.$2b10	LDX #4
2075	.$2b12	dceloop1122_2:
2076	.$2b12	LDA CONST_37R,X
2077	.$2b15	CMP VAR_H,X
2078	.$2b18	BNE LINE_SKIP45
2079	.$2b1a	DEX
2080	.$2b1b	BPL dceloop1122_2
2082	.$2b1d	LINE_NSKIP45:
2085	.$2b1d	JMP LINE_64
2087	.$2b20	LINE_SKIP45:
2090	.$2b20	LINE_SKIP44:
2093	.$2b20	LINE_42:
2095	.$2b20	LDX #4
2096	.$2b22	dceloop1122_3:
2097	.$2b22	LDA CONST_30R,X
2098	.$2b25	CMP VAR_T,X
2099	.$2b28	BNE LINE_SKIP46
2100	.$2b2a	DEX
2101	.$2b2b	BPL dceloop1122_3
2103	.$2b2d	LINE_NSKIP46:
2106	.$2b2d	JMP LINE_55
2108	.$2b30	LINE_SKIP46:
2111	.$2b30	LINE_43:
2113	.$2b30	JSR GOSUB
2114	.$2b33	JSR LINE_98
2116	.$2b36	LINE_45:
2118	.$2b36	LDA #<900
2119	.$2b38	STA TMP_ZP
2120	.$2b3a	LDA #>900
2121	.$2b3c	STA TMP_ZP+1
2122	.$2b3e	JSR SYSTEMCALL
2123	.$2b41	LDA #<900
2124	.$2b43	STA TMP_ZP
2125	.$2b45	LDA #>900
2126	.$2b47	STA TMP_ZP+1
2127	.$2b49	JSR SYSTEMCALL
2128	.$2b4c	LDA #<VAR_W
2129	.$2b4e	LDY #>VAR_W
2130	.$2b50	JSR COPY2_XYA_XREG
2131	.$2b53	LDA #<VAR_V
2132	.$2b55	LDY #>VAR_V
2133	.$2b57	JSR REALFAC
2134	.$2b5a	JSR FACWORD
2137	.$2b5d	STY MOVBSELF49+1
2138	.$2b60	STA MOVBSELF49+2
2139	.$2b63	JSR XREGFAC
2142	.$2b66	JSR FACWORD
2143	.$2b69	MOVBSELF49:
2144	.$2b69	STY $FFFF
2145	.$2b6c	LDA #<CONST_22
2146	.$2b6e	LDY #>CONST_22
2147	.$2b70	JSR REALFAC
2148	.$2b73	LDA #<VAR_V
2149	.$2b75	LDY #>VAR_V
2150	.$2b77	JSR FACADD
2154	.$2b7a	JSR PUSHREAL
2155	.$2b7d	LDA #<CONST_27
2156	.$2b7f	LDY #>CONST_27
2157	.$2b81	JSR REALFAC
2158	.$2b84	LDA #<VAR_W
2159	.$2b86	LDY #>VAR_W
2160	.$2b88	JSR MEMSUB
2163	.$2b8b	JSR FACXREG
2165	.$2b8e	LDA #<VAR_D[]
2166	.$2b90	LDY #>VAR_D[]
2167	.$2b92	JSR ARRAYACCESS_REAL_S
2169	.$2b95	JSR POPREAL
2170	.$2b98	JSR FACWORD
2172	.$2b9b	STY MOVBSELF50+1
2173	.$2b9e	STA MOVBSELF50+2
2174	.$2ba1	JSR XREGFAC
2177	.$2ba4	JSR FACWORD
2178	.$2ba7	MOVBSELF50:
2179	.$2ba7	STY $FFFF
2180	.$2baa	LDA #<VAR_DO
2181	.$2bac	LDY #>VAR_DO
2182	.$2bae	JSR REALFAC
2183	.$2bb1	LDA #<VAR_V
2184	.$2bb3	LDY #>VAR_V
2185	.$2bb5	JSR FACADD
2189	.$2bb8	LDX #<VAR_V
2190	.$2bba	LDY #>VAR_V
2191	.$2bbc	JSR FACMEM
2195	.$2bbf	JSR FACWORD
2196	.$2bc2	STY MOVBSELF51+1
2197	.$2bc5	STA MOVBSELF51+2
2198	.$2bc8	MOVBSELF51:
2199	.$2bc8	LDY $FFFF
2200	.$2bcb	LDA #0
2202	.$2bcd	JSR INTFAC
2204	.$2bd0	LDX #<VAR_W
2205	.$2bd2	LDY #>VAR_W
2207	.$2bd4	JSR FACMEM
2208	.$2bd7	LDA #<VAR_V
2209	.$2bd9	LDY #>VAR_V
2210	.$2bdb	JSR REALFAC
2213	.$2bde	JSR FACWORD
2214	.$2be1	STY MOVBSELF52+1
2215	.$2be4	STA MOVBSELF52+2
2216	.$2be7	LDA #$3C
2217	.$2be9	MOVBSELF52:
2218	.$2be9	STA $FFFF
2219	.$2bec	LDA #<CONST_22
2220	.$2bee	LDY #>CONST_22
2221	.$2bf0	JSR REALFAC
2222	.$2bf3	LDA #<VAR_V
2223	.$2bf5	LDY #>VAR_V
2224	.$2bf7	JSR FACADD
2230	.$2bfa	JSR FACWORD
2231	.$2bfd	STY MOVBSELF53+1
2232	.$2c00	STA MOVBSELF53+2
2233	.$2c03	LDA #$6
2234	.$2c05	MOVBSELF53:
2235	.$2c05	STA $FFFF
2237	.$2c08	LINE_46:
2239	.$2c08	LDA #<CONST_19R
2240	.$2c0a	LDY #>CONST_19R
2241	.$2c0c	JSR REALFAC
2242	.$2c0f	LDA #<VAR_V
2243	.$2c11	LDY #>VAR_V
2244	.$2c13	JSR FACADD
2250	.$2c16	JSR FACWORD
2251	.$2c19	STY MOVBSELF54+1
2252	.$2c1c	STA MOVBSELF54+2
2253	.$2c1f	MOVBSELF54:
2254	.$2c1f	LDA $FFFF
2255	.$2c22	CMP #56
2256	.$2c24	BCC PEEKLT7
2257	.$2c26	BEQ PEEKEQ7
2258	.$2c28	LDA #$FF
2259	.$2c2a	JMP PEEKDONE7
2260	.$2c2d	PEEKLT7:
2261	.$2c2d	LDA #$01
2262	.$2c2f	JMP PEEKDONE7
2263	.$2c32	PEEKEQ7:
2264	.$2c32	LDA #0
2265	.$2c34	PEEKDONE7:
2269	.$2c34	BEQ EQ_EQ13
2270	.$2c36	LDA #<REAL_CONST_ZERO
2271	.$2c38	LDY #>REAL_CONST_ZERO
2272	.$2c3a	JMP EQ_SKIP13
2273	.$2c3d	EQ_EQ13:
2274	.$2c3d	LDA #<REAL_CONST_MINUS_ONE
2275	.$2c3f	LDY #>REAL_CONST_MINUS_ONE
2276	.$2c41	EQ_SKIP13:
2278	.$2c41	JSR REALFACPUSH
2280	.$2c44	LDA #<CONST_19R
2281	.$2c46	LDY #>CONST_19R
2282	.$2c48	JSR REALFAC
2283	.$2c4b	LDA #<VAR_DO
2284	.$2c4d	LDY #>VAR_DO
2285	.$2c4f	JSR CMPFAC
2287	.$2c52	BEQ EQ_EQ14
2288	.$2c54	LDA #<REAL_CONST_ZERO
2289	.$2c56	LDY #>REAL_CONST_ZERO
2290	.$2c58	JMP EQ_SKIP14
2291	.$2c5b	EQ_EQ14:
2292	.$2c5b	LDA #<REAL_CONST_MINUS_ONE
2293	.$2c5d	LDY #>REAL_CONST_MINUS_ONE
2294	.$2c5f	EQ_SKIP14:
2296	.$2c5f	JSR REALFAC
2297	.$2c62	JSR FACXREG
2299	.$2c65	JSR POPREAL2X
2301	.$2c68	JSR FASTAND
2304	.$2c6b	JSR FACXREG
2306	.$2c6e	LDA X_REG
2307	.$2c70	COMP_SKP19:
2308	.$2c70	BNE LINE_NSKIP47
2310	.$2c72	JMP LINE_SKIP47
2312	.$2c75	LINE_NSKIP47:
2314	.$2c75	JSR ONETOFAC
2319	.$2c78	JSR FACRND
2320	.$2c7b	JSR FACXREG
2321	.$2c7e	LDY #1
2322	.$2c80	STY A_REG
2324	.$2c83	JSR SHL
2329	.$2c86	JSR BASINT
2330	.$2c89	JSR FACXREG
2332	.$2c8c	LDA #<VAR_DO[]
2333	.$2c8e	LDY #>VAR_DO[]
2334	.$2c90	JSR ARRAYACCESS_REAL_S
2336	.$2c93	JSR XREGFAC
2338	.$2c96	LDX #<VAR_DO
2339	.$2c98	LDY #>VAR_DO
2341	.$2c9a	JSR FACMEM
2342	.$2c9d	JMP LINE_48
2344	.$2ca0	LINE_SKIP47:
2347	.$2ca0	LINE_47:
2349	.$2ca0	LDX #4
2350	.$2ca2	dceloop1122_4:
2351	.$2ca2	LDA CONST_39R,X
2352	.$2ca5	CMP VAR_W,X
2353	.$2ca8	BNE LINE_SKIP48
2354	.$2caa	DEX
2355	.$2cab	BPL dceloop1122_4
2357	.$2cad	LINE_NSKIP48:
2360	.$2cad	LDX #4
2361	.$2caf	dcloop549_2:
2362	.$2caf	LDA CONST_19R,X
2363	.$2cb2	STA VAR_DO,X
2364	.$2cb5	DEX
2365	.$2cb6	BPL dcloop549_2
2368	.$2cb8	LINE_SKIP48:
2371	.$2cb8	LINE_48:
2373	.$2cb8	LDX #4
2374	.$2cba	dceloop1122_5:
2375	.$2cba	LDA CONST_21R,X
2376	.$2cbd	CMP VAR_W,X
2377	.$2cc0	BNE LINE_SKIP49
2378	.$2cc2	DEX
2379	.$2cc3	BPL dceloop1122_5
2381	.$2cc5	LINE_NSKIP49:
2384	.$2cc5	JMP LINE_55
2386	.$2cc8	LINE_SKIP49:
2389	.$2cc8	LINE_49:
2391	.$2cc8	LDA #<CONST_40R
2392	.$2cca	LDY #>CONST_40R
2393	.$2ccc	JSR REALFAC
2394	.$2ccf	LDA #<VAR_V
2395	.$2cd1	LDY #>VAR_V
2396	.$2cd3	JSR CMPFAC
2398	.$2cd6	BEQ LT_LT_EQ17
2399	.$2cd8	ROL
2400	.$2cd9	BCC LT_LT17
2401	.$2cdb	LT_LT_EQ17:
2402	.$2cdb	LDA #0
2403	.$2cdd	JMP LT_SKIP17
2404	.$2ce0	LT_LT17:
2405	.$2ce0	LDA #$1
2406	.$2ce2	LT_SKIP17:
2407	.$2ce2	COMP_SKP22:
2408	.$2ce2	BEQ LINE_SKIP50
2411	.$2ce4	LINE_NSKIP50:
2413	.$2ce4	JMP LINE_20
2415	.$2ce7	LINE_SKIP50:
2418	.$2ce7	LINE_50:
2420	.$2ce7	JSR ONETOFAC
2422	.$2cea	LDA #<VAR_Y
2423	.$2cec	LDY #>VAR_Y
2424	.$2cee	JSR FACADD
2428	.$2cf1	LDX #<VAR_Y
2429	.$2cf3	LDY #>VAR_Y
2431	.$2cf5	JSR FACMEM
2432	.$2cf8	LDX #4
2433	.$2cfa	dceloop1122_6:
2434	.$2cfa	LDA CONST_41R,X
2435	.$2cfd	CMP VAR_Y,X
2436	.$2d00	BNE LINE_SKIP51
2437	.$2d02	DEX
2438	.$2d03	BPL dceloop1122_6
2440	.$2d05	LINE_NSKIP51:
2443	.$2d05	JMP LINE_55
2445	.$2d08	LINE_SKIP51:
2448	.$2d08	LINE_51:
2450	.$2d08	LDA #<VAR_V
2451	.$2d0a	LDY #>VAR_V
2452	.$2d0c	JSR REALFAC
2455	.$2d0f	JSR FACWORD
2456	.$2d12	STY MOVBSELF55+1
2457	.$2d15	STA MOVBSELF55+2
2458	.$2d18	LDA #$3E
2459	.$2d1a	MOVBSELF55:
2460	.$2d1a	STA $FFFF
2461	.$2d1d	JMP LINE_19
2463	.$2d20	LINE_55:
2465	.$2d20	LDY #0
2466	.$2d22	STY 36876
2468	.$2d25	LDX #4
2469	.$2d27	dcloop549_3:
2470	.$2d27	LDA CONST_42R,X
2471	.$2d2a	STA VAR_SO,X
2472	.$2d2d	DEX
2473	.$2d2e	BPL dcloop549_3
2475	.$2d30	LDX #4
2476	.$2d32	dceloop1122_7:
2477	.$2d32	LDA CONST_30R,X
2478	.$2d35	CMP VAR_T,X
2479	.$2d38	BNE LINE_SKIP52
2480	.$2d3a	DEX
2481	.$2d3b	BPL dceloop1122_7
2483	.$2d3d	LINE_NSKIP52:
2486	.$2d3d	LDX #4
2487	.$2d3f	dcloop549_4:
2488	.$2d3f	LDA VAR_W,X
2489	.$2d42	STA VAR_T,X
2490	.$2d45	DEX
2491	.$2d46	BPL dcloop549_4
2494	.$2d48	LINE_SKIP52:
2497	.$2d48	LINE_56:
2499	.$2d48	LDA #<VAR_SO
2500	.$2d4a	LDY #>VAR_SO
2501	.$2d4c	JSR COPY2_XYA_XREG
2504	.$2d4f	JSR XREGFAC
2507	.$2d52	JSR FACWORD
2508	.$2d55	STY 36874
2509	.$2d58	LDA #<CONST_40R
2510	.$2d5a	LDY #>CONST_40R
2511	.$2d5c	JSR REALFAC
2512	.$2d5f	LDA #<VAR_S
2513	.$2d61	LDY #>VAR_S
2514	.$2d63	JSR CMPFAC
2516	.$2d66	BEQ LT_LT_EQ20
2517	.$2d68	ROL
2518	.$2d69	BCC LT_LT20
2519	.$2d6b	LT_LT_EQ20:
2520	.$2d6b	LDA #<REAL_CONST_ZERO
2521	.$2d6d	LDY #>REAL_CONST_ZERO
2522	.$2d6f	JMP LT_SKIP20
2523	.$2d72	LT_LT20:
2524	.$2d72	LDA #<REAL_CONST_MINUS_ONE
2525	.$2d74	LDY #>REAL_CONST_MINUS_ONE
2526	.$2d76	LT_SKIP20:
2528	.$2d76	JSR REALFACPUSH
2530	.$2d79	LDA #<CONST_19R
2531	.$2d7b	LDY #>CONST_19R
2532	.$2d7d	JSR REALFAC
2533	.$2d80	LDA #<VAR_S
2534	.$2d82	LDY #>VAR_S
2535	.$2d84	JSR FACADD
2541	.$2d87	JSR FACWORD
2542	.$2d8a	STY MOVBSELF58+1
2543	.$2d8d	STA MOVBSELF58+2
2544	.$2d90	MOVBSELF58:
2545	.$2d90	LDA $FFFF
2546	.$2d93	CMP #56
2547	.$2d95	BCC PEEKLT8
2548	.$2d97	BEQ PEEKEQ8
2549	.$2d99	LDA #$FF
2550	.$2d9b	JMP PEEKDONE8
2551	.$2d9e	PEEKLT8:
2552	.$2d9e	LDA #$01
2553	.$2da0	JMP PEEKDONE8
2554	.$2da3	PEEKEQ8:
2555	.$2da3	LDA #0
2556	.$2da5	PEEKDONE8:
2560	.$2da5	BNE NEQ_NEQ21
2561	.$2da7	LDA #<REAL_CONST_ZERO
2562	.$2da9	LDY #>REAL_CONST_ZERO
2563	.$2dab	JMP NEQ_SKIP21
2564	.$2dae	NEQ_NEQ21:
2565	.$2dae	LDA #<REAL_CONST_MINUS_ONE
2566	.$2db0	LDY #>REAL_CONST_MINUS_ONE
2567	.$2db2	NEQ_SKIP21:
2569	.$2db2	JSR REALFAC
2570	.$2db5	JSR FACXREG
2572	.$2db8	JSR POPREAL2X
2574	.$2dbb	JSR FASTAND
2577	.$2dbe	JSR FACXREG
2579	.$2dc1	LDA X_REG
2580	.$2dc3	COMP_SKP25:
2581	.$2dc3	BNE LINE_NSKIP53
2583	.$2dc5	JMP LINE_SKIP53
2585	.$2dc8	LINE_NSKIP53:
2587	.$2dc8	LDA #<VAR_S
2588	.$2dca	LDY #>VAR_S
2589	.$2dcc	JSR COPY2_XYA_YREG
2593	.$2dcf	LDA #<Y_REG
2594	.$2dd1	LDY #>Y_REG
2596	.$2dd3	JSR REALFACPUSH
2598	.$2dd6	LDA #<VAR_T
2599	.$2dd8	LDY #>VAR_T
2600	.$2dda	JSR COPY2_XYA_XREG
2604	.$2ddd	JSR POPREAL
2605	.$2de0	JSR FACWORD
2607	.$2de3	STY MOVBSELF59+1
2608	.$2de6	STA MOVBSELF59+2
2609	.$2de9	JSR XREGFAC
2612	.$2dec	JSR FACWORD
2613	.$2def	MOVBSELF59:
2614	.$2def	STY $FFFF
2615	.$2df2	LDA #<CONST_22
2616	.$2df4	LDY #>CONST_22
2617	.$2df6	JSR COPY2_XYA_YREG
2621	.$2df9	LDA #<VAR_S
2622	.$2dfb	LDY #>VAR_S
2623	.$2dfd	JSR COPY2_XYA_XREG
2627	.$2e00	JSR YREGFAC
2629	.$2e03	LDA #<X_REG
2630	.$2e05	LDY #>X_REG
2632	.$2e07	JSR FACADD
2635	.$2e0a	JSR PUSHREAL
2636	.$2e0d	LDA #<CONST_27
2637	.$2e0f	LDY #>CONST_27
2638	.$2e11	JSR REALFAC
2639	.$2e14	LDA #<VAR_T
2640	.$2e16	LDY #>VAR_T
2641	.$2e18	JSR MEMSUB
2644	.$2e1b	JSR FACXREG
2646	.$2e1e	LDA #<VAR_D[]
2647	.$2e20	LDY #>VAR_D[]
2648	.$2e22	JSR ARRAYACCESS_REAL_S
2650	.$2e25	JSR POPREAL
2651	.$2e28	JSR FACWORD
2653	.$2e2b	STY MOVBSELF60+1
2654	.$2e2e	STA MOVBSELF60+2
2655	.$2e31	JSR XREGFAC
2658	.$2e34	JSR FACWORD
2659	.$2e37	MOVBSELF60:
2660	.$2e37	STY $FFFF
2661	.$2e3a	LDA #<CONST_19R
2662	.$2e3c	LDY #>CONST_19R
2663	.$2e3e	JSR REALFAC
2664	.$2e41	LDA #<VAR_S
2665	.$2e43	LDY #>VAR_S
2666	.$2e45	JSR FACADD
2670	.$2e48	LDX #<VAR_S
2671	.$2e4a	LDY #>VAR_S
2673	.$2e4c	JSR FACMEM
2674	.$2e4f	LDA #<VAR_S
2675	.$2e51	LDY #>VAR_S
2676	.$2e53	JSR REALFAC
2679	.$2e56	JSR FACWORD
2680	.$2e59	STY MOVBSELF61+1
2681	.$2e5c	STA MOVBSELF61+2
2682	.$2e5f	MOVBSELF61:
2683	.$2e5f	LDY $FFFF
2684	.$2e62	LDA #0
2686	.$2e64	JSR INTFAC
2688	.$2e67	LDX #<VAR_T
2689	.$2e69	LDY #>VAR_T
2691	.$2e6b	JSR FACMEM
2692	.$2e6e	LDA #<VAR_S
2693	.$2e70	LDY #>VAR_S
2694	.$2e72	JSR COPY2_XYA_YREG
2698	.$2e75	JSR YREGFAC
2701	.$2e78	JSR FACWORD
2702	.$2e7b	STY MOVBSELF62+1
2703	.$2e7e	STA MOVBSELF62+2
2704	.$2e81	LDA #$3A
2705	.$2e83	MOVBSELF62:
2706	.$2e83	STA $FFFF
2707	.$2e86	LDA #<CONST_22
2708	.$2e88	LDY #>CONST_22
2709	.$2e8a	JSR COPY2_XYA_YREG
2713	.$2e8d	LDA #<VAR_S
2714	.$2e8f	LDY #>VAR_S
2715	.$2e91	JSR COPY2_XYA_XREG
2719	.$2e94	JSR YREGFAC
2721	.$2e97	LDA #<X_REG
2722	.$2e99	LDY #>X_REG
2724	.$2e9b	JSR FACADD
2729	.$2e9e	JSR FACWORD
2730	.$2ea1	STY MOVBSELF63+1
2731	.$2ea4	STA MOVBSELF63+2
2732	.$2ea7	LDA #$0
2733	.$2ea9	MOVBSELF63:
2734	.$2ea9	STA $FFFF
2736	.$2eac	LINE_SKIP53:
2739	.$2eac	LINE_57:
2741	.$2eac	LDX #4
2742	.$2eae	dcloop549_5:
2743	.$2eae	LDA CONST_9R,X
2744	.$2eb1	STA VAR_N,X
2745	.$2eb4	DEX
2746	.$2eb5	BPL dcloop549_5
2748	.$2eb7	LDA #<CONST_24R
2749	.$2eb9	LDY #>CONST_24R
2750	.$2ebb	JSR REALFACPUSH
2752	.$2ebe	LDA #<CONST_9R
2753	.$2ec0	LDY #>CONST_9R
2754	.$2ec2	JSR REALFACPUSH
2756	.$2ec5	LDA #<VAR_N
2757	.$2ec7	LDY #>VAR_N
2758	.$2ec9	STA A_REG
2759	.$2ecc	STY A_REG+1
2760	.$2ecf	LDA #<FORLOOP2
2761	.$2ed1	STA JUMP_TARGET
2762	.$2ed3	LDA #>FORLOOP2
2763	.$2ed5	STA JUMP_TARGET+1
2764	.$2ed7	JSR INITFOR
2765	.$2eda	FORLOOP2:
2766	.$2eda	LDA #<900
2767	.$2edc	STA TMP_ZP
2768	.$2ede	LDA #>900
2769	.$2ee0	STA TMP_ZP+1
2770	.$2ee2	JSR SYSTEMCALL
2771	.$2ee5	LDA #0
2772	.$2ee7	STA A_REG
2773	.$2eea	STA A_REG+1
2774	.$2eed	JSR NEXT
2776	.$2ef0	LDA A_REG
2777	.$2ef3	BNE RBEQ_2
2778	.$2ef5	JMP (JUMP_TARGET)
2780	.$2ef8	RBEQ_2:
2781	.$2ef8	LDA #<CONST_25R
2782	.$2efa	LDY #>CONST_25R
2783	.$2efc	JSR REALFAC
2784	.$2eff	LDA #<VAR_SO
2785	.$2f01	LDY #>VAR_SO
2786	.$2f03	JSR MEMSUB
2790	.$2f06	LDX #<VAR_SO
2791	.$2f08	LDY #>VAR_SO
2793	.$2f0a	JSR FACMEM
2794	.$2f0d	LDA #<CONST_2R
2795	.$2f0f	LDY #>CONST_2R
2796	.$2f11	JSR REALFAC
2797	.$2f14	LDA #<VAR_SO
2798	.$2f16	LDY #>VAR_SO
2799	.$2f18	JSR CMPFAC
2801	.$2f1b	ROL
2802	.$2f1c	BCS GT_GT22
2803	.$2f1e	LDA #0
2804	.$2f20	JMP GT_SKIP22
2805	.$2f23	GT_GT22:
2806	.$2f23	LDA #$1
2807	.$2f25	GT_SKIP22:
2808	.$2f25	COMP_SKP27:
2809	.$2f25	BEQ LINE_SKIP54
2812	.$2f27	LINE_NSKIP54:
2814	.$2f27	JMP LINE_56
2816	.$2f2a	LINE_SKIP54:
2819	.$2f2a	LINE_58:
2821	.$2f2a	LDY #0
2822	.$2f2c	STY 36874
2824	.$2f2f	JSR ONETOFAC
2826	.$2f32	LDA #<VAR_CH
2827	.$2f34	LDY #>VAR_CH
2828	.$2f36	JSR MEMSUB
2832	.$2f39	LDX #<VAR_CH
2833	.$2f3b	LDY #>VAR_CH
2835	.$2f3d	JSR FACMEM
2836	.$2f40	LDX #4
2837	.$2f42	dceloop1122_8:
2838	.$2f42	LDA CONST_8,X
2839	.$2f45	CMP VAR_CH,X
2840	.$2f48	BNE LINE_SKIP55
2841	.$2f4a	DEX
2842	.$2f4b	BPL dceloop1122_8
2844	.$2f4d	LINE_NSKIP55:
2847	.$2f4d	JMP LINE_300
2849	.$2f50	LINE_SKIP55:
2852	.$2f50	LINE_59:
2854	.$2f50	LDA #<CONST_32
2855	.$2f52	LDY #>CONST_32
2856	.$2f54	JSR STROUTWL
2858	.$2f57	LDA #<CONST_43R
2859	.$2f59	LDY #>CONST_43R
2860	.$2f5b	JSR COPY2_XYA_YREG
2865	.$2f5e	JSR TAB
2866	.$2f61	LDA #<VAR_CH
2867	.$2f63	LDY #>VAR_CH
2868	.$2f65	JSR COPY2_XYA_XREG
2872	.$2f68	JSR REALOUT
2873	.$2f6b	JSR CHECKCMD
2874	.$2f6e	JSR LINEBREAK
2875	.$2f71	LDA #<VAR_W
2876	.$2f73	LDY #>VAR_W
2877	.$2f75	JSR COPY2_XYA_XREG
2878	.$2f78	LDA #<VAR_V
2879	.$2f7a	LDY #>VAR_V
2880	.$2f7c	JSR REALFAC
2881	.$2f7f	JSR FACWORD
2884	.$2f82	STY MOVBSELF65+1
2885	.$2f85	STA MOVBSELF65+2
2886	.$2f88	JSR XREGFAC
2889	.$2f8b	JSR FACWORD
2890	.$2f8e	MOVBSELF65:
2891	.$2f8e	STY $FFFF
2892	.$2f91	LDA #<CONST_22
2893	.$2f93	LDY #>CONST_22
2894	.$2f95	JSR REALFAC
2895	.$2f98	LDA #<VAR_V
2896	.$2f9a	LDY #>VAR_V
2897	.$2f9c	JSR FACADD
2901	.$2f9f	JSR PUSHREAL
2902	.$2fa2	LDA #<CONST_27
2903	.$2fa4	LDY #>CONST_27
2904	.$2fa6	JSR REALFAC
2905	.$2fa9	LDA #<VAR_W
2906	.$2fab	LDY #>VAR_W
2907	.$2fad	JSR MEMSUB
2910	.$2fb0	JSR FACXREG
2912	.$2fb3	LDA #<VAR_D[]
2913	.$2fb5	LDY #>VAR_D[]
2914	.$2fb7	JSR ARRAYACCESS_REAL_S
2916	.$2fba	JSR POPREAL
2917	.$2fbd	JSR FACWORD
2919	.$2fc0	STY MOVBSELF66+1
2920	.$2fc3	STA MOVBSELF66+2
2921	.$2fc6	JSR XREGFAC
2924	.$2fc9	JSR FACWORD
2925	.$2fcc	MOVBSELF66:
2926	.$2fcc	STY $FFFF
2927	.$2fcf	JSR ONETOFAC
2929	.$2fd2	LDA #<VAR_Y
2930	.$2fd4	LDY #>VAR_Y
2931	.$2fd6	JSR FACADD
2935	.$2fd9	LDX #<VAR_Y
2936	.$2fdb	LDY #>VAR_Y
2938	.$2fdd	JSR FACMEM
2939	.$2fe0	LDA #<CONST_21R
2940	.$2fe2	LDY #>CONST_21R
2941	.$2fe4	JSR REALFAC
2942	.$2fe7	LDA #<VAR_W
2943	.$2fe9	LDY #>VAR_W
2944	.$2feb	JSR CMPFAC
2946	.$2fee	BEQ EQ_EQ24
2947	.$2ff0	LDA #0
2948	.$2ff2	JMP EQ_SKIP24
2949	.$2ff5	EQ_EQ24:
2950	.$2ff5	LDA #$1
2951	.$2ff7	EQ_SKIP24:
2952	.$2ff7	COMP_SKP29:
2953	.$2ff7	BNE LINE_NSKIP56
2955	.$2ff9	JMP LINE_SKIP56
2957	.$2ffc	LINE_NSKIP56:
2959	.$2ffc	LDA #<VAR_V
2960	.$2ffe	LDY #>VAR_V
2961	.$3000	JSR COPY2_XYA_YREG
2965	.$3003	LDA #<Y_REG
2966	.$3005	LDY #>Y_REG
2968	.$3007	JSR REALFACPUSH
2970	.$300a	LDA #<VAR_T
2971	.$300c	LDY #>VAR_T
2972	.$300e	JSR COPY2_XYA_XREG
2976	.$3011	JSR POPREAL
2977	.$3014	JSR FACWORD
2979	.$3017	STY MOVBSELF67+1
2980	.$301a	STA MOVBSELF67+2
2981	.$301d	JSR XREGFAC
2984	.$3020	JSR FACWORD
2985	.$3023	MOVBSELF67:
2986	.$3023	STY $FFFF
2987	.$3026	LDA #<CONST_22
2988	.$3028	LDY #>CONST_22
2989	.$302a	JSR COPY2_XYA_YREG
2993	.$302d	LDA #<VAR_V
2994	.$302f	LDY #>VAR_V
2995	.$3031	JSR COPY2_XYA_XREG
2999	.$3034	JSR YREGFAC
3001	.$3037	LDA #<X_REG
3002	.$3039	LDY #>X_REG
3004	.$303b	JSR FACADD
3007	.$303e	JSR PUSHREAL
3008	.$3041	LDA #<CONST_27
3009	.$3043	LDY #>CONST_27
3010	.$3045	JSR REALFAC
3011	.$3048	LDA #<VAR_T
3012	.$304a	LDY #>VAR_T
3013	.$304c	JSR MEMSUB
3016	.$304f	JSR FACXREG
3018	.$3052	LDA #<VAR_D[]
3019	.$3054	LDY #>VAR_D[]
3020	.$3056	JSR ARRAYACCESS_REAL_S
3022	.$3059	JSR POPREAL
3023	.$305c	JSR FACWORD
3025	.$305f	STY MOVBSELF68+1
3026	.$3062	STA MOVBSELF68+2
3027	.$3065	JSR XREGFAC
3030	.$3068	JSR FACWORD
3031	.$306b	MOVBSELF68:
3032	.$306b	STY $FFFF
3034	.$306e	LINE_SKIP56:
3037	.$306e	LINE_60:
3039	.$306e	LDA #<CONST_44R
3040	.$3070	LDY #>CONST_44R
3041	.$3072	JSR REALFAC
3042	.$3075	LDA #<VAR_Y
3043	.$3077	LDY #>VAR_Y
3044	.$3079	JSR CMPFAC
3046	.$307c	ROL
3047	.$307d	BCS GT_GT25
3048	.$307f	LDA #0
3049	.$3081	JMP GT_SKIP25
3050	.$3084	GT_GT25:
3051	.$3084	LDA #$1
3052	.$3086	GT_SKIP25:
3053	.$3086	COMP_SKP30:
3054	.$3086	BEQ LINE_SKIP57
3057	.$3088	LINE_NSKIP57:
3059	.$3088	JMP LINE_15
3061	.$308b	LINE_SKIP57:
3064	.$308b	LINE_61:
3066	.$308b	LDA #<CONST_45R
3067	.$308d	LDY #>CONST_45R
3068	.$308f	JSR REALFAC
3069	.$3092	LDA #<VAR_S
3070	.$3094	LDY #>VAR_S
3071	.$3096	JSR CMPFAC
3073	.$3099	ROL
3074	.$309a	BCS GT_GT26
3075	.$309c	LDA #0
3076	.$309e	JMP GT_SKIP26
3077	.$30a1	GT_GT26:
3078	.$30a1	LDA #$1
3079	.$30a3	GT_SKIP26:
3080	.$30a3	COMP_SKP31:
3081	.$30a3	BNE LINE_NSKIP58
3083	.$30a5	JMP LINE_SKIP58
3085	.$30a8	LINE_NSKIP58:
3087	.$30a8	LDA #<VAR_S
3088	.$30aa	LDY #>VAR_S
3089	.$30ac	JSR COPY2_XYA_YREG
3093	.$30af	LDA #<Y_REG
3094	.$30b1	LDY #>Y_REG
3096	.$30b3	JSR REALFACPUSH
3098	.$30b6	LDA #<VAR_T
3099	.$30b8	LDY #>VAR_T
3100	.$30ba	JSR COPY2_XYA_XREG
3104	.$30bd	JSR POPREAL
3105	.$30c0	JSR FACWORD
3107	.$30c3	STY MOVBSELF69+1
3108	.$30c6	STA MOVBSELF69+2
3109	.$30c9	JSR XREGFAC
3112	.$30cc	JSR FACWORD
3113	.$30cf	MOVBSELF69:
3114	.$30cf	STY $FFFF
3115	.$30d2	JMP LINE_16
3117	.$30d5	LINE_SKIP58:
3120	.$30d5	LINE_62:
3122	.$30d5	LDA #<VAR_S
3123	.$30d7	LDY #>VAR_S
3124	.$30d9	JSR REALFAC
3127	.$30dc	JSR FACWORD
3128	.$30df	STY MOVBSELF70+1
3129	.$30e2	STA MOVBSELF70+2
3130	.$30e5	LDA #$3A
3131	.$30e7	MOVBSELF70:
3132	.$30e7	STA $FFFF
3133	.$30ea	LDA #<CONST_22
3134	.$30ec	LDY #>CONST_22
3135	.$30ee	JSR REALFAC
3136	.$30f1	LDA #<VAR_S
3137	.$30f3	LDY #>VAR_S
3138	.$30f5	JSR FACADD
3144	.$30f8	JSR FACWORD
3145	.$30fb	STY MOVBSELF71+1
3146	.$30fe	STA MOVBSELF71+2
3147	.$3101	LDA #$0
3148	.$3103	MOVBSELF71:
3149	.$3103	STA $FFFF
3150	.$3106	JMP LINE_19
3152	.$3109	LINE_64:
3154	.$3109	LDX #4
3155	.$310b	dceloop1122_9:
3156	.$310b	LDA CONST_46R,X
3157	.$310e	CMP VAR_Y,X
3158	.$3111	BNE LINE_SKIP59
3159	.$3113	DEX
3160	.$3114	BPL dceloop1122_9
3162	.$3116	LINE_NSKIP59:
3165	.$3116	JMP LINE_67
3167	.$3119	LINE_SKIP59:
3170	.$3119	LINE_65:
3172	.$3119	JSR ONETOFAC
3174	.$311c	LDA #<VAR_Y
3175	.$311e	LDY #>VAR_Y
3176	.$3120	JSR FACADD
3180	.$3123	LDX #<VAR_N
3181	.$3125	LDY #>VAR_N
3183	.$3127	JSR FACMEM
3184	.$312a	LDA #<CONST_46R
3185	.$312c	LDY #>CONST_46R
3186	.$312e	JSR REALFACPUSH
3188	.$3131	LDA #<CONST_9R
3189	.$3133	LDY #>CONST_9R
3190	.$3135	JSR REALFACPUSH
3192	.$3138	LDA #<VAR_N
3193	.$313a	LDY #>VAR_N
3194	.$313c	STA A_REG
3195	.$313f	STY A_REG+1
3196	.$3142	LDA #<FORLOOP3
3197	.$3144	STA JUMP_TARGET
3198	.$3146	LDA #>FORLOOP3
3199	.$3148	STA JUMP_TARGET+1
3200	.$314a	JSR INITFOR
3201	.$314d	FORLOOP3:
3202	.$314d	LDA #<VAR_N
3203	.$314f	LDY #>VAR_N
3204	.$3151	JSR COPY2_XYA_XREG
3208	.$3154	LDA #<VAR_B[]
3209	.$3156	LDY #>VAR_B[]
3210	.$3158	JSR ARRAYACCESS_REAL_S
3212	.$315b	LDA #<CONST_23R
3213	.$315d	LDY #>CONST_23R
3214	.$315f	JSR REALFAC
3217	.$3162	LDA #<X_REG
3218	.$3164	LDY #>X_REG
3220	.$3166	JSR FACADD
3225	.$3169	JSR FACWORD
3226	.$316c	STY MOVBSELF72+1
3227	.$316f	STA MOVBSELF72+2
3228	.$3172	LDA #$3E
3229	.$3174	MOVBSELF72:
3230	.$3174	STA $FFFF
3231	.$3177	LDA #<CONST_47R
3232	.$3179	LDY #>CONST_47R
3233	.$317b	JSR REALFAC
3234	.$317e	LDA #<VAR_SS
3235	.$3180	LDY #>VAR_SS
3236	.$3182	JSR FACADD
3239	.$3185	JSR FACXREG
3242	.$3188	LDX #<VAR_SS
3243	.$318a	LDY #>VAR_SS
3245	.$318c	JSR FACMEM
3246	.$318f	LDA #<CONST_32
3247	.$3191	LDY #>CONST_32
3248	.$3193	JSR STROUTWL
3250	.$3196	JSR COMPACTMAX
3251	.$3199	LDA #<VAR_SS
3252	.$319b	LDY #>VAR_SS
3253	.$319d	JSR COPY2_XYA_YREG
3258	.$31a0	JSR STR
3259	.$31a3	LDY A_REG
3260	.$31a6	LDA A_REG+1
3261	.$31a9	STY B_REG
3262	.$31ac	STA B_REG+1
3264	.$31af	JSR LEN
3265	.$31b2	JSR COPY_XREG2YREG
3269	.$31b5	LDA #<CONST_33R
3270	.$31b7	LDY #>CONST_33R
3271	.$31b9	JSR COPY2_XYA_XREG
3275	.$31bc	JSR YREGFAC
3277	.$31bf	LDA #<X_REG
3278	.$31c1	LDY #>X_REG
3280	.$31c3	JSR MEMSUB
3283	.$31c6	JSR FACYREG
3286	.$31c9	JSR TAB
3287	.$31cc	LDA #<VAR_SS
3288	.$31ce	LDY #>VAR_SS
3289	.$31d0	JSR COPY2_XYA_XREG
3293	.$31d3	JSR REALOUT
3294	.$31d6	JSR CHECKCMD
3295	.$31d9	JSR LINEBREAK
3296	.$31dc	JSR GOSUB
3297	.$31df	JSR LINE_98
3299	.$31e2	LINE_66:
3301	.$31e2	LDY #250
3302	.$31e4	STY 36877
3304	.$31e7	LDX #4
3305	.$31e9	dcloop709_1:
3306	.$31e9	LDA CONST_1R,X
3307	.$31ec	STA VAR_M,X
3308	.$31ef	DEX
3309	.$31f0	BPL dcloop709_1
3311	.$31f2	LDA #<CONST_42R
3312	.$31f4	LDY #>CONST_42R
3313	.$31f6	JSR REALFACPUSH
3315	.$31f9	LDA #<CONST_9R
3316	.$31fb	LDY #>CONST_9R
3317	.$31fd	JSR REALFACPUSH
3319	.$3200	LDA #<VAR_M
3320	.$3202	LDY #>VAR_M
3321	.$3204	STA A_REG
3322	.$3207	STY A_REG+1
3323	.$320a	LDA #<FORLOOP4
3324	.$320c	STA JUMP_TARGET
3325	.$320e	LDA #>FORLOOP4
3326	.$3210	STA JUMP_TARGET+1
3327	.$3212	JSR INITFOR
3328	.$3215	FORLOOP4:
3329	.$3215	LDA #<900
3330	.$3217	STA TMP_ZP
3331	.$3219	LDA #>900
3332	.$321b	STA TMP_ZP+1
3333	.$321d	JSR SYSTEMCALL
3334	.$3220	LDA #<VAR_M
3335	.$3222	LDY #>VAR_M
3336	.$3224	JSR COPY2_XYA_XREG
3339	.$3227	JSR XREGFAC
3342	.$322a	JSR FACWORD
3343	.$322d	STY 36876
3344	.$3230	LDA #0
3345	.$3232	STA A_REG
3346	.$3235	STA A_REG+1
3347	.$3238	JSR NEXT
3349	.$323b	LDA A_REG
3350	.$323e	BNE RBEQ_3
3351	.$3240	JMP (JUMP_TARGET)
3353	.$3243	RBEQ_3:
3354	.$3243	LDY #0
3355	.$3245	STY 36876
3357	.$3248	STY 36877
3359	.$324b	LDA #0
3360	.$324d	STA A_REG
3361	.$3250	STA A_REG+1
3362	.$3253	JSR NEXT
3364	.$3256	LDA A_REG
3365	.$3259	BNE RBEQ_4
3366	.$325b	JMP (JUMP_TARGET)
3368	.$325e	RBEQ_4:
3370	.$325e	LINE_67:
3372	.$325e	LDA #<CONST_48
3373	.$3260	LDY #>CONST_48
3374	.$3262	JSR REALFAC
3375	.$3265	LDA #<VAR_E2
3376	.$3267	LDY #>VAR_E2
3377	.$3269	JSR FACADD
3381	.$326c	LDX #<VAR_E2
3382	.$326e	LDY #>VAR_E2
3384	.$3270	JSR FACMEM
3385	.$3273	JSR ONETOFAC
3387	.$3276	LDA #<VAR_SC
3388	.$3278	LDY #>VAR_SC
3389	.$327a	JSR FACADD
3393	.$327d	LDX #<VAR_SC
3394	.$327f	LDY #>VAR_SC
3396	.$3281	JSR FACMEM
3397	.$3284	JSR ONETOFAC
3399	.$3287	LDA #<VAR_E1
3400	.$3289	LDY #>VAR_E1
3401	.$328b	JSR FACADD
3405	.$328e	LDX #<VAR_E1
3406	.$3290	LDY #>VAR_E1
3408	.$3292	JSR FACMEM
3409	.$3295	LDA #<CONST_33R
3410	.$3297	LDY #>CONST_33R
3411	.$3299	JSR REALFAC
3412	.$329c	LDA #<VAR_E1
3413	.$329e	LDY #>VAR_E1
3414	.$32a0	JSR CMPFAC
3416	.$32a3	ROL
3417	.$32a4	BCS GT_GT28
3418	.$32a6	LDA #0
3419	.$32a8	JMP GT_SKIP28
3420	.$32ab	GT_GT28:
3421	.$32ab	LDA #$1
3422	.$32ad	GT_SKIP28:
3423	.$32ad	COMP_SKP35:
3424	.$32ad	BEQ LINE_SKIP60
3427	.$32af	LINE_NSKIP60:
3429	.$32af	LDX #4
3430	.$32b1	dcloop709_2:
3431	.$32b1	LDA CONST_33R,X
3432	.$32b4	STA VAR_E1,X
3433	.$32b7	DEX
3434	.$32b8	BPL dcloop709_2
3437	.$32ba	LINE_SKIP60:
3440	.$32ba	LINE_68:
3442	.$32ba	JMP LINE_15
3444	.$32bd	LINE_69:
3446	.$32bd	JMP LINE_69
3448	.$32c0	LINE_70:
3450	.$32c0	LDA #<CONST_49
3451	.$32c2	LDY #>CONST_49
3452	.$32c4	JSR STROUTWL
3454	.$32c7	LDX #4
3455	.$32c9	dcloop709_3:
3456	.$32c9	LDA CONST_9R,X
3457	.$32cc	STA VAR_N,X
3458	.$32cf	DEX
3459	.$32d0	BPL dcloop709_3
3461	.$32d2	LDA #<CONST_28R
3462	.$32d4	LDY #>CONST_28R
3463	.$32d6	JSR REALFACPUSH
3465	.$32d9	LDA #<CONST_9R
3466	.$32db	LDY #>CONST_9R
3467	.$32dd	JSR REALFACPUSH
3469	.$32e0	LDA #<VAR_N
3470	.$32e2	LDY #>VAR_N
3471	.$32e4	STA A_REG
3472	.$32e7	STY A_REG+1
3473	.$32ea	LDA #<FORLOOP5
3474	.$32ec	STA JUMP_TARGET
3475	.$32ee	LDA #>FORLOOP5
3476	.$32f0	STA JUMP_TARGET+1
3477	.$32f2	JSR INITFOR
3478	.$32f5	FORLOOP5:
3479	.$32f5	LDA #<CONST_50
3480	.$32f7	LDY #>CONST_50
3481	.$32f9	JSR STROUTBRKWL
3484	.$32fc	LDA #0
3485	.$32fe	STA A_REG
3486	.$3301	STA A_REG+1
3487	.$3304	JSR NEXT
3489	.$3307	LDA A_REG
3490	.$330a	BNE RBEQ_5
3491	.$330c	JMP (JUMP_TARGET)
3493	.$330f	RBEQ_5:
3494	.$330f	LDA #<CONST_50
3495	.$3311	LDY #>CONST_50
3496	.$3313	JSR STROUTWL
3498	.$3316	LDA #<CONST_51
3499	.$3318	LDY #>CONST_51
3500	.$331a	JSR STROUTBRKWL
3504	.$331d	LINE_71:
3506	.$331d	LDA #<CONST_52
3507	.$331f	LDY #>CONST_52
3508	.$3321	JSR STROUTWL
3510	.$3324	LDA #<CONST_53R
3511	.$3326	LDY #>CONST_53R
3512	.$3328	JSR COPY2_XYA_YREG
3517	.$332b	JSR TAB
3518	.$332e	LDA #<CONST_54
3519	.$3330	LDY #>CONST_54
3520	.$3332	JSR STROUTBRKWL
3523	.$3335	LDA #<CONST_53R
3524	.$3337	LDY #>CONST_53R
3525	.$3339	JSR COPY2_XYA_YREG
3530	.$333c	JSR TAB
3531	.$333f	LDA #<CONST_55
3532	.$3341	LDY #>CONST_55
3533	.$3343	JSR STROUTBRKWL
3536	.$3346	LDA #<CONST_53R
3537	.$3348	LDY #>CONST_53R
3538	.$334a	JSR COPY2_XYA_YREG
3543	.$334d	JSR TAB
3544	.$3350	LDA #<CONST_56
3545	.$3352	LDY #>CONST_56
3546	.$3354	JSR STROUTBRKWL
3549	.$3357	LDA #<CONST_53R
3550	.$3359	LDY #>CONST_53R
3551	.$335b	JSR COPY2_XYA_YREG
3556	.$335e	JSR TAB
3557	.$3361	LDA #<CONST_57
3558	.$3363	LDY #>CONST_57
3559	.$3365	JSR STROUTBRKWL
3563	.$3368	LINE_72:
3565	.$3368	LDX #4
3566	.$336a	dcloop709_4:
3567	.$336a	LDA CONST_9R,X
3568	.$336d	STA VAR_N,X
3569	.$3370	DEX
3570	.$3371	BPL dcloop709_4
3572	.$3373	LDA #<CONST_24R
3573	.$3375	LDY #>CONST_24R
3574	.$3377	JSR REALFACPUSH
3576	.$337a	LDA #<CONST_9R
3577	.$337c	LDY #>CONST_9R
3578	.$337e	JSR REALFACPUSH
3580	.$3381	LDA #<VAR_N
3581	.$3383	LDY #>VAR_N
3582	.$3385	STA A_REG
3583	.$3388	STY A_REG+1
3584	.$338b	LDA #<FORLOOP6
3585	.$338d	STA JUMP_TARGET
3586	.$338f	LDA #>FORLOOP6
3587	.$3391	STA JUMP_TARGET+1
3588	.$3393	JSR INITFOR
3589	.$3396	FORLOOP6:
3590	.$3396	LDA #<CONST_58
3591	.$3398	LDY #>CONST_58
3592	.$339a	JSR STROUTWL
3594	.$339d	LDA #<CONST_59
3595	.$339f	LDY #>CONST_59
3596	.$33a1	JSR STROUTBRKWL
3599	.$33a4	LDA #0
3600	.$33a6	STA A_REG
3601	.$33a9	STA A_REG+1
3602	.$33ac	JSR NEXT
3604	.$33af	LDA A_REG
3605	.$33b2	BNE RBEQ_6
3606	.$33b4	JMP (JUMP_TARGET)
3608	.$33b7	RBEQ_6:
3609	.$33b7	LDA #<CONST_58
3610	.$33b9	LDY #>CONST_58
3611	.$33bb	JSR STROUTWL
3613	.$33be	LDA #<CONST_51
3614	.$33c0	LDY #>CONST_51
3615	.$33c2	JSR STROUTWL
3617	.$33c5	LDY #62
3618	.$33c7	STY 8185
3621	.$33ca	LINE_73:
3623	.$33ca	LDA #<CONST_60
3624	.$33cc	LDY #>CONST_60
3625	.$33ce	JSR STROUTWL
3627	.$33d1	JSR COMPACTMAX
3628	.$33d4	LDA #<VAR_SS
3629	.$33d6	LDY #>VAR_SS
3630	.$33d8	JSR COPY2_XYA_YREG
3635	.$33db	JSR STR
3636	.$33de	LDY A_REG
3637	.$33e1	LDA A_REG+1
3638	.$33e4	STY B_REG
3639	.$33e7	STA B_REG+1
3641	.$33ea	JSR LEN
3642	.$33ed	JSR COPY_XREG2YREG
3646	.$33f0	LDA #<CONST_33R
3647	.$33f2	LDY #>CONST_33R
3648	.$33f4	JSR COPY2_XYA_XREG
3652	.$33f7	JSR YREGFAC
3654	.$33fa	LDA #<X_REG
3655	.$33fc	LDY #>X_REG
3657	.$33fe	JSR MEMSUB
3660	.$3401	JSR FACYREG
3663	.$3404	JSR TAB
3664	.$3407	LDA #<VAR_SS
3665	.$3409	LDY #>VAR_SS
3666	.$340b	JSR COPY2_XYA_XREG
3670	.$340e	JSR REALOUT
3671	.$3411	JSR CRSRRIGHT
3672	.$3414	LDA #<CONST_43R
3673	.$3416	LDY #>CONST_43R
3674	.$3418	JSR COPY2_XYA_YREG
3679	.$341b	JSR TAB
3680	.$341e	LDA #<VAR_CH
3681	.$3420	LDY #>VAR_CH
3682	.$3422	JSR COPY2_XYA_XREG
3686	.$3425	JSR REALOUT
3687	.$3428	JSR CRSRRIGHT
3688	.$342b	LDA #<CONST_61R
3689	.$342d	LDY #>CONST_61R
3690	.$342f	JSR COPY2_XYA_YREG
3695	.$3432	JSR TAB
3696	.$3435	LDA #<VAR_SC
3697	.$3437	LDY #>VAR_SC
3698	.$3439	JSR COPY2_XYA_XREG
3702	.$343c	JSR REALOUT
3703	.$343f	JSR CHECKCMD
3704	.$3442	JSR LINEBREAK
3705	.$3445	LDY #163
3706	.$3447	STY 7697
3708	.$344a	LDA #0
3709	.$344c	STA VAR_N
3710	.$344f	STA VAR_N+1
3711	.$3452	STA VAR_N+2
3712	.$3455	STA VAR_N+3
3713	.$3458	STA VAR_N+4
3715	.$345b	LDA #<CONST_46R
3716	.$345d	LDY #>CONST_46R
3717	.$345f	JSR REALFACPUSH
3719	.$3462	LDA #<CONST_9R
3720	.$3464	LDY #>CONST_9R
3721	.$3466	JSR REALFACPUSH
3723	.$3469	LDA #<VAR_N
3724	.$346b	LDY #>VAR_N
3725	.$346d	STA A_REG
3726	.$3470	STY A_REG+1
3727	.$3473	LDA #<FORLOOP7
3728	.$3475	STA JUMP_TARGET
3729	.$3477	LDA #>FORLOOP7
3730	.$3479	STA JUMP_TARGET+1
3731	.$347b	JSR INITFOR
3732	.$347e	FORLOOP7:
3733	.$347e	LDA #<VAR_N
3734	.$3480	LDY #>VAR_N
3735	.$3482	JSR COPY2_XYA_XREG
3739	.$3485	LDA #<VAR_B[]
3740	.$3487	LDY #>VAR_B[]
3741	.$3489	JSR ARRAYACCESS_REAL_S
3743	.$348c	LDA #<CONST_23R
3744	.$348e	LDY #>CONST_23R
3745	.$3490	JSR REALFAC
3748	.$3493	LDA #<X_REG
3749	.$3495	LDY #>X_REG
3751	.$3497	JSR FACADD
3756	.$349a	JSR FACWORD
3757	.$349d	STY MOVBSELF79+1
3758	.$34a0	STA MOVBSELF79+2
3759	.$34a3	LDA #$3C
3760	.$34a5	MOVBSELF79:
3761	.$34a5	STA $FFFF
3763	.$34a8	LINE_74:
3765	.$34a8	LDA #<VAR_N
3766	.$34aa	LDY #>VAR_N
3767	.$34ac	JSR COPY2_XYA_XREG
3771	.$34af	LDA #<VAR_B[]
3772	.$34b1	LDY #>VAR_B[]
3773	.$34b3	JSR ARRAYACCESS_REAL_S
3775	.$34b6	LDA #<CONST_23R
3776	.$34b8	LDY #>CONST_23R
3777	.$34ba	JSR REALFAC
3780	.$34bd	LDA #<X_REG
3781	.$34bf	LDY #>X_REG
3783	.$34c1	JSR FACADD
3785	.$34c4	JSR FACXREG
3787	.$34c7	LDA #<CONST_22
3788	.$34c9	LDY #>CONST_22
3789	.$34cb	JSR REALFAC
3791	.$34ce	LDA #<X_REG
3792	.$34d0	LDY #>X_REG
3794	.$34d2	JSR FACADD
3799	.$34d5	JSR FACWORD
3800	.$34d8	STY MOVBSELF80+1
3801	.$34db	STA MOVBSELF80+2
3802	.$34de	LDA #$6
3803	.$34e0	MOVBSELF80:
3804	.$34e0	STA $FFFF
3805	.$34e3	LDA #0
3806	.$34e5	STA A_REG
3807	.$34e8	STA A_REG+1
3808	.$34eb	JSR NEXT
3810	.$34ee	LDA A_REG
3811	.$34f1	BNE RBEQ_7
3812	.$34f3	JMP (JUMP_TARGET)
3814	.$34f6	RBEQ_7:
3815	.$34f6	LDX #4
3816	.$34f8	dcloop869_1:
3817	.$34f8	LDA CONST_63R,X
3818	.$34fb	STA VAR_N,X
3819	.$34fe	DEX
3820	.$34ff	BPL dcloop869_1
3822	.$3501	LDA #<CONST_40R
3823	.$3503	LDY #>CONST_40R
3824	.$3505	JSR REALFACPUSH
3826	.$3508	LDA #<CONST_64R
3827	.$350a	LDY #>CONST_64R
3828	.$350c	JSR REALFACPUSH
3830	.$350f	LDA #<VAR_N
3831	.$3511	LDY #>VAR_N
3832	.$3513	STA A_REG
3833	.$3516	STY A_REG+1
3834	.$3519	LDA #<FORLOOP8
3835	.$351b	STA JUMP_TARGET
3836	.$351d	LDA #>FORLOOP8
3837	.$351f	STA JUMP_TARGET+1
3838	.$3521	JSR INITFOR
3839	.$3524	FORLOOP8:
3840	.$3524	LDX #4
3841	.$3526	dceloop1122_10:
3842	.$3526	LDA CONST_40R,X
3843	.$3529	CMP VAR_N,X
3844	.$352c	BNE LINE_SKIP61
3845	.$352e	DEX
3846	.$352f	BPL dceloop1122_10
3848	.$3531	LINE_NSKIP61:
3851	.$3531	JMP LINE_80
3853	.$3534	LINE_SKIP61:
3856	.$3534	LINE_75:
3858	.$3534	LDX #4
3859	.$3536	dcloop869_2:
3860	.$3536	LDA CONST_9R,X
3861	.$3539	STA VAR_O,X
3862	.$353c	DEX
3863	.$353d	BPL dcloop869_2
3865	.$353f	LDA #<CONST_24R
3866	.$3541	LDY #>CONST_24R
3867	.$3543	JSR REALFACPUSH
3869	.$3546	LDA #<CONST_9R
3870	.$3548	LDY #>CONST_9R
3871	.$354a	JSR REALFACPUSH
3873	.$354d	LDA #<VAR_O
3874	.$354f	LDY #>VAR_O
3875	.$3551	STA A_REG
3876	.$3554	STY A_REG+1
3877	.$3557	LDA #<FORLOOP9
3878	.$3559	STA JUMP_TARGET
3879	.$355b	LDA #>FORLOOP9
3880	.$355d	STA JUMP_TARGET+1
3881	.$355f	JSR INITFOR
3882	.$3562	FORLOOP9:
3884	.$3562	LINE_76:
3886	.$3562	JSR ONETOFAC
3891	.$3565	JSR FACRND
3892	.$3568	JSR FACXREG
3893	.$356b	LDY #4
3894	.$356d	LDA #0
3895	.$356f	STY A_REG
3896	.$3572	STA A_REG+1
3897	.$3575	JSR COPY_XREG2YREG
3901	.$3578	JSR SHL
3902	.$357b	JSR FACXREG
3904	.$357e	LDY #2
3905	.$3580	LDA #0
3906	.$3582	STY A_REG
3907	.$3585	STA A_REG+1
3908	.$3588	JSR YREGFAC
3911	.$358b	JSR SHL
3913	.$358e	LDA #<X_REG
3914	.$3590	LDY #>X_REG
3916	.$3592	JSR FACADD
3921	.$3595	JSR BASINT
3923	.$3598	JSR PUSHREAL
3924	.$359b	JSR ONETOFAC
3926	.$359e	LDA #<VAR_N
3927	.$35a0	LDY #>VAR_N
3928	.$35a2	JSR FACADD
3931	.$35a5	JSR FACXREG
3933	.$35a8	JSR POPREAL2X
3935	.$35ab	JSR ARGADD
3938	.$35ae	LDX #<VAR_R
3939	.$35b0	LDY #>VAR_R
3940	.$35b2	JSR FACMEM
3944	.$35b5	JSR FACWORD
3945	.$35b8	STY MOVBSELF81+1
3946	.$35bb	STA MOVBSELF81+2
3947	.$35be	MOVBSELF81:
3948	.$35be	LDA $FFFF
3949	.$35c1	CMP #56
3950	.$35c3	BCC PEEKLT9
3951	.$35c5	BEQ PEEKEQ9
3952	.$35c7	LDA #$FF
3953	.$35c9	JMP PEEKDONE9
3954	.$35cc	PEEKLT9:
3955	.$35cc	LDA #$01
3956	.$35ce	JMP PEEKDONE9
3957	.$35d1	PEEKEQ9:
3958	.$35d1	LDA #0
3959	.$35d3	PEEKDONE9:
3963	.$35d3	NEQ_NEQ30:
3964	.$35d3	NEQ_SKIP30:
3965	.$35d3	COMP_SKP40:
3966	.$35d3	BEQ LINE_SKIP62
3967	.$35d5	LINE_NSKIP62:
3970	.$35d5	JMP LINE_76
3972	.$35d8	LINE_SKIP62:
3975	.$35d8	LINE_77:
3977	.$35d8	LDX #4
3978	.$35da	dcloop869_3:
3979	.$35da	LDA VAR_R,X
3980	.$35dd	STA VAR_M,X
3981	.$35e0	DEX
3982	.$35e1	BPL dcloop869_3
3984	.$35e3	LDA #<CONST_65R
3985	.$35e5	LDY #>CONST_65R
3986	.$35e7	JSR REALFAC
3987	.$35ea	LDA #<VAR_R
3988	.$35ec	LDY #>VAR_R
3989	.$35ee	JSR FACADD
3993	.$35f1	JSR PUSHREAL
3994	.$35f4	LDA #<CONST_19R
3995	.$35f6	LDY #>CONST_19R
3996	.$35f8	JSR REALFACPUSH
3998	.$35fb	LDA #<VAR_M
3999	.$35fd	LDY #>VAR_M
4000	.$35ff	STA A_REG
4001	.$3602	STY A_REG+1
4002	.$3605	LDA #<FORLOOP10
4003	.$3607	STA JUMP_TARGET
4004	.$3609	LDA #>FORLOOP10
4005	.$360b	STA JUMP_TARGET+1
4006	.$360d	JSR INITFOR
4007	.$3610	FORLOOP10:
4008	.$3610	LDA #<VAR_M
4009	.$3612	LDY #>VAR_M
4010	.$3614	JSR REALFAC
4013	.$3617	JSR FACWORD
4014	.$361a	STY MOVBSELF82+1
4015	.$361d	STA MOVBSELF82+2
4016	.$3620	LDA #$39
4017	.$3622	MOVBSELF82:
4018	.$3622	STA $FFFF
4019	.$3625	LDA #<CONST_22
4020	.$3627	LDY #>CONST_22
4021	.$3629	JSR REALFAC
4022	.$362c	LDA #<VAR_M
4023	.$362e	LDY #>VAR_M
4024	.$3630	JSR FACADD
4030	.$3633	JSR FACWORD
4031	.$3636	STY MOVBSELF83+1
4032	.$3639	STA MOVBSELF83+2
4033	.$363c	LDA #$2
4034	.$363e	MOVBSELF83:
4035	.$363e	STA $FFFF
4036	.$3641	LDA #0
4037	.$3643	STA A_REG
4038	.$3646	STA A_REG+1
4039	.$3649	JSR NEXT
4041	.$364c	LDA A_REG
4042	.$364f	BNE RBEQ_8
4043	.$3651	JMP (JUMP_TARGET)
4045	.$3654	RBEQ_8:
4046	.$3654	LDA #<VAR_E2
4047	.$3656	LDY #>VAR_E2
4048	.$3658	JSR REALFACPUSH
4050	.$365b	JSR ONETOFAC
4055	.$365e	JSR FACRND
4056	.$3661	JSR FACXREG
4058	.$3664	JSR POPREAL
4059	.$3667	JSR FACYREG
4062	.$366a	LDA #<X_REG
4063	.$366c	LDY #>X_REG
4065	.$366e	JSR CMPFAC
4066	.$3671	BEQ LT_LT_EQ31
4067	.$3673	ROL
4068	.$3674	BCC LT_LT31
4069	.$3676	LT_LT_EQ31:
4070	.$3676	LDA #<REAL_CONST_ZERO
4071	.$3678	LDY #>REAL_CONST_ZERO
4072	.$367a	JMP LT_SKIP31
4073	.$367d	LT_LT31:
4074	.$367d	LDA #<REAL_CONST_MINUS_ONE
4075	.$367f	LDY #>REAL_CONST_MINUS_ONE
4076	.$3681	LT_SKIP31:
4078	.$3681	JSR REALFACPUSH
4080	.$3684	JSR ONETOFAC
4082	.$3687	LDA #<VAR_O
4083	.$3689	LDY #>VAR_O
4084	.$368b	JSR CMPFAC
4086	.$368e	ROL
4087	.$368f	BCS GT_GT32
4088	.$3691	LDA #<REAL_CONST_ZERO
4089	.$3693	LDY #>REAL_CONST_ZERO
4090	.$3695	JMP GT_SKIP32
4091	.$3698	GT_GT32:
4092	.$3698	LDA #<REAL_CONST_MINUS_ONE
4093	.$369a	LDY #>REAL_CONST_MINUS_ONE
4094	.$369c	GT_SKIP32:
4096	.$369c	JSR REALFAC
4097	.$369f	JSR FACXREG
4099	.$36a2	JSR POPREAL2X
4101	.$36a5	JSR FASTAND
4104	.$36a8	JSR FACXREG
4106	.$36ab	LDA X_REG
4107	.$36ad	COMP_SKP42:
4108	.$36ad	BNE LINE_NSKIP63
4110	.$36af	JMP LINE_SKIP63
4112	.$36b2	LINE_NSKIP63:
4114	.$36b2	LDA #<CONST_9R
4115	.$36b4	LDY #>CONST_9R
4116	.$36b6	JSR COPY2_XYA_YREG
4120	.$36b9	JSR YREGFAC
4123	.$36bc	JSR FACRND
4124	.$36bf	JSR FACXREG
4125	.$36c2	LDY #1
4126	.$36c4	STY A_REG
4128	.$36c7	JSR SHL
4133	.$36ca	JSR BASINT
4134	.$36cd	JSR FACXREG
4136	.$36d0	LDA #<CONST_11R
4137	.$36d2	LDY #>CONST_11R
4138	.$36d4	JSR REALFAC
4141	.$36d7	LDA #<X_REG
4142	.$36d9	LDY #>X_REG
4144	.$36db	JSR FACADD
4146	.$36de	JSR FACXREG
4148	.$36e1	LDA #<CONST_19R
4149	.$36e3	LDY #>CONST_19R
4150	.$36e5	JSR REALFAC
4153	.$36e8	LDA #<X_REG
4154	.$36ea	LDY #>X_REG
4156	.$36ec	JSR MEMMUL
4157	.$36ef	JSR FACXREG
4159	.$36f2	LDA #<VAR_R
4160	.$36f4	LDY #>VAR_R
4161	.$36f6	JSR REALFAC
4163	.$36f9	LDA #<X_REG
4164	.$36fb	LDY #>X_REG
4166	.$36fd	JSR FACADD
4171	.$3700	JSR FACWORD
4172	.$3703	STY MOVBSELF84+1
4173	.$3706	STA MOVBSELF84+2
4174	.$3709	LDA #$3F
4175	.$370b	MOVBSELF84:
4176	.$370b	STA $FFFF
4178	.$370e	LINE_SKIP63:
4181	.$370e	LINE_78:
4183	.$370e	LDA #<CONST_19R
4184	.$3710	LDY #>CONST_19R
4185	.$3712	JSR REALFAC
4186	.$3715	LDA #<VAR_R
4187	.$3717	LDY #>VAR_R
4188	.$3719	JSR MEMSUB
4194	.$371c	JSR FACWORD
4195	.$371f	STY MOVBSELF85+1
4196	.$3722	STA MOVBSELF85+2
4197	.$3725	MOVBSELF85:
4198	.$3725	LDA $FFFF
4199	.$3728	CMP #62
4200	.$372a	BCC PEEKLT10
4201	.$372c	BEQ PEEKEQ10
4202	.$372e	LDA #$FF
4203	.$3730	JMP PEEKDONE10
4204	.$3733	PEEKLT10:
4205	.$3733	LDA #$01
4206	.$3735	JMP PEEKDONE10
4207	.$3738	PEEKEQ10:
4208	.$3738	LDA #0
4209	.$373a	PEEKDONE10:
4213	.$373a	BEQ EQ_EQ33
4214	.$373c	LDA #<REAL_CONST_ZERO
4215	.$373e	LDY #>REAL_CONST_ZERO
4216	.$3740	JMP EQ_SKIP33
4217	.$3743	EQ_EQ33:
4218	.$3743	LDA #<REAL_CONST_MINUS_ONE
4219	.$3745	LDY #>REAL_CONST_MINUS_ONE
4220	.$3747	EQ_SKIP33:
4222	.$3747	JSR REALFACPUSH
4224	.$374a	JSR ONETOFAC
4229	.$374d	JSR FACRND
4230	.$3750	JSR FACXREG
4232	.$3753	LDA #<CONST_66
4233	.$3755	LDY #>CONST_66
4234	.$3757	JSR REALFAC
4236	.$375a	LDA #<X_REG
4237	.$375c	LDY #>X_REG
4239	.$375e	JSR CMPFAC
4240	.$3761	BEQ LT_LT_EQ34
4241	.$3763	ROL
4242	.$3764	BCC LT_LT34
4243	.$3766	LT_LT_EQ34:
4244	.$3766	LDA #<REAL_CONST_ZERO
4245	.$3768	LDY #>REAL_CONST_ZERO
4246	.$376a	JMP LT_SKIP34
4247	.$376d	LT_LT34:
4248	.$376d	LDA #<REAL_CONST_MINUS_ONE
4249	.$376f	LDY #>REAL_CONST_MINUS_ONE
4250	.$3771	LT_SKIP34:
4252	.$3771	JSR REALFAC
4253	.$3774	JSR FACXREG
4255	.$3777	JSR POPREAL2X
4257	.$377a	JSR FASTAND
4260	.$377d	JSR FACXREG
4262	.$3780	LDA X_REG
4263	.$3782	COMP_SKP43:
4264	.$3782	BNE LINE_NSKIP64
4266	.$3784	JMP LINE_SKIP64
4268	.$3787	LINE_NSKIP64:
4270	.$3787	LDA #<CONST_19R
4271	.$3789	LDY #>CONST_19R
4272	.$378b	JSR COPY2_XYA_YREG
4276	.$378e	LDA #<VAR_R
4277	.$3790	LDY #>VAR_R
4278	.$3792	JSR COPY2_XYA_XREG
4282	.$3795	JSR YREGFAC
4284	.$3798	LDA #<X_REG
4285	.$379a	LDY #>X_REG
4287	.$379c	JSR MEMSUB
4292	.$379f	JSR FACWORD
4293	.$37a2	STY MOVBSELF86+1
4294	.$37a5	STA MOVBSELF86+2
4295	.$37a8	LDA #$3F
4296	.$37aa	MOVBSELF86:
4297	.$37aa	STA $FFFF
4299	.$37ad	LINE_SKIP64:
4302	.$37ad	LINE_79:
4304	.$37ad	LDA #0
4305	.$37af	STA A_REG
4306	.$37b2	STA A_REG+1
4307	.$37b5	JSR NEXT
4309	.$37b8	LDA A_REG
4310	.$37bb	BNE RBEQ_9
4311	.$37bd	JMP (JUMP_TARGET)
4313	.$37c0	RBEQ_9:
4315	.$37c0	LINE_80:
4317	.$37c0	LDX #4
4318	.$37c2	dcloop869_4:
4319	.$37c2	LDA CONST_9R,X
4320	.$37c5	STA VAR_O,X
4321	.$37c8	DEX
4322	.$37c9	BPL dcloop869_4
4324	.$37cb	LDA #<VAR_E1
4325	.$37cd	LDY #>VAR_E1
4326	.$37cf	JSR REALFACPUSH
4328	.$37d2	LDA #<CONST_9R
4329	.$37d4	LDY #>CONST_9R
4330	.$37d6	JSR REALFACPUSH
4332	.$37d9	LDA #<VAR_O
4333	.$37db	LDY #>VAR_O
4334	.$37dd	STA A_REG
4335	.$37e0	STY A_REG+1
4336	.$37e3	LDA #<FORLOOP11
4337	.$37e5	STA JUMP_TARGET
4338	.$37e7	LDA #>FORLOOP11
4339	.$37e9	STA JUMP_TARGET+1
4340	.$37eb	JSR INITFOR
4341	.$37ee	FORLOOP11:
4343	.$37ee	LINE_81:
4345	.$37ee	JSR ONETOFAC
4350	.$37f1	JSR FACRND
4351	.$37f4	JSR FACXREG
4352	.$37f7	LDY #4
4353	.$37f9	STY A_REG
4355	.$37fc	JSR SHL
4360	.$37ff	JSR BASINT
4362	.$3802	JSR PUSHREAL
4363	.$3805	LDA #<CONST_24R
4364	.$3807	LDY #>CONST_24R
4365	.$3809	JSR REALFAC
4366	.$380c	LDA #<VAR_N
4367	.$380e	LDY #>VAR_N
4368	.$3810	JSR FACADD
4371	.$3813	JSR FACXREG
4373	.$3816	JSR POPREAL2X
4375	.$3819	JSR ARGADD
4378	.$381c	LDX #<VAR_R
4379	.$381e	LDY #>VAR_R
4381	.$3820	JSR FACMEM
4382	.$3823	JSR ONETOFAC
4384	.$3826	LDA #<VAR_R
4385	.$3828	LDY #>VAR_R
4386	.$382a	JSR MEMSUB
4392	.$382d	JSR FACWORD
4393	.$3830	STY MOVBSELF87+1
4394	.$3833	STA MOVBSELF87+2
4395	.$3836	MOVBSELF87:
4396	.$3836	LDA $FFFF
4397	.$3839	CMP #62
4398	.$383b	BCC PEEKLT11
4399	.$383d	BEQ PEEKEQ11
4400	.$383f	LDA #$FF
4401	.$3841	JMP PEEKDONE11
4402	.$3844	PEEKLT11:
4403	.$3844	LDA #$01
4404	.$3846	JMP PEEKDONE11
4405	.$3849	PEEKEQ11:
4406	.$3849	LDA #0
4407	.$384b	PEEKDONE11:
4411	.$384b	BEQ EQ_EQ35
4412	.$384d	LDA #<REAL_CONST_ZERO
4413	.$384f	LDY #>REAL_CONST_ZERO
4414	.$3851	JMP EQ_SKIP35
4415	.$3854	EQ_EQ35:
4416	.$3854	LDA #<REAL_CONST_MINUS_ONE
4417	.$3856	LDY #>REAL_CONST_MINUS_ONE
4418	.$3858	EQ_SKIP35:
4420	.$3858	JSR REALFACPUSH
4422	.$385b	JSR ONETOFAC
4424	.$385e	LDA #<VAR_R
4425	.$3860	LDY #>VAR_R
4426	.$3862	JSR FACADD
4432	.$3865	JSR FACWORD
4433	.$3868	STY MOVBSELF88+1
4434	.$386b	STA MOVBSELF88+2
4435	.$386e	MOVBSELF88:
4436	.$386e	LDA $FFFF
4437	.$3871	CMP #62
4438	.$3873	BCC PEEKLT12
4439	.$3875	BEQ PEEKEQ12
4440	.$3877	LDA #$FF
4441	.$3879	JMP PEEKDONE12
4442	.$387c	PEEKLT12:
4443	.$387c	LDA #$01
4444	.$387e	JMP PEEKDONE12
4445	.$3881	PEEKEQ12:
4446	.$3881	LDA #0
4447	.$3883	PEEKDONE12:
4451	.$3883	BEQ EQ_EQ36
4452	.$3885	LDA #<REAL_CONST_ZERO
4453	.$3887	LDY #>REAL_CONST_ZERO
4454	.$3889	JMP EQ_SKIP36
4455	.$388c	EQ_EQ36:
4456	.$388c	LDA #<REAL_CONST_MINUS_ONE
4457	.$388e	LDY #>REAL_CONST_MINUS_ONE
4458	.$3890	EQ_SKIP36:
4460	.$3890	JSR REALFACPUSH
4462	.$3893	LDA #<CONST_19R
4463	.$3895	LDY #>CONST_19R
4464	.$3897	JSR REALFAC
4465	.$389a	LDA #<VAR_R
4466	.$389c	LDY #>VAR_R
4467	.$389e	JSR MEMSUB
4473	.$38a1	JSR FACWORD
4474	.$38a4	STY MOVBSELF89+1
4475	.$38a7	STA MOVBSELF89+2
4476	.$38aa	MOVBSELF89:
4477	.$38aa	LDA $FFFF
4478	.$38ad	CMP #62
4479	.$38af	BCC PEEKLT13
4480	.$38b1	BEQ PEEKEQ13
4481	.$38b3	LDA #$FF
4482	.$38b5	JMP PEEKDONE13
4483	.$38b8	PEEKLT13:
4484	.$38b8	LDA #$01
4485	.$38ba	JMP PEEKDONE13
4486	.$38bd	PEEKEQ13:
4487	.$38bd	LDA #0
4488	.$38bf	PEEKDONE13:
4492	.$38bf	BNE NEQ_NEQ37
4493	.$38c1	LDA #<REAL_CONST_ZERO
4494	.$38c3	LDY #>REAL_CONST_ZERO
4495	.$38c5	JMP NEQ_SKIP37
4496	.$38c8	NEQ_NEQ37:
4497	.$38c8	LDA #<REAL_CONST_MINUS_ONE
4498	.$38ca	LDY #>REAL_CONST_MINUS_ONE
4499	.$38cc	NEQ_SKIP37:
4501	.$38cc	JSR REALFACPUSH
4503	.$38cf	LDA #<VAR_R
4504	.$38d1	LDY #>VAR_R
4505	.$38d3	JSR REALFAC
4508	.$38d6	JSR FACWORD
4509	.$38d9	STY MOVBSELF90+1
4510	.$38dc	STA MOVBSELF90+2
4511	.$38df	MOVBSELF90:
4512	.$38df	LDA $FFFF
4513	.$38e2	CMP #56
4514	.$38e4	BCC PEEKLT14
4515	.$38e6	BEQ PEEKEQ14
4516	.$38e8	LDA #$FF
4517	.$38ea	JMP PEEKDONE14
4518	.$38ed	PEEKLT14:
4519	.$38ed	LDA #$01
4520	.$38ef	JMP PEEKDONE14
4521	.$38f2	PEEKEQ14:
4522	.$38f2	LDA #0
4523	.$38f4	PEEKDONE14:
4527	.$38f4	BNE NEQ_NEQ38
4528	.$38f6	LDA #<REAL_CONST_ZERO
4529	.$38f8	LDY #>REAL_CONST_ZERO
4530	.$38fa	JMP NEQ_SKIP38
4531	.$38fd	NEQ_NEQ38:
4532	.$38fd	LDA #<REAL_CONST_MINUS_ONE
4533	.$38ff	LDY #>REAL_CONST_MINUS_ONE
4534	.$3901	NEQ_SKIP38:
4536	.$3901	JSR REALFAC
4537	.$3904	JSR FACXREG
4539	.$3907	JSR POPREAL2X
4541	.$390a	JSR FASTOR
4544	.$390d	JSR FACXREG
4546	.$3910	JSR POPREAL2X
4548	.$3913	JSR FASTOR
4551	.$3916	JSR FACXREG
4553	.$3919	JSR POPREAL2X
4555	.$391c	JSR FASTOR
4558	.$391f	JSR FACXREG
4560	.$3922	LDA X_REG
4561	.$3924	COMP_SKP45:
4562	.$3924	BEQ LINE_SKIP65
4565	.$3926	LINE_NSKIP65:
4567	.$3926	JMP LINE_85
4569	.$3929	LINE_SKIP65:
4572	.$3929	LINE_84:
4574	.$3929	LDA #<VAR_R
4575	.$392b	LDY #>VAR_R
4576	.$392d	JSR REALFAC
4579	.$3930	JSR FACWORD
4580	.$3933	STY MOVBSELF91+1
4581	.$3936	STA MOVBSELF91+2
4582	.$3939	LDA #$3E
4583	.$393b	MOVBSELF91:
4584	.$393b	STA $FFFF
4585	.$393e	LDA #<CONST_19R
4586	.$3940	LDY #>CONST_19R
4587	.$3942	JSR REALFAC
4588	.$3945	LDA #<VAR_R
4589	.$3947	LDY #>VAR_R
4590	.$3949	JSR MEMSUB
4596	.$394c	JSR FACWORD
4597	.$394f	STY MOVBSELF92+1
4598	.$3952	STA MOVBSELF92+2
4599	.$3955	LDA #$3F
4600	.$3957	MOVBSELF92:
4601	.$3957	STA $FFFF
4603	.$395a	LINE_85:
4605	.$395a	LDA #0
4606	.$395c	STA A_REG
4607	.$395f	STA A_REG+1
4608	.$3962	JSR NEXT
4610	.$3965	LDA A_REG
4611	.$3968	BNE RBEQ_10
4612	.$396a	JMP (JUMP_TARGET)
4614	.$396d	RBEQ_10:
4616	.$396d	LINE_86:
4618	.$396d	LDX #4
4619	.$396f	dcloop1029_1:
4620	.$396f	LDA CONST_9R,X
4621	.$3972	STA VAR_O,X
4622	.$3975	DEX
4623	.$3976	BPL dcloop1029_1
4625	.$3978	LDA #<CONST_12R
4626	.$397a	LDY #>CONST_12R
4627	.$397c	JSR REALFACPUSH
4629	.$397f	LDA #<CONST_9R
4630	.$3981	LDY #>CONST_9R
4631	.$3983	JSR REALFACPUSH
4633	.$3986	LDA #<VAR_O
4634	.$3988	LDY #>VAR_O
4635	.$398a	STA A_REG
4636	.$398d	STY A_REG+1
4637	.$3990	LDA #<FORLOOP12
4638	.$3992	STA JUMP_TARGET
4639	.$3994	LDA #>FORLOOP12
4640	.$3996	STA JUMP_TARGET+1
4641	.$3998	JSR INITFOR
4642	.$399b	FORLOOP12:
4644	.$399b	LINE_87:
4646	.$399b	JSR ONETOFAC
4651	.$399e	JSR FACRND
4652	.$39a1	JSR FACXREG
4653	.$39a4	LDY #4
4654	.$39a6	LDA #0
4655	.$39a8	STY A_REG
4656	.$39ab	STA A_REG+1
4657	.$39ae	JSR COPY_XREG2YREG
4661	.$39b1	JSR SHL
4662	.$39b4	JSR FACXREG
4664	.$39b7	LDY #2
4665	.$39b9	LDA #0
4666	.$39bb	STY A_REG
4667	.$39be	STA A_REG+1
4668	.$39c1	JSR YREGFAC
4671	.$39c4	JSR SHL
4673	.$39c7	LDA #<X_REG
4674	.$39c9	LDY #>X_REG
4676	.$39cb	JSR FACADD
4681	.$39ce	JSR BASINT
4683	.$39d1	JSR PUSHREAL
4684	.$39d4	LDA #<CONST_28R
4685	.$39d6	LDY #>CONST_28R
4686	.$39d8	JSR REALFAC
4687	.$39db	LDA #<VAR_N
4688	.$39dd	LDY #>VAR_N
4689	.$39df	JSR MEMSUB
4692	.$39e2	JSR FACXREG
4694	.$39e5	JSR POPREAL2X
4696	.$39e8	JSR ARGADD
4699	.$39eb	LDX #<VAR_R
4700	.$39ed	LDY #>VAR_R
4702	.$39ef	JSR FACMEM
4703	.$39f2	LDA #<CONST_19R
4704	.$39f4	LDY #>CONST_19R
4705	.$39f6	JSR REALFAC
4706	.$39f9	LDA #<VAR_R
4707	.$39fb	LDY #>VAR_R
4708	.$39fd	JSR FACADD
4714	.$3a00	JSR FACWORD
4715	.$3a03	STY MOVBSELF93+1
4716	.$3a06	STA MOVBSELF93+2
4717	.$3a09	MOVBSELF93:
4718	.$3a09	LDA $FFFF
4719	.$3a0c	CMP #62
4720	.$3a0e	BCC PEEKLT15
4721	.$3a10	BEQ PEEKEQ15
4722	.$3a12	LDA #$FF
4723	.$3a14	JMP PEEKDONE15
4724	.$3a17	PEEKLT15:
4725	.$3a17	LDA #$01
4726	.$3a19	JMP PEEKDONE15
4727	.$3a1c	PEEKEQ15:
4728	.$3a1c	LDA #0
4729	.$3a1e	PEEKDONE15:
4733	.$3a1e	BEQ EQ_EQ39
4734	.$3a20	LDA #<REAL_CONST_ZERO
4735	.$3a22	LDY #>REAL_CONST_ZERO
4736	.$3a24	JMP EQ_SKIP39
4737	.$3a27	EQ_EQ39:
4738	.$3a27	LDA #<REAL_CONST_MINUS_ONE
4739	.$3a29	LDY #>REAL_CONST_MINUS_ONE
4740	.$3a2b	EQ_SKIP39:
4742	.$3a2b	JSR REALFACPUSH
4744	.$3a2e	LDA #<VAR_R
4745	.$3a30	LDY #>VAR_R
4746	.$3a32	JSR REALFAC
4749	.$3a35	JSR FACWORD
4750	.$3a38	STY MOVBSELF94+1
4751	.$3a3b	STA MOVBSELF94+2
4752	.$3a3e	MOVBSELF94:
4753	.$3a3e	LDA $FFFF
4754	.$3a41	CMP #62
4755	.$3a43	BCC PEEKLT16
4756	.$3a45	BEQ PEEKEQ16
4757	.$3a47	LDA #$FF
4758	.$3a49	JMP PEEKDONE16
4759	.$3a4c	PEEKLT16:
4760	.$3a4c	LDA #$01
4761	.$3a4e	JMP PEEKDONE16
4762	.$3a51	PEEKEQ16:
4763	.$3a51	LDA #0
4764	.$3a53	PEEKDONE16:
4768	.$3a53	BNE NEQ_NEQ40
4769	.$3a55	LDA #<REAL_CONST_ZERO
4770	.$3a57	LDY #>REAL_CONST_ZERO
4771	.$3a59	JMP NEQ_SKIP40
4772	.$3a5c	NEQ_NEQ40:
4773	.$3a5c	LDA #<REAL_CONST_MINUS_ONE
4774	.$3a5e	LDY #>REAL_CONST_MINUS_ONE
4775	.$3a60	NEQ_SKIP40:
4777	.$3a60	JSR REALFAC
4778	.$3a63	JSR FACXREG
4780	.$3a66	JSR POPREAL2X
4782	.$3a69	JSR FASTOR
4785	.$3a6c	JSR FACXREG
4787	.$3a6f	LDA X_REG
4788	.$3a71	COMP_SKP47:
4789	.$3a71	BEQ LINE_SKIP66
4792	.$3a73	LINE_NSKIP66:
4794	.$3a73	JMP LINE_87
4796	.$3a76	LINE_SKIP66:
4799	.$3a76	LINE_88:
4801	.$3a76	LDA #<VAR_R
4802	.$3a78	LDY #>VAR_R
4803	.$3a7a	JSR REALFAC
4806	.$3a7d	JSR FACWORD
4807	.$3a80	STY MOVBSELF95+1
4808	.$3a83	STA MOVBSELF95+2
4809	.$3a86	LDA #$3D
4810	.$3a88	MOVBSELF95:
4811	.$3a88	STA $FFFF
4812	.$3a8b	LDA #<CONST_22
4813	.$3a8d	LDY #>CONST_22
4814	.$3a8f	JSR REALFAC
4815	.$3a92	LDA #<VAR_R
4816	.$3a94	LDY #>VAR_R
4817	.$3a96	JSR FACADD
4823	.$3a99	JSR FACWORD
4824	.$3a9c	STY MOVBSELF96+1
4825	.$3a9f	STA MOVBSELF96+2
4826	.$3aa2	LDA #$0
4827	.$3aa4	MOVBSELF96:
4828	.$3aa4	STA $FFFF
4829	.$3aa7	LDA #0
4830	.$3aa9	STA A_REG
4831	.$3aac	STA A_REG+1
4832	.$3aaf	JSR NEXT
4834	.$3ab2	LDA A_REG
4835	.$3ab5	BNE RBEQ_11
4836	.$3ab7	JMP (JUMP_TARGET)
4838	.$3aba	RBEQ_11:
4839	.$3aba	LDA #0
4840	.$3abc	STA A_REG
4841	.$3abf	STA A_REG+1
4842	.$3ac2	JSR NEXT
4844	.$3ac5	LDA A_REG
4845	.$3ac8	BNE RBEQ_12
4846	.$3aca	JMP (JUMP_TARGET)
4848	.$3acd	RBEQ_12:
4850	.$3acd	LINE_89:
4852	.$3acd	LDY #63
4853	.$3acf	STY 7710
4855	.$3ad2	STY 7715
4857	.$3ad5	STY 7731
4859	.$3ad8	STY 7738
4862	.$3adb	LINE_90:
4864	.$3adb	LDX #4
4865	.$3add	dcloop1029_2:
4866	.$3add	LDA CONST_67R,X
4867	.$3ae0	STA VAR_N,X
4868	.$3ae3	DEX
4869	.$3ae4	BPL dcloop1029_2
4871	.$3ae6	LDA #<CONST_68R
4872	.$3ae8	LDY #>CONST_68R
4873	.$3aea	JSR REALFACPUSH
4875	.$3aed	LDA #<CONST_64R
4876	.$3aef	LDY #>CONST_64R
4877	.$3af1	JSR REALFACPUSH
4879	.$3af4	LDA #<VAR_N
4880	.$3af6	LDY #>VAR_N
4881	.$3af8	STA A_REG
4882	.$3afb	STY A_REG+1
4883	.$3afe	LDA #<CONST_39R
4884	.$3b00	LDY #>CONST_39R
4885	.$3b02	JSR COPY2_XYA_XREG
4889	.$3b05	JSR FASTFOR
4890	.$3b08	LDY #0
4891	.$3b0a	TYA
4892	.$3b0b	CPY A_REG
4893	.$3b0e	BNE COMP_SKP50
4894	.$3b10	CMP A_REG+1
4895	.$3b13	BNE COMP_SKP50
4896	.$3b15	COMP_SKP50:
4897	.$3b15	BNE RBEQ_13
4898	.$3b17	JMP (JUMP_TARGET)
4899	.$3b1a	RBEQ_13:
4900	.$3b1a	LDX #4
4901	.$3b1c	dcloop1029_3:
4902	.$3b1c	LDA CONST_69R,X
4903	.$3b1f	STA VAR_N,X
4904	.$3b22	DEX
4905	.$3b23	BPL dcloop1029_3
4907	.$3b25	LDA #<CONST_45R
4908	.$3b27	LDY #>CONST_45R
4909	.$3b29	JSR REALFACPUSH
4911	.$3b2c	LDA #<CONST_64R
4912	.$3b2e	LDY #>CONST_64R
4913	.$3b30	JSR REALFACPUSH
4915	.$3b33	LDA #<VAR_N
4916	.$3b35	LDY #>VAR_N
4917	.$3b37	STA A_REG
4918	.$3b3a	STY A_REG+1
4919	.$3b3d	LDA #<CONST_39R
4920	.$3b3f	LDY #>CONST_39R
4921	.$3b41	JSR COPY2_XYA_XREG
4925	.$3b44	JSR FASTFOR
4926	.$3b47	LDY #0
4927	.$3b49	TYA
4928	.$3b4a	CPY A_REG
4929	.$3b4d	BNE COMP_SKP51
4930	.$3b4f	CMP A_REG+1
4931	.$3b52	BNE COMP_SKP51
4932	.$3b54	COMP_SKP51:
4933	.$3b54	BNE RBEQ_14
4934	.$3b56	JMP (JUMP_TARGET)
4935	.$3b59	RBEQ_14:
4936	.$3b59	JMP RETURN
4938	.$3b5c	LINE_98:
4940	.$3b5c	LDA #<VAR_E3
4941	.$3b5e	LDY #>VAR_E3
4942	.$3b60	JSR REALFAC
4943	.$3b63	LDA #<CONST_70
4944	.$3b65	LDY #>CONST_70
4945	.$3b67	JSR MEMMUL
4948	.$3b6a	JSR FACYREG
4950	.$3b6d	LDA #<VAR_SS
4951	.$3b6f	LDY #>VAR_SS
4952	.$3b71	JSR COPY2_XYA_XREG
4956	.$3b74	JSR YREGFAC
4958	.$3b77	LDA #<X_REG
4959	.$3b79	LDY #>X_REG
4961	.$3b7b	JSR CMPFAC
4962	.$3b7e	BEQ GTEQ_GTEQ41
4963	.$3b80	BCS GTEQ_GTEQ41
4964	.$3b82	LDA #0
4965	.$3b84	JMP GTEQ_SKIP41
4966	.$3b87	GTEQ_GTEQ41:
4967	.$3b87	LDA #$1
4968	.$3b89	GTEQ_SKIP41:
4969	.$3b89	COMP_SKP52:
4970	.$3b89	BNE LINE_NSKIP67
4972	.$3b8b	JMP LINE_SKIP67
4974	.$3b8e	LINE_NSKIP67:
4976	.$3b8e	JSR ONETOFAC
4978	.$3b91	LDA #<VAR_CH
4979	.$3b93	LDY #>VAR_CH
4980	.$3b95	JSR FACADD
4984	.$3b98	LDX #<VAR_CH
4985	.$3b9a	LDY #>VAR_CH
4987	.$3b9c	JSR FACMEM
4988	.$3b9f	JSR ONETOFAC
4990	.$3ba2	LDA #<VAR_E3
4991	.$3ba4	LDY #>VAR_E3
4992	.$3ba6	JSR FACADD
4996	.$3ba9	LDX #<VAR_E3
4997	.$3bab	LDY #>VAR_E3
4999	.$3bad	JSR FACMEM
5000	.$3bb0	LDA #<CONST_32
5001	.$3bb2	LDY #>CONST_32
5002	.$3bb4	JSR STROUTWL
5004	.$3bb7	LDA #<CONST_43R
5005	.$3bb9	LDY #>CONST_43R
5006	.$3bbb	JSR COPY2_XYA_YREG
5011	.$3bbe	JSR TAB
5012	.$3bc1	LDA #<VAR_CH
5013	.$3bc3	LDY #>VAR_CH
5014	.$3bc5	JSR COPY2_XYA_XREG
5018	.$3bc8	JSR REALOUT
5019	.$3bcb	JSR CHECKCMD
5020	.$3bce	JSR LINEBREAK
5022	.$3bd1	LINE_SKIP67:
5025	.$3bd1	LINE_99:
5027	.$3bd1	JMP RETURN
5029	.$3bd4	LINE_100:
5032	.$3bd4	LINE_101:
5035	.$3bd4	LINE_102:
5038	.$3bd4	LINE_103:
5041	.$3bd4	LINE_106:
5044	.$3bd4	LINE_107:
5047	.$3bd4	LINE_108:
5050	.$3bd4	LINE_109:
5052	.$3bd4	LDA #0
5053	.$3bd6	STA VAR_N
5054	.$3bd9	STA VAR_N+1
5055	.$3bdc	STA VAR_N+2
5056	.$3bdf	STA VAR_N+3
5057	.$3be2	STA VAR_N+4
5059	.$3be5	LDA #<CONST_46R
5060	.$3be7	LDY #>CONST_46R
5061	.$3be9	JSR REALFACPUSH
5063	.$3bec	LDA #<CONST_9R
5064	.$3bee	LDY #>CONST_9R
5065	.$3bf0	JSR REALFACPUSH
5067	.$3bf3	LDA #<VAR_N
5068	.$3bf5	LDY #>VAR_N
5069	.$3bf7	STA A_REG
5070	.$3bfa	STY A_REG+1
5071	.$3bfd	LDA #<FORLOOP13
5072	.$3bff	STA JUMP_TARGET
5073	.$3c01	LDA #>FORLOOP13
5074	.$3c03	STA JUMP_TARGET+1
5075	.$3c05	JSR INITFOR
5076	.$3c08	FORLOOP13:
5077	.$3c08	LDA #<VAR_N
5078	.$3c0a	LDY #>VAR_N
5079	.$3c0c	JSR REALFACPUSH
5081	.$3c0f	JSR READNUMBER
5082	.$3c12	JSR POPREALXREG
5085	.$3c15	LDA #<VAR_B[]
5086	.$3c17	LDY #>VAR_B[]
5087	.$3c19	STA G_REG
5088	.$3c1b	STY G_REG+1
5089	.$3c1d	JSR ARRAYSTORE_REAL
5090	.$3c20	LDA #0
5091	.$3c22	STA A_REG
5092	.$3c25	STA A_REG+1
5093	.$3c28	JSR NEXT
5095	.$3c2b	LDA A_REG
5096	.$3c2e	BNE RBEQ_15
5097	.$3c30	JMP (JUMP_TARGET)
5099	.$3c33	RBEQ_15:
5100	.$3c33	LDX #4
5101	.$3c35	dcloop1029_4:
5102	.$3c35	LDA CONST_71R,X
5103	.$3c38	STA VAR_N,X
5104	.$3c3b	DEX
5105	.$3c3c	BPL dcloop1029_4
5107	.$3c3e	LDA #<CONST_72R
5108	.$3c40	LDY #>CONST_72R
5109	.$3c42	JSR REALFACPUSH
5111	.$3c45	JSR ONETOFAC
5114	.$3c48	JSR FACYREG
5116	.$3c4b	LDA #<Y_REG
5117	.$3c4d	LDY #>Y_REG
5119	.$3c4f	JSR REALFACPUSH
5121	.$3c52	LDA #<VAR_N
5122	.$3c54	LDY #>VAR_N
5123	.$3c56	STA A_REG
5124	.$3c59	STY A_REG+1
5125	.$3c5c	LDA #<FORLOOP14
5126	.$3c5e	STA JUMP_TARGET
5127	.$3c60	LDA #>FORLOOP14
5128	.$3c62	STA JUMP_TARGET+1
5129	.$3c64	JSR INITFOR
5130	.$3c67	FORLOOP14:
5131	.$3c67	JSR READNUMBER
5132	.$3c6a	JSR YREGFAC
5134	.$3c6d	LDX #<VAR_M
5135	.$3c6f	LDY #>VAR_M
5136	.$3c71	JSR FACMEM
5137	.$3c74	JSR FACXREG
5138	.$3c77	LDA #<VAR_N
5139	.$3c79	LDY #>VAR_N
5140	.$3c7b	JSR REALFAC
5141	.$3c7e	LDX #<X_REG
5143	.$3c80	JSR FACWORD
5145	.$3c83	STY MOVBSELF101+1
5146	.$3c86	STA MOVBSELF101+2
5147	.$3c89	JSR XREGFAC
5150	.$3c8c	JSR FACWORD
5151	.$3c8f	MOVBSELF101:
5152	.$3c8f	STY $FFFF
5153	.$3c92	LDA #0
5154	.$3c94	STA A_REG
5155	.$3c97	STA A_REG+1
5156	.$3c9a	JSR NEXT
5158	.$3c9d	LDA A_REG
5159	.$3ca0	BNE RBEQ_16
5160	.$3ca2	JMP (JUMP_TARGET)
5162	.$3ca5	RBEQ_16:
5164	.$3ca5	LINE_110:
5166	.$3ca5	LDX #4
5167	.$3ca7	dcloop1029_5:
5168	.$3ca7	LDA CONST_73R,X
5169	.$3caa	STA VAR_N,X
5170	.$3cad	DEX
5171	.$3cae	BPL dcloop1029_5
5173	.$3cb0	LDA #<CONST_74
5174	.$3cb2	LDY #>CONST_74
5175	.$3cb4	JSR REALFACPUSH
5177	.$3cb7	JSR ONETOFAC
5180	.$3cba	JSR FACYREG
5182	.$3cbd	LDA #<Y_REG
5183	.$3cbf	LDY #>Y_REG
5185	.$3cc1	JSR REALFACPUSH
5187	.$3cc4	LDA #<VAR_N
5188	.$3cc6	LDY #>VAR_N
5189	.$3cc8	STA A_REG
5190	.$3ccb	STY A_REG+1
5191	.$3cce	LDA #<FORLOOP15
5192	.$3cd0	STA JUMP_TARGET
5193	.$3cd2	LDA #>FORLOOP15
5194	.$3cd4	STA JUMP_TARGET+1
5195	.$3cd6	JSR INITFOR
5196	.$3cd9	FORLOOP15:
5197	.$3cd9	JSR READNUMBER
5198	.$3cdc	JSR YREGFAC
5200	.$3cdf	LDX #<VAR_M
5201	.$3ce1	LDY #>VAR_M
5202	.$3ce3	JSR FACMEM
5203	.$3ce6	JSR FACXREG
5204	.$3ce9	LDA #<VAR_N
5205	.$3ceb	LDY #>VAR_N
5206	.$3ced	JSR REALFAC
5207	.$3cf0	LDX #<X_REG
5209	.$3cf2	JSR FACWORD
5211	.$3cf5	STY MOVBSELF102+1
5212	.$3cf8	STA MOVBSELF102+2
5213	.$3cfb	JSR XREGFAC
5216	.$3cfe	JSR FACWORD
5217	.$3d01	MOVBSELF102:
5218	.$3d01	STY $FFFF
5219	.$3d04	LDA #0
5220	.$3d06	STA A_REG
5221	.$3d09	STA A_REG+1
5222	.$3d0c	JSR NEXT
5224	.$3d0f	LDA A_REG
5225	.$3d12	BNE RBEQ_17
5226	.$3d14	JMP (JUMP_TARGET)
5228	.$3d17	RBEQ_17:
5229	.$3d17	JMP RETURN
5231	.$3d1a	LINE_200:
5233	.$3d1a	LDY #25
5234	.$3d1c	STY 36879
5236	.$3d1f	LDY #242
5237	.$3d21	STY 36869
5240	.$3d24	LINE_210:
5242	.$3d24	LDA #<CONST_76
5243	.$3d26	LDY #>CONST_76
5244	.$3d28	JSR STROUTBRKWL
5248	.$3d2b	LINE_220:
5250	.$3d2b	LDA #<CONST_77
5251	.$3d2d	LDY #>CONST_77
5252	.$3d2f	JSR STROUTBRKWL
5256	.$3d32	LINE_221:
5258	.$3d32	JSR LINEBREAK
5260	.$3d35	LINE_225:
5262	.$3d35	LDA #<CONST_78
5263	.$3d37	LDY #>CONST_78
5264	.$3d39	JSR STROUTBRKWL
5268	.$3d3c	LINE_226:
5270	.$3d3c	JSR LINEBREAK
5272	.$3d3f	LINE_227:
5274	.$3d3f	LDA #<CONST_79
5275	.$3d41	LDY #>CONST_79
5276	.$3d43	JSR STROUTBRKWL
5280	.$3d46	LINE_228:
5282	.$3d46	LDA #<CONST_80
5283	.$3d48	LDY #>CONST_80
5284	.$3d4a	JSR STROUTBRKWL
5288	.$3d4d	LINE_229:
5290	.$3d4d	JSR LINEBREAK
5292	.$3d50	LINE_230:
5294	.$3d50	JSR LINEBREAK
5295	.$3d53	JSR LINEBREAK
5297	.$3d56	LINE_231:
5299	.$3d56	LDA #<CONST_81
5300	.$3d58	LDY #>CONST_81
5301	.$3d5a	JSR STROUTBRKWL
5305	.$3d5d	LINE_240:
5307	.$3d5d	LDA #<CONST_82
5308	.$3d5f	LDY #>CONST_82
5309	.$3d61	JSR STROUTBRKWL
5313	.$3d64	LINE_246:
5315	.$3d64	JSR LINEBREAK
5317	.$3d67	LINE_247:
5319	.$3d67	LDA #<CONST_83
5320	.$3d69	LDY #>CONST_83
5321	.$3d6b	JSR STROUTBRKWL
5325	.$3d6e	LINE_248:
5327	.$3d6e	LDA #<CONST_84
5328	.$3d70	LDY #>CONST_84
5329	.$3d72	JSR STROUTBRKWL
5333	.$3d75	LINE_249:
5335	.$3d75	JSR LINEBREAK
5337	.$3d78	LINE_250:
5339	.$3d78	JSR LINEBREAK
5340	.$3d7b	JSR LINEBREAK
5342	.$3d7e	LINE_251:
5344	.$3d7e	LDA #<CONST_85
5345	.$3d80	LDY #>CONST_85
5346	.$3d82	JSR STROUTBRKWL
5350	.$3d85	LINE_252:
5352	.$3d85	LDY #0
5353	.$3d87	STY 198
5356	.$3d89	LINE_260:
5358	.$3d89	JSR GETSTR
5359	.$3d8c	LDA A_REG
5360	.$3d8f	LDY A_REG+1
5361	.$3d92	STA TMP_ZP
5362	.$3d94	STY TMP_ZP+1
5363	.$3d96	LDA #<VAR_K$
5364	.$3d98	LDY #>VAR_K$
5365	.$3d9a	JSR COPYSTRING
5366	.$3d9d	LDA #<CONST_86
5367	.$3d9f	LDY #>CONST_86
5368	.$3da1	STA B_REG
5369	.$3da4	STY B_REG+1
5370	.$3da7	LDA VAR_K$
5371	.$3daa	LDY VAR_K$+1
5372	.$3dad	STA A_REG
5373	.$3db0	STY A_REG+1
5375	.$3db3	JSR SEQ
5376	.$3db6	LDA X_REG
5377	.$3db8	COMP_SKP56:
5378	.$3db8	BEQ LINE_SKIP68
5381	.$3dba	LINE_NSKIP68:
5383	.$3dba	JMP LINE_260
5385	.$3dbd	LINE_SKIP68:
5388	.$3dbd	LINE_270:
5390	.$3dbd	JMP RETURN
5392	.$3dc0	LINE_300:
5394	.$3dc0	LDY #255
5395	.$3dc2	STY 37154
5397	.$3dc5	LDY #240
5398	.$3dc7	STY 36869
5400	.$3dca	LDA #<CONST_87
5401	.$3dcc	LDY #>CONST_87
5402	.$3dce	JSR STROUTWL
5404	.$3dd1	LDA #<VAR_SS
5405	.$3dd3	LDY #>VAR_SS
5406	.$3dd5	JSR COPY2_XYA_XREG
5410	.$3dd8	JSR REALOUT
5411	.$3ddb	JSR CHECKCMD
5412	.$3dde	JSR LINEBREAK
5414	.$3de1	LINE_320:
5416	.$3de1	LDA #<CONST_88
5417	.$3de3	LDY #>CONST_88
5418	.$3de5	JSR STROUTBRKWL
5422	.$3de8	LINE_325:
5424	.$3de8	LDY #0
5425	.$3dea	STY 198
5428	.$3dec	LINE_330:
5430	.$3dec	JSR GETSTR
5431	.$3def	LDA A_REG
5432	.$3df2	LDY A_REG+1
5433	.$3df5	STA TMP_ZP
5434	.$3df7	STY TMP_ZP+1
5435	.$3df9	LDA #<VAR_K$
5436	.$3dfb	LDY #>VAR_K$
5437	.$3dfd	JSR COPYSTRING
5438	.$3e00	LDA #<CONST_86
5439	.$3e02	LDY #>CONST_86
5440	.$3e04	STA B_REG
5441	.$3e07	STY B_REG+1
5442	.$3e0a	LDA VAR_K$
5443	.$3e0d	LDY VAR_K$+1
5444	.$3e10	STA A_REG
5445	.$3e13	STY A_REG+1
5447	.$3e16	JSR SEQ
5448	.$3e19	LDA X_REG
5449	.$3e1b	COMP_SKP57:
5450	.$3e1b	BEQ LINE_SKIP69
5453	.$3e1d	LINE_NSKIP69:
5455	.$3e1d	JMP LINE_330
5457	.$3e20	LINE_SKIP69:
5460	.$3e20	LINE_340:
5462	.$3e20	JSR RUN
5464	.$3e23	LINE_997:
5467	.$3e23	LINE_998:
5470	.$3e23	LINE_999:
5472	.$3e23	JSR END
5473	.$3e26	RTS
5476	.$3e27	END   LDX SP_SAVE
5477	.$3e2a	TXS
5484	.$3e2b	RTS
5487	.$3e2c	SYSTEMCALL
5488	.$3e2c	LDA TMP_ZP
5489	.$3e2e	STA SCDO+1
5490	.$3e31	LDA TMP_ZP+1
5491	.$3e33	STA SCDO+2
5492	.$3e36	LDA $030F
5493	.$3e39	PHA
5494	.$3e3a	LDA $030C
5495	.$3e3d	LDX $030D
5496	.$3e40	LDY $030E
5497	.$3e43	PLP
5501	.$3e44	SCDO  JSR $FFFF
5505	.$3e47	PHP
5506	.$3e48	STA $030C
5507	.$3e4b	STX $030D
5508	.$3e4e	STY $030E
5509	.$3e51	PLA
5510	.$3e52	STA $030F
5511	.$3e55	RTS
5514	.$3e56	START  LDA ENDSTRBUF+1
5515	.$3e59	BNE ENDGIVEN
5516	.$3e5b	LDA BASICEND
5517	.$3e5d	STA ENDSTRBUF
5518	.$3e60	LDA BASICEND+1
5519	.$3e62	STA ENDSTRBUF+1
5520	.$3e65	ENDGIVEN LDA #<FPSTACK
5521	.$3e67	LDY #>FPSTACK
5522	.$3e69	STA FPSTACKP
5523	.$3e6c	STY FPSTACKP+1
5524	.$3e6f	LDA #<FORSTACK
5525	.$3e71	LDY #>FORSTACK
5526	.$3e73	STA FORSTACKP
5527	.$3e76	STY FORSTACKP+1
5528	.$3e79	LDA #<STRBUF
5529	.$3e7b	LDY #>STRBUF
5530	.$3e7d	STA STRBUFP
5531	.$3e80	STY STRBUFP+1
5532	.$3e83	STA HIGHP
5533	.$3e86	STY HIGHP+1
5534	.$3e89	LDA #0
5535	.$3e8b	STA CHLOCKFLAG
5536	.$3e8e	STA LASTVAR
5537	.$3e91	STA LASTVAR+1
5538	.$3e94	JSR INITVARS
5539	.$3e97	LDA #0
5540	.$3e99	STA CMD_NUM
5541	.$3e9c	STA CHANNEL
5542	.$3e9f	TAY
5543	.$3ea0	TAX
5547	.$3ea1	STA KEYNDX
5553	.$3ea3	JSR RESTORE
5554	.$3ea6	CLC
5558	.$3ea7	RTS
5561	.$3ea8	INITNARRAY
5562	.$3ea8	STA TMP_ZP
5563	.$3eaa	STY TMP_ZP+1
5564	.$3eac	LDY #0
5565	.$3eae	TYA
5566	.$3eaf	NINITLOOP STA (TMP_ZP),Y
5567	.$3eb1	INC TMP_ZP
5568	.$3eb3	BNE NLOOPNOV
5569	.$3eb5	INC TMP_ZP+1
5570	.$3eb7	NLOOPNOV LDX TMP2_ZP
5571	.$3eb9	BNE NLOOPNOV2
5572	.$3ebb	DEC TMP2_ZP+1
5573	.$3ebd	NLOOPNOV2 DEC TMP2_ZP
5574	.$3ebf	BNE NINITLOOP
5575	.$3ec1	LDX TMP2_ZP+1
5576	.$3ec3	BNE NINITLOOP
5577	.$3ec5	RTS
5580	.$3ec6	INITSTRARRAY
5581	.$3ec6	STA TMP_ZP
5582	.$3ec8	STY TMP_ZP+1
5583	.$3eca	SINITLOOP LDY #0
5584	.$3ecc	LDA #<EMPTYSTR
5585	.$3ece	STA (TMP_ZP),Y
5586	.$3ed0	LDA #>EMPTYSTR
5587	.$3ed2	INY
5588	.$3ed3	STA (TMP_ZP),Y
5589	.$3ed5	CLC
5590	.$3ed6	LDA TMP_ZP
5591	.$3ed8	ADC #2
5592	.$3eda	STA TMP_ZP
5593	.$3edc	BCC SLOOPNOV1
5594	.$3ede	INC TMP_ZP+1
5595	.$3ee0	SLOOPNOV1 SEC
5596	.$3ee1	LDA TMP2_ZP
5597	.$3ee3	SBC #2
5598	.$3ee5	STA TMP2_ZP
5599	.$3ee7	BCS SLOOPNOV2
5600	.$3ee9	DEC TMP2_ZP+1
5601	.$3eeb	SLOOPNOV2 LDA TMP2_ZP
5602	.$3eed	BNE SINITLOOP
5603	.$3eef	LDA TMP2_ZP+1
5604	.$3ef1	BNE SINITLOOP
5605	.$3ef3	RTS
5608	.$3ef4	INITSPARAMS STA TMP3_ZP
5609	.$3ef6	STY TMP3_ZP+1
5610	.$3ef8	SEC
5611	.$3ef9	SBC #2
5612	.$3efb	STA TMP_ZP
5613	.$3efd	TYA
5614	.$3efe	SBC #0
5615	.$3f00	STA TMP_ZP+1
5616	.$3f02	LDY #0
5617	.$3f04	LDA (TMP_ZP),Y
5618	.$3f06	STA TMP2_ZP
5619	.$3f08	INY
5620	.$3f09	LDA (TMP_ZP),Y
5621	.$3f0b	STA TMP2_ZP+1
5622	.$3f0d	LDA TMP3_ZP
5623	.$3f0f	LDY TMP3_ZP+1
5624	.$3f11	RTS
5627	.$3f12	INITSTRVARS LDA #<STRINGVARS_START  
5628	.$3f14	LDY #>STRINGVARS_START
5629	.$3f16	CMP #<STRINGVARS_END
5630	.$3f18	BNE INITIT1
5631	.$3f1a	CPY #>STRINGVARS_END
5632	.$3f1c	BNE INITIT1
5633	.$3f1e	JMP INITSA2     
5634	.$3f21	INITIT1  STA TMP_ZP
5635	.$3f23	STY TMP_ZP+1
5636	.$3f25	LDY #0
5637	.$3f27	INITSTRLOOP LDA #<EMPTYSTR
5638	.$3f29	STA (TMP_ZP),Y
5639	.$3f2b	INY
5640	.$3f2c	LDA #>EMPTYSTR
5641	.$3f2e	STA (TMP_ZP),Y
5642	.$3f30	DEY
5643	.$3f31	LDA TMP_ZP
5644	.$3f33	CLC
5645	.$3f34	ADC #2
5646	.$3f36	STA TMP_ZP
5647	.$3f38	LDA TMP_ZP+1
5648	.$3f3a	ADC #0
5649	.$3f3c	STA TMP_ZP+1
5650	.$3f3e	CMP #>STRINGVARS_END
5651	.$3f40	BNE INITSTRLOOP
5652	.$3f42	LDA TMP_ZP
5653	.$3f44	CMP #<STRINGVARS_END
5654	.$3f46	BNE INITSTRLOOP
5655	.$3f48	INITSA2  LDA #<STRINGARRAYS_START 
5656	.$3f4a	LDY #>STRINGARRAYS_START
5657	.$3f4c	CMP #<STRINGARRAYS_END
5658	.$3f4e	BNE ARRAYLOOP
5659	.$3f50	CPY #>STRINGARRAYS_END
5660	.$3f52	BNE ARRAYLOOP
5661	.$3f54	RTS       
5662	.$3f55	ARRAYLOOP CLC
5663	.$3f56	ADC #3
5664	.$3f58	BCC ARRAYSKIP1
5665	.$3f5a	INY
5666	.$3f5b	ARRAYSKIP1 CPY #>STRINGARRAYS_END
5667	.$3f5d	BEQ ARRAYSC
5668	.$3f5f	BCC ARRAYSKIP2
5669	.$3f61	JMP ARRAYQUIT
5670	.$3f64	ARRAYSC  CMP #<STRINGARRAYS_END
5671	.$3f66	BCS ARRAYQUIT
5672	.$3f68	ARRAYSKIP2 STA TMP_REG
5673	.$3f6a	STY TMP_REG+1
5674	.$3f6c	JSR INITSPARAMS
5675	.$3f6f	LDA TMP_REG
5676	.$3f71	LDY TMP_REG+1
5677	.$3f73	JSR INITSTRARRAY
5678	.$3f76	LDA TMP_ZP
5679	.$3f78	LDY TMP_ZP+1
5680	.$3f7a	JMP ARRAYLOOP
5681	.$3f7d	ARRAYQUIT RTS
5684	.$3f7e	RUN   LDX SP_SAVE
5685	.$3f81	TXS
5686	.$3f82	JMP PROGRAMSTART
5689	.$3f85	RESTORE  LDA #<DATAS
5690	.$3f87	LDY #>DATAS
5691	.$3f89	STA DATASP
5692	.$3f8c	STY DATASP+1
5693	.$3f8f	RTS
5698	.$3f90	FASTFOR  JSR POPREAL
5699	.$3f93	JSR SGNFAC
5700	.$3f96	STA TMP_REG  
5701	.$3f98	BCC FFPOSSTEP
5702	.$3f9a	LDA #<REAL_CONST_MINUS_ONE 
5703	.$3f9c	LDY #>REAL_CONST_MINUS_ONE
5704	.$3f9e	JSR MEMARG 
5705	.$3fa1	JSR FACMUL 
5706	.$3fa4	FFPOSSTEP JSR FACWORD 
5707	.$3fa7	STY TMP2_ZP
5708	.$3fa9	STA TMP2_ZP+1 
5709	.$3fab	LDA A_REG
5710	.$3fae	LDY A_REG+1
5711	.$3fb1	JSR REALFAC
5712	.$3fb4	JSR FACWORD
5713	.$3fb7	STY TMP_ZP
5714	.$3fb9	STA TMP_ZP+1 
5715	.$3fbb	JSR POPREAL
5716	.$3fbe	JSR FACWORD
5717	.$3fc1	STY TMP2_ZP+2
5718	.$3fc3	STA TMP2_ZP+3 
5719	.$3fc5	JSR XREGFAC
5720	.$3fc8	JSR FACINT
5721	.$3fcb	STY TMP3_ZP  
5722	.$3fcd	LDA TMP2_ZP+1
5723	.$3fcf	BNE STEPNOTONE
5724	.$3fd1	LDA TMP2_ZP
5725	.$3fd3	CMP #$1
5726	.$3fd5	BNE STEPNOTONE
5727	.$3fd7	JMP STEPONE
5728	.$3fda	STEPNOTONE LDA TMP_REG
5729	.$3fdc	BEQ FFSTEPZERO
5730	.$3fde	ROL
5731	.$3fdf	FFSTEPZERO BCC FFSTEPPOS
5732	.$3fe1	FFSTEPNEG LDY #0
5733	.$3fe3	LDA TMP3_ZP
5734	.$3fe5	TAX
5735	.$3fe6	FFNEGLOOP TXA
5736	.$3fe7	STA (TMP_ZP),Y
5737	.$3fe9	LDA TMP_ZP
5738	.$3feb	SEC
5739	.$3fec	SBC TMP2_ZP
5740	.$3fee	STA TMP_ZP
5741	.$3ff0	LDA TMP_ZP+1
5742	.$3ff2	BCS FFNEGSKIP
5743	.$3ff4	SBC TMP2_ZP+1
5744	.$3ff6	STA TMP_ZP+1
5745	.$3ff8	FFNEGSKIP CMP TMP2_ZP+3
5746	.$3ffa	BEQ FFNEGCHECK2
5747	.$3ffc	BCS FFNEGLOOP
5748	.$3ffe	JMP FFDONE
5749	.$4001	FFNEGCHECK2 LDA TMP_ZP
5750	.$4003	CMP TMP2_ZP+2
5751	.$4005	BCS FFNEGLOOP
5752	.$4007	JMP FFDONE
5753	.$400a	FFSTEPPOS LDY #0
5754	.$400c	LDA TMP3_ZP
5755	.$400e	TAX
5756	.$400f	FFPOSLOOP TXA
5757	.$4010	STA (TMP_ZP),Y
5758	.$4012	LDA TMP_ZP
5759	.$4014	CLC
5760	.$4015	ADC TMP2_ZP
5761	.$4017	STA TMP_ZP
5762	.$4019	LDA TMP_ZP+1
5763	.$401b	BCC FFPOSSKIP
5764	.$401d	ADC TMP2_ZP+1
5765	.$401f	STA TMP_ZP+1
5766	.$4021	FFPOSSKIP CMP TMP2_ZP+3
5767	.$4023	BCC FFPOSLOOP
5768	.$4025	BEQ FFPOSCHECK2
5769	.$4027	JMP FFDONE
5770	.$402a	FFPOSCHECK2 LDA TMP_ZP
5771	.$402c	CMP TMP2_ZP+2
5772	.$402e	BCC FFPOSLOOP
5773	.$4030	BEQ FFPOSLOOP
5774	.$4032	FFDONE  LDY TMP_ZP
5775	.$4034	LDA TMP_ZP+1
5776	.$4036	JSR INTFAC
5777	.$4039	LDX A_REG
5778	.$403c	LDY A_REG+1
5779	.$403f	LDA #1
5780	.$4041	STA A_REG
5781	.$4044	JMP FACMEM  
5783	.$4047	STEPONE LDA TMP_REG
5784	.$4049	BEQ OFFSTEPZERO
5785	.$404b	ROL
5786	.$404c	OFFSTEPZERO BCC OFFSTEPPOS
5787	.$404e	OFFSTEPNEG LDY #0
5788	.$4050	LDA TMP3_ZP
5789	.$4052	TAX
5790	.$4053	OFFNEGLOOP TXA
5791	.$4054	STA (TMP_ZP),Y
5792	.$4056	LDA TMP_ZP
5793	.$4058	BNE ONOOVERFLOW
5794	.$405a	DEC TMP_ZP+1
5795	.$405c	ONOOVERFLOW DEC TMP_ZP
5796	.$405e	LDA TMP_ZP+1
5797	.$4060	OFFNEGSKIP CMP TMP2_ZP+3
5798	.$4062	BEQ OFFNEGCHECK2
5799	.$4064	BCS OFFNEGLOOP
5800	.$4066	JMP FFDONE
5801	.$4069	OFFNEGCHECK2
5802	.$4069	LDA TMP_ZP
5803	.$406b	CMP TMP2_ZP+2
5804	.$406d	BCS OFFNEGLOOP
5805	.$406f	JMP FFDONE
5806	.$4072	OFFSTEPPOS LDY #0
5807	.$4074	LDA TMP3_ZP
5808	.$4076	TAX
5809	.$4077	OFFPOSLOOP TXA
5810	.$4078	STA (TMP_ZP),Y
5811	.$407a	INC TMP_ZP
5812	.$407c	BNE ONOOVERFLOW2
5813	.$407e	INC TMP_ZP+1
5814	.$4080	ONOOVERFLOW2
5815	.$4080	LDA TMP_ZP+1
5816	.$4082	OFFPOSSKIP CMP TMP2_ZP+3
5817	.$4084	BCC OFFPOSLOOP
5818	.$4086	BEQ OFFPOSCHECK2
5819	.$4088	JMP FFDONE
5820	.$408b	OFFPOSCHECK2
5821	.$408b	LDA TMP_ZP
5822	.$408d	CMP TMP2_ZP+2
5823	.$408f	BCC OFFPOSLOOP
5824	.$4091	BEQ OFFPOSLOOP
5825	.$4093	JMP FFDONE
5828	.$4096	STR   JSR YREGFAC
5829	.$4099	STRINT  LDY #1
5830	.$409b	JSR FACSTR
5831	.$409e	LDY #0
5832	.$40a0	STY TMP_ZP+1
5833	.$40a2	LDA #LOFBUF
5834	.$40a4	STA TMP_ZP
5835	.$40a6	DEY
5836	.$40a7	STRLOOP  INY
5837	.$40a8	LDA LOFBUFH,Y
5838	.$40ab	BNE STRLOOP
5839	.$40ad	STY LOFBUF
5840	.$40af	TYA
5841	.$40b0	TAX   
5842	.$40b1	LDA #<A_REG
5843	.$40b3	LDY #>A_REG
5844	.$40b5	STA TMP2_ZP
5845	.$40b7	STY TMP2_ZP+1
5846	.$40b9	JMP COPYONLY
5849	.$40bc	TAB   JSR TABSPCINIT
5850	.$40bf	JSR REROUTE
5851	.$40c2	LDA CMD_NUM
5852	.$40c5	BEQ NORMALTAB  
5853	.$40c7	CMP #3
5854	.$40c9	BEQ NORMALTAB2  
5855	.$40cb	JMP TABCHANNEL2
5856	.$40ce	NORMALTAB2 JSR CLRCHNEW
5857	.$40d1	NORMALTAB SEC
5858	.$40d2	JMP TABSPC
5861	.$40d5	TABSPCINIT SEC
5862	.$40d6	JSR CRSRPOS
5863	.$40d9	STY $09
5864	.$40db	JSR YREGFAC
5865	.$40de	JSR FACWORD
5866	.$40e1	TYA
5867	.$40e2	TAX
5868	.$40e3	RTS
5871	.$40e4	TABSPC     BCC DOSPC
5872	.$40e6	TXA
5873	.$40e7	SBC $09
5874	.$40e9	BCC TABSPCQUIT
5875	.$40eb	TAX
5876	.$40ec	DOSPC  INX
5877	.$40ed	TABSPCLOOP  DEX
5878	.$40ee	BNE TABSPCRIGHT
5879	.$40f0	TABSPCQUIT RTS
5880	.$40f1	TABSPCRIGHT JSR CRSRRIGHT
5881	.$40f4	JMP TABSPCLOOP
5884	.$40f7	LEN   LDA B_REG
5885	.$40fa	STA TMP_ZP
5886	.$40fc	LDA B_REG+1
5887	.$40ff	STA TMP_ZP+1
5888	.$4101	LDY #0
5889	.$4103	LDA (TMP_ZP),Y
5890	.$4105	STA TMP2_ZP  
5891	.$4107	BEQ ZEROLEN
5892	.$4109	TAY
5893	.$410a	LDA #0
5894	.$410c	JSR INTFAC
5895	.$410f	JMP FACXREG 
5896	.$4112	ZEROLEN  JMP ZEROSET
5899	.$4115	SAVEPOINTERS
5900	.$4115	LDA TMP_ZP   
5901	.$4117	STA STORE1
5902	.$411a	LDA TMP_ZP+1
5903	.$411c	STA STORE1+1
5904	.$411f	LDA TMP2_ZP
5905	.$4121	STA STORE2
5906	.$4124	LDA TMP2_ZP+1
5907	.$4126	STA STORE2+1
5908	.$4129	LDA TMP3_ZP
5909	.$412b	STA STORE3
5910	.$412e	LDA TMP3_ZP+1
5911	.$4130	STA STORE3+1
5912	.$4133	RTS
5915	.$4134	RESTOREPOINTERS
5916	.$4134	LDA STORE3+1  
5917	.$4137	STA TMP3_ZP+1
5918	.$4139	LDA STORE3
5919	.$413c	STA TMP3_ZP
5920	.$413e	LDA STORE2+1
5921	.$4141	STA TMP2_ZP+1
5922	.$4143	LDA STORE2
5923	.$4146	STA TMP2_ZP
5924	.$4148	LDA STORE1+1
5925	.$414b	STA TMP_ZP+1
5926	.$414d	LDA STORE1
5927	.$4150	STA TMP_ZP
5928	.$4152	RTS
5935	.$4153	COMPACTMAX
5936	.$4153	LDA #$FF
5937	.$4155	LDY #$0
5938	.$4157	JMP COMPACTF
5941	.$415a	COMPACT
5942	.$415a	LDY #0
5943	.$415c	GCBUFNE  LDA (TMP_ZP),Y  
5944	.$415e	COMPACTF STA TMP4_REG  
5945	.$4161	LDY STRBUFP+1  
5946	.$4164	STY TMP4_REG+1  
5947	.$4167	INY     
5948	.$4168	BEQ ENDMEM   
5949	.$416a	CPY ENDSTRBUF+1  
5950	.$416d	BCC RGCEXIT   
5951	.$416f	ENDMEM  LDA STRBUFP
5952	.$4172	CLC
5953	.$4173	ADC TMP4_REG
5954	.$4176	STA TMP4_REG
5955	.$4179	BCC RGCNOOV1
5956	.$417b	INC TMP4_REG+1
5957	.$417e	RGCNOOV1 CLC
5958	.$417f	LDA TMP4_REG
5959	.$4182	ADC #3
5960	.$4184	STA TMP4_REG
5961	.$4187	BCC RGCNOOV2
5962	.$4189	INC TMP4_REG+1
5963	.$418c	RGCNOOV2 LDA TMP4_REG+1  
5964	.$418f	CMP ENDSTRBUF+1
5965	.$4192	BEQ RGCLOW1
5966	.$4194	BCS GCEXECOMP  
5967	.$4196	JMP RGCEXIT
5968	.$4199	RGCLOW1  LDA TMP4_REG
5969	.$419c	CMP ENDSTRBUF
5970	.$419f	BCS GCEXECOMP  
5971	.$41a1	RGCEXIT  RTS     
5972	.$41a2	GCEXECOMP LDA STRBUFP
5973	.$41a5	STA STORE4
5974	.$41a8	LDA STRBUFP+1
5975	.$41ab	STA STORE4+1
5976	.$41ae	JSR GCEXE
5977	.$41b1	JMP CHECKMEMORY
5980	.$41b4	GCEXE  JSR SAVEPOINTERS
5981	.$41b7	LDA #0
5982	.$41b9	STA LASTVAR
5983	.$41bc	STA LASTVAR+1  
5984	.$41bf	LDA #<STRBUF
5985	.$41c1	STA TMP_ZP
5986	.$41c3	STA GCSTART
5987	.$41c6	LDA #>STRBUF
5988	.$41c8	STA TMP_ZP+1  
5989	.$41ca	STA GCSTART+1
5990	.$41cd	GCLOOP  LDY #0
5991	.$41cf	LDA TMP_ZP
5992	.$41d1	STA GCWORK
5993	.$41d4	LDA TMP_ZP+1
5994	.$41d6	STA GCWORK+1  
5995	.$41d9	LDA (TMP_ZP),Y
5996	.$41db	STA GCLEN   
5997	.$41de	INC TMP_ZP
5998	.$41e0	BNE GCLOOPNOOV
5999	.$41e2	INC TMP_ZP+1
6000	.$41e4	GCLOOPNOOV LDA TMP_ZP
6001	.$41e6	CLC
6002	.$41e7	ADC GCLEN
6003	.$41ea	STA TMP_ZP
6004	.$41ec	BCC GCLOOPNOOV2
6005	.$41ee	INC TMP_ZP+1  
6006	.$41f0	GCLOOPNOOV2 LDY #0
6007	.$41f2	LDA (TMP_ZP),Y
6008	.$41f4	STA TMP2_ZP
6009	.$41f6	INY
6010	.$41f7	LDA (TMP_ZP),Y
6011	.$41f9	STA TMP2_ZP+1  
6012	.$41fb	LDA TMP_ZP
6013	.$41fd	CLC
6014	.$41fe	ADC #2
6015	.$4200	STA TMP_ZP
6016	.$4202	BCC GCLOOPNOOV3
6017	.$4204	INC TMP_ZP+1  
6018	.$4206	GCLOOPNOOV3 LDY #0
6019	.$4208	LDA (TMP2_ZP),Y
6020	.$420a	CMP GCWORK
6021	.$420d	BNE GCKLOOP
6022	.$420f	INY
6023	.$4210	LDA (TMP2_ZP),Y
6024	.$4212	CMP GCWORK+1
6025	.$4215	BEQ MEMFREE
6026	.$4217	GCKLOOP  LDA TMP_ZP+1  
6027	.$4219	CMP HIGHP+1
6028	.$421c	BEQ GCHECKLOW
6029	.$421e	BCC GCLOOP
6030	.$4220	JMP GCDONE
6031	.$4223	GCHECKLOW LDA TMP_ZP
6032	.$4225	CMP HIGHP
6033	.$4228	BCS GCDONE
6034	.$422a	JMP GCLOOP
6035	.$422d	MEMFREE  LDA GCSTART   
6036	.$4230	CMP GCWORK   
6037	.$4233	BNE COPYDOWN
6038	.$4235	LDA GCSTART+1
6039	.$4238	CMP GCWORK+1
6040	.$423b	BNE COPYDOWN
6041	.$423d	LDA TMP_ZP   
6042	.$423f	STA GCSTART
6043	.$4242	LDA TMP_ZP+1
6044	.$4244	STA GCSTART+1
6045	.$4247	JMP GCKLOOP   
6046	.$424a	COPYDOWN LDA GCSTART   
6047	.$424d	STA TMP_REG
6048	.$424f	LDA GCSTART+1
6049	.$4252	STA TMP_REG+1  
6050	.$4254	LDA GCWORK
6051	.$4257	STA TMP2_REG
6052	.$425a	LDA GCWORK+1
6053	.$425d	STA TMP2_REG+1  
6054	.$4260	LDA TMP_ZP
6055	.$4262	SEC
6056	.$4263	SBC GCWORK
6057	.$4266	STA TMP3_REG
6058	.$4269	LDA TMP_ZP+1
6059	.$426b	SBC GCWORK+1
6060	.$426e	STA TMP3_REG+1  
6061	.$4271	LDA GCSTART
6062	.$4274	CLC
6063	.$4275	ADC TMP3_REG
6064	.$4278	STA GCSTART
6065	.$427b	LDA GCSTART+1
6066	.$427e	ADC TMP3_REG+1
6067	.$4281	STA GCSTART+1  
6068	.$4284	JSR QUICKCOPY  
6069	.$4287	LDY #0
6070	.$4289	LDA TMP_REG
6071	.$428b	STA (TMP2_ZP),Y
6072	.$428d	INY
6073	.$428e	LDA TMP_REG+1
6074	.$4290	STA (TMP2_ZP),Y  
6075	.$4292	JMP GCKLOOP
6076	.$4295	GCDONE  LDA GCSTART
6077	.$4298	STA HIGHP
6078	.$429b	STA STRBUFP
6079	.$429e	LDA GCSTART+1
6080	.$42a1	STA HIGHP+1
6081	.$42a4	STA STRBUFP+1  
6082	.$42a7	GCSKIP  JSR RESTOREPOINTERS
6083	.$42aa	RTS     
6086	.$42ab	CHECKMEMORY
6087	.$42ab	LDA STRBUFP+1  
6088	.$42ae	CMP STORE4+1  
6089	.$42b1	BCC STILLFITSCM  
6093	.$42b3	BEQ CHECKMEMLOWCM
6094	.$42b5	JMP OUTOFMEMORY  
6095	.$42b8	CHECKMEMLOWCM
6096	.$42b8	LDA STRBUFP   
6097	.$42bb	CMP STORE4
6098	.$42be	BCC STILLFITSCM
6099	.$42c0	JMP OUTOFMEMORY  
6100	.$42c3	STILLFITSCM RTS
6103	.$42c4	QUICKCOPY LDA TMP_REG  
6104	.$42c6	STA TMEM+1
6105	.$42c9	LDA TMP_REG+1
6106	.$42cb	STA TMEM+2
6107	.$42ce	LDA TMP2_REG
6108	.$42d1	STA SMEM+1
6109	.$42d4	LDA TMP2_REG+1
6110	.$42d7	STA SMEM+2
6111	.$42da	LDY #$0
6112	.$42dc	LDX TMP3_REG
6113	.$42df	BNE QCLOOP
6114	.$42e1	LDA TMP3_REG+1
6115	.$42e4	BEQ QCEXIT  
6116	.$42e6	QCLOOP
6117	.$42e6	SMEM  LDA $0000,Y
6118	.$42e9	TMEM  STA $0000,Y
6119	.$42ec	INY
6120	.$42ed	BNE YNOOV
6121	.$42ef	INC TMEM+2
6122	.$42f2	INC SMEM+2
6123	.$42f5	YNOOV  DEX
6124	.$42f6	BNE QCLOOP
6125	.$42f8	LDA TMP3_REG+1
6126	.$42fb	BEQ QCEXIT
6127	.$42fd	DEC TMP3_REG+1
6128	.$4300	JMP QCLOOP
6129	.$4303	QCEXIT  RTS
6132	.$4304	COPYSTRING STA TMP2_ZP
6133	.$4306	STY TMP2_ZP+1
6134	.$4308	CPY TMP_ZP+1
6135	.$430a	BNE CONTCOPY
6136	.$430c	LDA TMP2_ZP
6137	.$430e	CMP TMP_ZP
6138	.$4310	BNE CONTCOPY
6139	.$4312	RTS     
6140	.$4313	CONTCOPY JSR COMPACT   
6141	.$4316	LDY #0
6142	.$4318	STY TMP_FLAG
6143	.$431b	LDA (TMP_ZP),Y
6144	.$431d	BNE NOTEMPTYSTR
6145	.$431f	LDA #<EMPTYSTR  
6146	.$4321	STA TMP_ZP
6147	.$4323	LDA #>EMPTYSTR
6148	.$4325	STA TMP_ZP+1
6149	.$4327	JMP ISCONST
6150	.$432a	NOTEMPTYSTR TAX     
6151	.$432b	LDA (TMP2_ZP),Y
6152	.$432d	STA TMP3_ZP
6153	.$432f	INY
6154	.$4330	LDA (TMP2_ZP),Y
6155	.$4332	STA TMP3_ZP+1
6156	.$4334	DEY
6157	.$4335	LDA TMP_ZP+1  
6158	.$4337	CMP #>CONSTANTS_END
6159	.$4339	BEQ CHECKLOW1
6160	.$433b	BCS INVAR
6161	.$433d	JMP CHECKNEXT
6162	.$4340	CHECKLOW1 LDA TMP_ZP
6163	.$4342	CMP #<CONSTANTS_END
6164	.$4344	BCS INVAR
6165	.$4346	CHECKNEXT LDA TMP_ZP+1  
6166	.$4348	CMP #>CONSTANTS
6167	.$434a	BEQ CHECKLOW3
6168	.$434c	BCC INVAR
6169	.$434e	JMP ISCONST
6170	.$4351	CHECKLOW3 LDA TMP_ZP
6171	.$4353	CMP #<CONSTANTS
6172	.$4355	BCC INVAR   
6173	.$4357	ISCONST  JSR CHECKLASTVAR 
6174	.$435a	LDA TMP_ZP
6175	.$435c	STA (TMP2_ZP),Y  
6176	.$435e	INY
6177	.$435f	LDA TMP_ZP+1
6178	.$4361	STA (TMP2_ZP),Y
6179	.$4363	LDA HIGHP   
6180	.$4366	STA STRBUFP
6181	.$4369	LDA HIGHP+1
6182	.$436c	STA STRBUFP+1
6183	.$436f	RTS
6184	.$4370	INVAR  INY
6185	.$4371	LDA (TMP2_ZP),Y  
6186	.$4373	CMP #>CONSTANTS_END
6187	.$4375	BEQ CHECKLOW2
6188	.$4377	BCS INVAR2
6189	.$4379	JMP PUPDATEPTR
6190	.$437c	CHECKLOW2 DEY
6191	.$437d	LDA (TMP2_ZP),Y
6192	.$437f	CMP #<CONSTANTS_END
6193	.$4381	BCS INVAR2
6194	.$4383	JMP PUPDATEPTR
6195	.$4386	INVAR2  LDY #0   
6196	.$4388	LDA (TMP3_ZP),Y
6197	.$438a	STA TMP_REG
6198	.$438c	TXA
6199	.$438d	CMP TMP_REG  
6200	.$438f	BEQ UPDATEHP2 
6203	.$4391	PUPDATEPTR JSR CHECKLASTVAR
6204	.$4394	LDY #1   
6205	.$4396	STY TMP_FLAG 
6206	.$4399	JMP UPDATEPTR 
6207	.$439c	UPDATEHP2 LDA HIGHP  
6208	.$439f	STA STRBUFP
6209	.$43a2	LDA HIGHP+1
6210	.$43a5	STA STRBUFP+1
6211	.$43a8	JMP STRFITS
6212	.$43ab	COPYONLY LDY #0
6213	.$43ad	STY TMP_FLAG
6214	.$43b0	JMP CHECKMEM
6215	.$43b3	ALTCOPY  JMP COPYSTRING2
6216	.$43b6	UPDATEPTR LDA TMP_ZP+1 
6217	.$43b8	CMP HIGHP+1  
6218	.$43bb	BEQ CHECKXT1
6219	.$43bd	BCS ALTCOPY
6220	.$43bf	JMP CHECKMEM
6221	.$43c2	CHECKXT1 LDA TMP_ZP
6222	.$43c4	CMP HIGHP
6223	.$43c7	BCS ALTCOPY
6224	.$43c9	CHECKMEM
6225	.$43c9	MEMOK  LDY #0
6226	.$43cb	LDA STRBUFP  
6227	.$43ce	STA (TMP2_ZP),Y 
6228	.$43d0	STA TMP3_ZP
6229	.$43d2	LDA STRBUFP+1
6230	.$43d5	INY
6231	.$43d6	STA (TMP2_ZP),Y
6232	.$43d8	STA TMP3_ZP+1
6233	.$43da	TXA
6234	.$43db	CLC
6235	.$43dc	ADC STRBUFP
6236	.$43df	PHP
6237	.$43e0	CLC
6238	.$43e1	ADC #3
6239	.$43e3	STA STRBUFP
6240	.$43e6	BCC NOCS1
6241	.$43e8	INC STRBUFP+1
6242	.$43eb	NOCS1  PLP
6243	.$43ec	BCC STRFITS
6244	.$43ee	INC STRBUFP+1
6245	.$43f1	STRFITS  LDY TMP_FLAG 
6246	.$43f4	BEQ NOHPUPDATE 
6247	.$43f6	LDA HIGHP+1
6248	.$43f9	CMP STRBUFP+1
6249	.$43fc	BCC UPDATEHIGHP
6250	.$43fe	BEQ CHECKNEXTHP
6251	.$4400	JMP NOHPUPDATE
6252	.$4403	CHECKNEXTHP LDA HIGHP
6253	.$4406	CMP STRBUFP
6254	.$4409	BCC UPDATEHIGHP
6255	.$440b	JMP NOHPUPDATE
6256	.$440e	UPDATEHIGHP LDA STRBUFP
6257	.$4411	STA HIGHP
6258	.$4414	LDA STRBUFP+1
6259	.$4417	STA HIGHP+1  
6260	.$441a	JSR REMEMBERLASTVAR
6261	.$441d	JSR STOREVARREF
6262	.$4420	NOHPUPDATE LDY #0
6263	.$4422	LDA (TMP_ZP),Y 
6264	.$4424	STA (TMP3_ZP),Y
6265	.$4426	TAY    
6266	.$4427	BEQ EXITCOPY 
6267	.$4429	LOOP  LDA (TMP_ZP),Y 
6268	.$442b	STA (TMP3_ZP),Y
6269	.$442d	DEY
6270	.$442e	BNE LOOP
6271	.$4430	EXITCOPY RTS
6276	.$4431	COPYSTRING2 LDY #0
6277	.$4433	LDA (TMP_ZP),Y
6278	.$4435	STA TMP_REG
6279	.$4437	TAX
6280	.$4438	LDA HIGHP
6281	.$443b	STA TMP3_ZP
6282	.$443d	STA (TMP2_ZP),Y
6283	.$443f	LDA HIGHP+1
6284	.$4442	STA TMP3_ZP+1
6285	.$4444	INY
6286	.$4445	STA (TMP2_ZP),Y
6287	.$4447	JSR REMEMBERLASTVAR
6290	.$444a	LDA TMP_ZP
6291	.$444c	CMP TMP3_ZP
6292	.$444e	BNE DOLOOP
6293	.$4450	LDA TMP_ZP+1
6294	.$4452	CMP TMP3_ZP+1
6295	.$4454	BEQ SKIPCP2
6296	.$4456	DOLOOP  DEY
6297	.$4457	TXA
6298	.$4458	STA (TMP3_ZP),Y
6299	.$445a	INY
6300	.$445b	ASLOOP  LDA (TMP_ZP),Y
6301	.$445d	STA (TMP3_ZP),Y
6302	.$445f	INY
6303	.$4460	DEX
6304	.$4461	BNE ASLOOP
6305	.$4463	SKIPCP2  LDA HIGHP
6306	.$4466	CLC
6307	.$4467	ADC TMP_REG
6308	.$4469	PHP
6309	.$446a	CLC
6310	.$446b	ADC #3
6311	.$446d	STA HIGHP
6312	.$4470	STA STRBUFP
6313	.$4473	BCC SKIPLOWAS1
6314	.$4475	INC HIGHP+1
6315	.$4478	SKIPLOWAS1 PLP
6316	.$4479	BCC SKIPLOWAS2
6317	.$447b	INC HIGHP+1
6318	.$447e	SKIPLOWAS2 LDA HIGHP+1
6319	.$4481	STA STRBUFP+1
6320	.$4484	JSR STOREVARREF
6321	.$4487	RTS
6325	.$4488	CHECKLASTVAR
6326	.$4488	LDA TMP2_ZP
6327	.$448a	CMP LASTVAR
6328	.$448d	BNE NOTSAMEVAR
6329	.$448f	LDA TMP2_ZP+1
6330	.$4491	CMP LASTVAR+1
6331	.$4494	BNE NOTSAMEVAR
6332	.$4496	LDA LASTVARP   
6333	.$4499	STA HIGHP
6334	.$449c	STA STRBUFP
6335	.$449f	LDA LASTVARP+1
6336	.$44a2	STA HIGHP+1
6337	.$44a5	STA STRBUFP+1
6338	.$44a8	NOTSAMEVAR RTS
6342	.$44a9	REMEMBERLASTVAR
6343	.$44a9	LDA TMP2_ZP
6344	.$44ab	STA LASTVAR
6345	.$44ae	LDA TMP2_ZP+1
6346	.$44b0	STA LASTVAR+1
6347	.$44b3	LDA TMP3_ZP
6348	.$44b5	STA LASTVARP
6349	.$44b8	LDA TMP3_ZP+1
6350	.$44ba	STA LASTVARP+1 
6351	.$44bd	RTS
6356	.$44be	STOREVARREF
6357	.$44be	TYA
6358	.$44bf	PHA    
6359	.$44c0	LDA TMP_ZP
6360	.$44c2	PHA
6361	.$44c3	LDA TMP_ZP+1
6362	.$44c5	PHA
6363	.$44c6	LDA HIGHP+1
6364	.$44c9	STA TMP_ZP+1
6365	.$44cb	LDA HIGHP
6366	.$44ce	SEC
6367	.$44cf	SBC #2
6368	.$44d1	STA TMP_ZP
6369	.$44d3	BCS RLVNOOV
6370	.$44d5	DEC TMP_ZP+1
6371	.$44d7	RLVNOOV  LDA TMP2_ZP
6372	.$44d9	LDY #0
6373	.$44db	STA (TMP_ZP),Y
6374	.$44dd	LDA TMP2_ZP+1
6375	.$44df	INY
6376	.$44e0	STA (TMP_ZP),Y 
6377	.$44e2	PLA
6378	.$44e3	STA TMP_ZP+1
6379	.$44e5	PLA
6380	.$44e6	STA TMP_ZP  
6381	.$44e8	PLA
6382	.$44e9	TAY    
6383	.$44ea	RTS
6386	.$44eb	REROUTE  LDA CMD_NUM  
6387	.$44ee	BEQ REROUTECMD
6388	.$44f0	TAX
6389	.$44f1	STA CHANNEL
6390	.$44f4	JMP CHKOUT
6391	.$44f7	REROUTECMD RTS
6394	.$44f8	RESETROUTE LDA CMD_NUM  
6395	.$44fb	BEQ RESETROUTECMD
6396	.$44fd	JMP CLRCHNEW
6397	.$4500	RESETROUTECMD
6398	.$4500	RTS
6401	.$4501	INTOUTFASTZ LDX #32    
6402	.$4503	LDA TMP_ZP+1
6403	.$4505	BPL INTISPOS
6404	.$4507	CLC
6405	.$4508	LDA TMP_ZP
6406	.$450a	EOR #$FF
6407	.$450c	ADC #1
6408	.$450e	STA TMP_ZP
6409	.$4510	LDA TMP_ZP+1
6410	.$4512	EOR #$FF
6411	.$4514	ADC #0
6412	.$4516	STA TMP_ZP+1
6413	.$4518	LDX #45    
6414	.$451a	INTISPOS
6415	.$451a	TXA
6416	.$451b	JSR CHROUT
6417	.$451e	JSR CONVPOSINT
6418	.$4521	LDA NUMFLAG
6419	.$4524	BNE ALLINTOUTDONE
6420	.$4526	LDA #48
6421	.$4528	JSR CHROUT
6422	.$452b	ALLINTOUTDONE
6423	.$452b	RTS
6426	.$452c	NUMBEROUT
6427	.$452c	BEQ NUMZERO
6428	.$452e	ORA #$30
6429	.$4530	STA NUMFLAG
6430	.$4533	JMP CHROUT
6431	.$4536	NUMZERO
6432	.$4536	LDX NUMFLAG
6433	.$4539	BEQ STILLZERO
6434	.$453b	ORA #$30
6435	.$453d	JMP CHROUT
6436	.$4540	STILLZERO
6437	.$4540	RTS
6440	.$4541	CONVPOSINT
6441	.$4541	JSR INT2BCD
6442	.$4544	LDX #0
6443	.$4546	STX NUMFLAG
6444	.$4549	AND #$0F
6445	.$454b	JSR NUMBEROUT
6446	.$454e	LDA BCD+1
6447	.$4551	LSR
6448	.$4552	LSR
6449	.$4553	LSR
6450	.$4554	LSR
6451	.$4555	JSR NUMBEROUT
6452	.$4558	LDA BCD+1
6453	.$455b	AND #$0F
6454	.$455d	TAY
6455	.$455e	JSR NUMBEROUT
6456	.$4561	LDA BCD
6457	.$4564	LSR
6458	.$4565	LSR
6459	.$4566	LSR
6460	.$4567	LSR
6461	.$4568	JSR NUMBEROUT
6462	.$456b	LDA BCD
6463	.$456e	AND #$0F
6464	.$4570	JSR NUMBEROUT
6465	.$4573	RTS
6468	.$4574	INT2BCD
6469	.$4574	SED
6470	.$4575	LDA #0
6471	.$4577	STA BCD
6472	.$457a	STA BCD+1
6473	.$457d	STA BCD+2
6474	.$4580	ASL TMP_ZP
6475	.$4582	ROL TMP_ZP+1
6476	.$4584	LDA BCD
6477	.$4587	ADC BCD
6478	.$458a	STA BCD
6479	.$458d	ASL TMP_ZP
6480	.$458f	ROL TMP_ZP+1
6481	.$4591	ADC BCD
6482	.$4594	STA BCD
6483	.$4597	ASL TMP_ZP
6484	.$4599	ROL TMP_ZP+1
6485	.$459b	ADC BCD
6486	.$459e	STA BCD
6487	.$45a1	ASL TMP_ZP
6488	.$45a3	ROL TMP_ZP+1
6489	.$45a5	ADC BCD
6490	.$45a8	STA BCD
6491	.$45ab	ASL TMP_ZP
6492	.$45ad	ROL TMP_ZP+1
6493	.$45af	ADC BCD
6494	.$45b2	STA BCD
6495	.$45b5	ASL TMP_ZP
6496	.$45b7	ROL TMP_ZP+1
6497	.$45b9	ADC BCD
6498	.$45bc	STA BCD
6499	.$45bf	LDX #7
6500	.$45c1	BCDBIT1
6501	.$45c1	ASL TMP_ZP
6502	.$45c3	ROL TMP_ZP+1
6503	.$45c5	LDA BCD
6504	.$45c8	ADC BCD
6505	.$45cb	STA BCD
6506	.$45ce	LDA BCD+1
6507	.$45d1	ADC BCD+1
6508	.$45d4	STA BCD+1
6509	.$45d7	DEX
6510	.$45d8	BNE BCDBIT1
6511	.$45da	LDX #3
6512	.$45dc	BCDBIT2
6513	.$45dc	ASL TMP_ZP
6514	.$45de	ROL TMP_ZP+1
6515	.$45e0	LDA BCD
6516	.$45e3	ADC BCD
6517	.$45e6	STA BCD
6518	.$45e9	LDA BCD+1
6519	.$45ec	ADC BCD+1
6520	.$45ef	STA BCD+1
6521	.$45f2	LDA BCD+2
6522	.$45f5	ADC BCD+2
6523	.$45f8	STA BCD+2
6524	.$45fb	DEX
6525	.$45fc	BNE BCDBIT2
6526	.$45fe	CLD
6527	.$45ff	RTS
6528	.$4600	BCD
6529	.$4600	.WORD 0 0
6530	.$4604	NUMFLAG
6531	.$4604	.BYTE 0
6534	.$4605	REALOUTFAST JSR FACINT
6535	.$4608	STA TMP_ZP+1
6536	.$460a	STY TMP_ZP
6537	.$460c	JMP INTOUTFASTZ
6540	.$460f	CHECKFORFASTOUT
6541	.$460f	JSR REROUTE
6542	.$4612	JSR XREGFAC
6543	.$4615	LDA FACEXP
6544	.$4617	CMP #$90
6545	.$4619	BCS REALOUTINT
6546	.$461b	CMP #$81
6547	.$461d	BCC REALOUTINT
6548	.$461f	MAYBEREALOUTFAST
6549	.$461f	LDA FACEXP+3
6550	.$4621	BNE REALOUTINT
6551	.$4623	LDA FACEXP+4
6552	.$4625	BNE REALOUTINT
6553	.$4627	LDA FACEXP
6554	.$4629	SEC
6555	.$462a	SBC #129
6556	.$462c	ASL
6557	.$462d	TAX
6558	.$462e	LDA FACEXP+1
6559	.$4630	AND MANTMASK,X
6560	.$4633	BNE REALOUTINT
6561	.$4635	INX
6562	.$4636	LDA FACEXP+2
6563	.$4638	AND MANTMASK,X
6564	.$463b	BNE REALOUTINT
6565	.$463d	JMP REALOUTFAST
6566	.$4640	REALOUTINT LDY #0
6567	.$4642	JSR FACSTR
6568	.$4645	LDY #0
6569	.$4647	LDA LOFBUF,Y
6570	.$464a	STRLOOPRO JSR CHROUT
6571	.$464d	INY
6572	.$464e	LDA LOFBUF,Y
6573	.$4651	BNE STRLOOPRO
6574	.$4653	RTS
6575	.$4654	MANTMASK
6576	.$4654	.BYTE 127 255 63 255 31 255 15 255 7 255 3 255 1 255 0 255 0 127 0 63 0 31 0 15 0 7 0 3 0 1
6579	.$4672	REALOUT  LDA X_REG
6580	.$4674	BNE RNOTNULL
6581	.$4676	JMP PRINTNULL
6582	.$4679	RNOTNULL JSR CHECKFORFASTOUT
6583	.$467c	JMP RESETROUTE
6586	.$467f	LINEBREAK JSR REROUTE
6587	.$4682	LDA #$0D
6588	.$4684	JSR CHROUT
6589	.$4687	JMP RESETROUTE
6592	.$468a	PRINTNULL JSR REROUTE
6593	.$468d	LDA #$20
6594	.$468f	JSR CHROUT
6595	.$4692	LDA #$30
6596	.$4694	JSR CHROUT
6597	.$4697	JMP RESETROUTE
6600	.$469a	STROUTWL STA A_REG
6601	.$469d	STY A_REG+1
6602	.$46a0	STROUT  JSR REROUTE
6603	.$46a3	LDA A_REG
6604	.$46a6	STA INDEX1
6605	.$46a8	LDA A_REG+1
6606	.$46ab	STA INDEX1+1
6607	.$46ad	LDY #0
6608	.$46af	LDA (INDEX1),Y
6609	.$46b1	TAX
6610	.$46b2	INC INDEX1
6611	.$46b4	BNE PRINTSTR
6612	.$46b6	INC INDEX1+1
6613	.$46b8	PRINTSTR JSR PRINTSTRS
6614	.$46bb	LDA HIGHP   
6615	.$46be	STA STRBUFP
6616	.$46c1	LDA HIGHP+1
6617	.$46c4	STA STRBUFP+1
6618	.$46c7	JSR RESETROUTE
6619	.$46ca	RTS
6622	.$46cb	STROUTBRKWL STA A_REG
6623	.$46ce	STY A_REG+1
6624	.$46d1	STROUTBRK JSR REROUTE
6625	.$46d4	LDA A_REG
6626	.$46d7	STA INDEX1
6627	.$46d9	LDA A_REG+1
6628	.$46dc	STA INDEX1+1
6629	.$46de	LDY #0
6630	.$46e0	LDA (INDEX1),Y
6631	.$46e2	TAX
6632	.$46e3	INC INDEX1
6633	.$46e5	BNE PRINTSTR2
6634	.$46e7	INC INDEX1+1
6635	.$46e9	PRINTSTR2 JSR PRINTSTRS
6636	.$46ec	LDA HIGHP   
6637	.$46ef	STA STRBUFP
6638	.$46f2	LDA HIGHP+1
6639	.$46f5	STA STRBUFP+1
6640	.$46f8	LDA #$0D
6641	.$46fa	JSR CHROUT
6642	.$46fd	JMP RESETROUTE  
6645	.$4700	ARRAYACCESS_REAL_S
6646	.$4700	STA G_REG
6647	.$4702	STY G_REG+1
6648	.$4704	ARRAYACCESS_REAL
6649	.$4704	JSR XREGFAC
6650	.$4707	JSR FACINT
6651	.$470a	ARRAYACCESS_REAL_INT
6652	.$470a	LDX G_REG
6653	.$470c	STX TMP_ZP
6654	.$470e	LDX G_REG+1
6655	.$4710	STX TMP_ZP+1
6656	.$4712	STY TMP3_ZP
6657	.$4714	STA TMP3_ZP+1
6658	.$4716	TAX
6659	.$4717	TYA
6660	.$4718	ASL
6661	.$4719	TAY
6662	.$471a	TXA
6663	.$471b	ROL
6664	.$471c	TAX
6665	.$471d	TYA
6666	.$471e	ASL
6667	.$471f	STA TMP2_ZP
6668	.$4721	TXA
6669	.$4722	ROL
6670	.$4723	STA TMP2_ZP+1
6671	.$4725	LDA TMP_ZP
6672	.$4727	CLC
6673	.$4728	ADC TMP3_ZP
6674	.$472a	STA TMP_ZP
6675	.$472c	LDA TMP_ZP+1
6676	.$472e	ADC TMP3_ZP+1
6677	.$4730	STA TMP_ZP+1
6678	.$4732	LDA TMP_ZP
6679	.$4734	CLC
6680	.$4735	ADC TMP2_ZP
6681	.$4737	STA TMP3_ZP
6682	.$4739	LDA TMP_ZP+1
6683	.$473b	ADC TMP2_ZP+1
6684	.$473d	STA TMP3_ZP+1
6685	.$473f	JMP COPY2_XY_XREG
6688	.$4742	ARRAYSTORE_REAL
6689	.$4742	JSR XREGFAC
6690	.$4745	JSR FACINT
6691	.$4748	ARRAYSTORE_REAL_INT
6692	.$4748	LDX G_REG
6693	.$474a	STX TMP_ZP
6694	.$474c	LDX G_REG+1
6695	.$474e	STX TMP_ZP+1
6696	.$4750	STY TMP3_ZP
6697	.$4752	STA TMP3_ZP+1
6698	.$4754	TAX
6699	.$4755	TYA
6700	.$4756	ASL
6701	.$4757	TAY
6702	.$4758	TXA
6703	.$4759	ROL
6704	.$475a	TAX
6705	.$475b	TYA
6706	.$475c	ASL
6707	.$475d	STA TMP2_ZP
6708	.$475f	TXA
6709	.$4760	ROL
6710	.$4761	STA TMP2_ZP+1
6711	.$4763	LDA TMP_ZP
6712	.$4765	CLC
6713	.$4766	ADC TMP3_ZP
6714	.$4768	STA TMP_ZP
6715	.$476a	LDA TMP_ZP+1
6716	.$476c	ADC TMP3_ZP+1
6717	.$476e	STA TMP_ZP+1
6718	.$4770	LDA TMP_ZP
6719	.$4772	CLC
6720	.$4773	ADC TMP2_ZP
6721	.$4775	STA TMP_ZP
6722	.$4777	LDA TMP_ZP+1
6723	.$4779	ADC TMP2_ZP+1
6724	.$477b	STA TMP_ZP+1
6725	.$477d	JMP COPY2_YREG_XYA 
6728	.$4780	ADJUSTSTACK LDA FORSTACKP 
6729	.$4783	STA TMP_ZP
6730	.$4785	LDA FORSTACKP+1
6731	.$4788	STA TMP_ZP+1
6732	.$478a	ADSEARCHFOR LDA TMP_ZP
6733	.$478c	CMP #<FORSTACK
6734	.$478e	BNE ADJUST2
6735	.$4790	LDA TMP_ZP+1
6736	.$4792	CMP #>FORSTACK
6737	.$4794	BNE ADJUST2
6738	.$4796	RTS    
6739	.$4797	ADJUST2  LDA TMP_ZP
6740	.$4799	SEC
6741	.$479a	SBC #2
6742	.$479c	STA TMP_ZP
6743	.$479e	BCS ADNOPV1N1
6744	.$47a0	DEC TMP_ZP+1
6745	.$47a2	ADNOPV1N1 LDY #0
6746	.$47a4	LDA (TMP_ZP),Y
6747	.$47a6	BNE ADNOGOSUB
6748	.$47a8	RTS    
6749	.$47a9	ADNOGOSUB
6750	.$47a9	INY
6751	.$47aa	LDA TMP_ZP
6752	.$47ac	SEC
6753	.$47ad	SBC (TMP_ZP),Y
6754	.$47af	STA TMP_ZP
6755	.$47b1	BCS ADNOPV1N2
6756	.$47b3	DEC TMP_ZP+1
6757	.$47b5	ADNOPV1N2 DEY
6758	.$47b6	LDA A_REG
6759	.$47b9	ADCMPFOR CMP (TMP_ZP),Y
6760	.$47bb	BNE ADSEARCHFOR
6761	.$47bd	LDA A_REG+1
6762	.$47c0	INY
6763	.$47c1	CMP (TMP_ZP),Y
6764	.$47c3	BEQ ADFOUNDFOR
6765	.$47c5	JMP ADSEARCHFOR
6766	.$47c8	ADLOW0  LDX A_REG+1
6767	.$47cb	BEQ ADFOUNDFOR
6768	.$47cd	BNE ADCMPFOR
6769	.$47cf	ADFOUNDFOR LDA TMP_ZP  
6770	.$47d1	STA FORSTACKP
6771	.$47d4	LDA TMP_ZP+1
6772	.$47d6	STA FORSTACKP+1
6773	.$47d9	RTS
6776	.$47da	INITFOR  JSR ADJUSTSTACK
6777	.$47dd	LDA FORSTACKP
6778	.$47e0	STA TMP_ZP
6779	.$47e2	LDA FORSTACKP+1
6780	.$47e5	STA TMP_ZP+1
6781	.$47e7	LDY #0
6782	.$47e9	LDA A_REG
6783	.$47ec	STA (TMP_ZP),Y
6784	.$47ee	INY
6785	.$47ef	LDA A_REG+1
6786	.$47f2	STA (TMP_ZP),Y
6787	.$47f4	INY
6788	.$47f5	LDA JUMP_TARGET
6789	.$47f7	STA (TMP_ZP),Y
6790	.$47f9	INY
6791	.$47fa	LDA JUMP_TARGET+1
6792	.$47fc	STA (TMP_ZP),Y
6793	.$47fe	INY
6794	.$47ff	STY TMP3_ZP
6795	.$4801	JSR INCTMPZP
6796	.$4804	JSR POPREAL
6797	.$4807	LDX TMP_ZP
6798	.$4809	LDY TMP_ZP+1
6800	.$480b	JSR FACMEM
6801	.$480e	JSR SGNFAC
6802	.$4811	STA TMP_FLAG
6803	.$4814	LDY #5
6804	.$4816	STY TMP3_ZP
6805	.$4818	JSR INCTMPZP
6806	.$481b	JSR POPREAL
6807	.$481e	LDX TMP_ZP
6808	.$4820	LDY TMP_ZP+1
6810	.$4822	JSR FACMEM
6811	.$4825	LDY #5
6812	.$4827	STY TMP3_ZP
6813	.$4829	JSR INCTMPZP
6814	.$482c	LDY #0
6815	.$482e	LDA TMP_FLAG
6816	.$4831	STA (TMP_ZP),Y
6817	.$4833	INY
6818	.$4834	LDA #1
6819	.$4836	STA (TMP_ZP),Y
6820	.$4838	INY
6821	.$4839	LDA #15
6822	.$483b	STA (TMP_ZP),Y
6823	.$483d	LDY #3
6824	.$483f	STY TMP3_ZP
6825	.$4841	JSR INCTMPZP
6826	.$4844	LDA TMP_ZP
6827	.$4846	STA FORSTACKP
6828	.$4849	LDA TMP_ZP+1
6829	.$484b	STA FORSTACKP+1
6830	.$484e	RTS
6833	.$484f	NEXT  LDA FORSTACKP
6834	.$4852	STA TMP_ZP
6835	.$4854	LDA FORSTACKP+1
6836	.$4857	STA TMP_ZP+1
6837	.$4859	SEARCHFOR LDA TMP_ZP+1
6838	.$485b	STA TMP3_REG+1
6839	.$485e	LDA TMP_ZP
6840	.$4860	STA TMP3_REG
6841	.$4863	SEC
6842	.$4864	SBC #2
6843	.$4866	STA TMP_ZP
6844	.$4868	BCS NOPV1N1
6845	.$486a	DEC TMP_ZP+1
6846	.$486c	NOPV1N1  LDY #0
6847	.$486e	LDA (TMP_ZP),Y
6848	.$4870	BNE NOGOSUB
6849	.$4872	JMP NEXTWOFOR
6850	.$4875	NOGOSUB
6851	.$4875	INY
6852	.$4876	LDA TMP_ZP
6853	.$4878	SEC
6854	.$4879	SBC (TMP_ZP),Y
6855	.$487b	STA TMP_ZP
6856	.$487d	BCS NOPV1N2
6857	.$487f	DEC TMP_ZP+1
6858	.$4881	NOPV1N2  DEY
6859	.$4882	LDA A_REG
6860	.$4885	BEQ LOW0
6861	.$4887	CMPFOR  CMP (TMP_ZP),Y
6862	.$4889	BNE SEARCHFOR
6863	.$488b	LDA A_REG+1
6864	.$488e	INY
6865	.$488f	CMP (TMP_ZP),Y
6866	.$4891	BEQ FOUNDFOR
6867	.$4893	JMP SEARCHFOR
6868	.$4896	LOW0  LDX A_REG+1
6869	.$4899	BEQ FOUNDFOR
6870	.$489b	BNE CMPFOR
6871	.$489d	FOUNDFOR LDA TMP_ZP
6872	.$489f	STA TMP2_REG
6873	.$48a2	LDA TMP_ZP+1
6874	.$48a4	STA TMP2_REG+1
6875	.$48a7	VARREAL
6876	.$48a7	LDY #0
6877	.$48a9	STY A_REG+1 
6878	.$48ac	LDA (TMP_ZP),Y
6879	.$48ae	TAX
6880	.$48af	INY
6881	.$48b0	LDA (TMP_ZP),Y
6882	.$48b2	TAY
6883	.$48b3	TXA
6884	.$48b4	JSR REALFAC
6885	.$48b7	CALCNEXT LDA TMP_ZP
6886	.$48b9	CLC
6887	.$48ba	ADC #4
6888	.$48bc	STA TMP_ZP
6889	.$48be	BCC NOPV2IN
6890	.$48c0	INC TMP_ZP+1
6891	.$48c2	NOPV2IN  STA TMP_REG
6892	.$48c4	LDY TMP_ZP+1
6893	.$48c6	STY TMP_REG+1
6894	.$48c8	JSR FACADD
6895	.$48cb	LDA TMP2_REG
6896	.$48ce	STA TMP_ZP
6897	.$48d0	LDA TMP2_REG+1
6898	.$48d3	STA TMP_ZP+1
6899	.$48d5	STOREREAL
6900	.$48d5	LDY #0
6901	.$48d7	LDA (TMP_ZP),Y
6902	.$48d9	TAX
6903	.$48da	INY
6904	.$48db	LDA (TMP_ZP),Y
6905	.$48dd	TAY
6906	.$48de	JSR FACMEM 
6907	.$48e1	CMPFOR  LDA #5
6908	.$48e3	STA TMP3_ZP
6909	.$48e5	LDA TMP_REG
6910	.$48e7	CLC
6911	.$48e8	ADC #5
6912	.$48ea	STA TMP_REG
6913	.$48ec	BCC NOPV3
6914	.$48ee	INC TMP_REG+1
6915	.$48f0	NOPV3  LDY TMP_REG+1
6916	.$48f2	JSR CMPFAC  
6917	.$48f5	BEQ LOOPING
6918	.$48f7	PHA
6919	.$48f8	LDY #14
6920	.$48fa	LDA (TMP_ZP),Y
6921	.$48fc	BEQ STEPZERO
6922	.$48fe	ROL
6923	.$48ff	BCC STEPPOS
6924	.$4901	STEPNEG  PLA
6925	.$4902	ROL
6926	.$4903	BCC LOOPING
6927	.$4905	BCS EXITLOOP
6928	.$4907	STEPPOS  PLA
6929	.$4908	ROL
6930	.$4909	BCC EXITLOOP
6931	.$490b	LOOPING  LDA TMP3_REG
6932	.$490e	STA FORSTACKP
6933	.$4911	LDA TMP3_REG+1
6934	.$4914	STA FORSTACKP+1
6935	.$4917	LDA TMP2_REG
6936	.$491a	CLC
6937	.$491b	ADC #2
6938	.$491d	STA TMP2_REG
6939	.$4920	BCC NOPV4IN
6940	.$4922	INC TMP2_REG+1
6941	.$4925	NOPV4IN  LDY #0
6942	.$4927	STY A_REG
6943	.$492a	STA TMP_ZP
6944	.$492c	LDA TMP2_REG+1
6945	.$492f	STA TMP_ZP+1
6946	.$4931	LDA (TMP_ZP),Y
6947	.$4933	STA JUMP_TARGET
6948	.$4935	INY
6949	.$4936	LDA (TMP_ZP),Y
6950	.$4938	STA JUMP_TARGET+1
6951	.$493a	RTS
6952	.$493b	STEPZERO PLA
6953	.$493c	JMP LOOPING
6954	.$493f	EXITLOOP LDA TMP2_REG
6955	.$4942	STA FORSTACKP
6956	.$4945	LDA TMP2_REG+1
6957	.$4948	STA FORSTACKP+1
6958	.$494b	LDA #1
6959	.$494d	STA A_REG
6960	.$4950	RTS
6963	.$4951	RETURN  LDA FORSTACKP
6964	.$4954	STA TMP_ZP
6965	.$4956	LDA FORSTACKP+1
6966	.$4959	STA TMP_ZP+1
6967	.$495b	SEARCHGOSUB LDA TMP_ZP
6968	.$495d	SEC
6969	.$495e	SBC #2
6970	.$4960	STA TMP_ZP
6971	.$4962	BCS NOPV1SG
6972	.$4964	DEC TMP_ZP+1
6973	.$4966	NOPV1SG  LDY #0
6974	.$4968	LDA (TMP_ZP),Y
6975	.$496a	BEQ FOUNDGOSUB
6976	.$496c	INY
6977	.$496d	LDA (TMP_ZP),Y
6978	.$496f	STA TMP3_ZP
6979	.$4971	LDA TMP_ZP
6980	.$4973	SEC
6981	.$4974	SBC (TMP_ZP),Y
6982	.$4976	STA TMP_ZP
6983	.$4978	BCS NOPV1GS
6984	.$497a	DEC TMP_ZP+1
6985	.$497c	NOPV1GS  JMP SEARCHGOSUB
6986	.$497f	FOUNDGOSUB
6987	.$497f	LDA TMP_ZP
6988	.$4981	STA FORSTACKP
6989	.$4984	LDA TMP_ZP+1
6990	.$4986	STA FORSTACKP+1
6991	.$4989	RTS
6994	.$498a	GOSUB  LDA FORSTACKP
6995	.$498d	STA TMP_ZP
6996	.$498f	LDA FORSTACKP+1
6997	.$4992	STA TMP_ZP+1
6998	.$4994	LDY #0
6999	.$4996	TYA
7000	.$4997	STA (TMP_ZP),Y
7001	.$4999	INY
7002	.$499a	STA (TMP_ZP),Y
7003	.$499c	INY
7004	.$499d	TYA
7005	.$499e	CLC
7006	.$499f	ADC TMP_ZP
7007	.$49a1	STA FORSTACKP
7008	.$49a4	BCC GOSUBNOOV
7009	.$49a6	INC FORSTACKP+1
7010	.$49a9	GOSUBNOOV RTS
7013	.$49aa	READINIT LDA DATASP
7014	.$49ad	STA TMP3_ZP
7015	.$49af	LDA DATASP+1
7016	.$49b2	STA TMP3_ZP+1
7017	.$49b4	LDY #$0
7018	.$49b6	LDA (TMP3_ZP),Y
7019	.$49b8	INC TMP3_ZP
7020	.$49ba	BNE READNOOV
7021	.$49bc	INC TMP3_ZP+1
7022	.$49be	READNOOV CMP #$FF
7023	.$49c0	BNE MOREDATA
7024	.$49c2	JMP OUTOFDATA
7025	.$49c5	MOREDATA RTS
7028	.$49c6	READADDPTR STX TMP_REG+1
7029	.$49c8	LDA TMP3_ZP
7030	.$49ca	CLC
7031	.$49cb	ADC TMP_REG+1
7032	.$49cd	STA TMP3_ZP
7033	.$49cf	BCC READADDPTRX
7034	.$49d1	INC TMP3_ZP+1
7035	.$49d3	READADDPTRX RTS
7038	.$49d4	READNUMBER JSR READINIT
7039	.$49d7	MORENUMDATA CMP #$2    
7040	.$49d9	BNE NUMNUM
7041	.$49db	LDA (TMP3_ZP),Y  
7042	.$49dd	BEQ RNESTR
7043	.$49df	CMP #1    
7044	.$49e1	BEQ STRGNUMCHK
7045	.$49e3	JMP SYNTAXERROR
7046	.$49e6	STRGNUMCHK  INY
7047	.$49e7	LDA (TMP3_ZP),Y
7048	.$49e9	CMP #46    
7049	.$49eb	BEQ RNESTR2
7050	.$49ed	CMP #69    
7051	.$49ef	BEQ RNESTR2
7052	.$49f1	JMP SYNTAXERROR
7053	.$49f4	RNESTR2  LDA #0
7054	.$49f6	LDY #0
7055	.$49f8	JSR INTFAC
7056	.$49fb	LDX #2
7057	.$49fd	JSR READADDPTR
7058	.$4a00	JMP NUMREAD
7059	.$4a03	RNESTR  LDA #0
7060	.$4a05	LDY #0
7061	.$4a07	JSR INTFAC
7062	.$4a0a	LDX #1
7063	.$4a0c	JSR READADDPTR
7064	.$4a0f	JMP NUMREAD
7065	.$4a12	NUMNUM  CMP #$1
7066	.$4a14	BEQ NUMREADREAL
7067	.$4a16	CMP #$0
7068	.$4a18	BEQ NUMREADINT
7069	.$4a1a	CMP #$4
7070	.$4a1c	BCS READNOTYPE
7071	.$4a1e	LDA (TMP3_ZP),Y
7072	.$4a20	TAY
7073	.$4a21	JSR BYTEFAC
7074	.$4a24	LDX #1
7075	.$4a26	JSR READADDPTR
7076	.$4a29	JMP NUMREAD   
7077	.$4a2c	READNOTYPE TAY     
7078	.$4a2d	JSR BYTEFAC
7079	.$4a30	JMP NUMREAD
7080	.$4a33	NUMREADINT LDA (TMP3_ZP),Y  
7081	.$4a35	STA TMP_REG
7082	.$4a37	INY
7083	.$4a38	LDA (TMP3_ZP),Y
7084	.$4a3a	LDY TMP_REG
7085	.$4a3c	JSR INTFAC
7086	.$4a3f	LDX #2
7087	.$4a41	JSR READADDPTR
7088	.$4a44	JMP NUMREAD
7089	.$4a47	NUMREADREAL LDA TMP3_ZP
7090	.$4a49	LDY TMP3_ZP+1
7091	.$4a4b	JSR REALFAC
7092	.$4a4e	LDX #5
7093	.$4a50	JSR READADDPTR
7094	.$4a53	NUMREAD  JSR NEXTDATA
7095	.$4a56	JMP FACYREG  
7098	.$4a59	NEXTDATA LDA TMP3_ZP   
7099	.$4a5b	STA DATASP
7100	.$4a5e	LDA TMP3_ZP+1
7101	.$4a60	STA DATASP+1
7102	.$4a63	RTS
7105	.$4a64	GETSTR  LDA #8
7106	.$4a66	LDY #0
7107	.$4a68	JSR COMPACTF
7108	.$4a6b	LDY #0
7109	.$4a6d	STY CMD_NUM  
7110	.$4a70	JSR GETIN
7111	.$4a73	CMP #0   
7112	.$4a75	BNE SOMEKEY
7113	.$4a77	NOKEY  LDA #<EMPTYSTR
7114	.$4a79	STA A_REG
7115	.$4a7c	LDA #>EMPTYSTR
7116	.$4a7e	STA A_REG+1
7117	.$4a81	RTS
7118	.$4a82	SOMEKEY  TAX
7119	.$4a83	LDA STRBUFP
7120	.$4a86	STA TMP_ZP
7121	.$4a88	STA A_REG
7122	.$4a8b	LDA STRBUFP+1
7123	.$4a8e	STA TMP_ZP+1
7124	.$4a90	STA A_REG+1
7125	.$4a93	LDA #1
7126	.$4a95	LDY #0
7127	.$4a97	STA (TMP_ZP),Y
7128	.$4a99	TXA
7129	.$4a9a	LDY #1
7130	.$4a9c	STA (TMP_ZP),Y
7131	.$4a9e	LDA STRBUFP
7132	.$4aa1	CLC
7133	.$4aa2	ADC #2
7134	.$4aa4	STA STRBUFP
7135	.$4aa7	BCC GETSTR1
7136	.$4aa9	INC STRBUFP+1
7137	.$4aac	GETSTR1  RTS
7140	.$4aad	ZEROSET  LDA #0
7141	.$4aaf	STA X_REG
7142	.$4ab1	STA X_REG+1
7143	.$4ab3	STA X_REG+2
7144	.$4ab5	STA X_REG+3
7145	.$4ab7	STA X_REG+4
7146	.$4ab9	RTS
7149	.$4aba	SEQ   JSR CMPSTR
7150	.$4abd	LDA TMP3_ZP
7151	.$4abf	BNE NOTSEQ
7152	.$4ac1	LDA #<REAL_CONST_MINUS_ONE
7153	.$4ac3	STA TMP3_ZP
7154	.$4ac5	LDA #>REAL_CONST_MINUS_ONE
7155	.$4ac7	STA TMP3_ZP+1
7156	.$4ac9	JMP COPY2_XY_XREG
7157	.$4acc	NOTSEQ  JMP ZEROSET
7160	.$4acf	CMPSTR  LDY #0   
7161	.$4ad1	LDX #1
7162	.$4ad3	LDA A_REG
7163	.$4ad6	STA TMP_ZP
7164	.$4ad8	LDA A_REG+1
7165	.$4adb	STA TMP_ZP+1
7166	.$4add	LDA B_REG
7167	.$4ae0	STA TMP2_ZP
7168	.$4ae2	LDA B_REG+1
7169	.$4ae5	STA TMP2_ZP+1
7170	.$4ae7	CMP TMP_ZP+1
7171	.$4ae9	BNE CMPSTRSK1
7172	.$4aeb	LDA TMP2_ZP
7173	.$4aed	CMP TMP_ZP
7174	.$4aef	BNE CMPSTRSK1
7175	.$4af1	LDX #0
7176	.$4af3	JMP STRCMPRES
7177	.$4af6	CMPSTRSK1 LDA (TMP_ZP),Y
7178	.$4af8	CMP (TMP2_ZP),Y
7179	.$4afa	BNE STRCMPRES
7180	.$4afc	TAX
7181	.$4afd	BNE NOTZCTR
7182	.$4aff	LDX #0
7183	.$4b01	JMP STRCMPRES
7184	.$4b04	NOTZCTR  INC TMP_ZP
7185	.$4b06	BNE SCSKP1
7186	.$4b08	INC TMP_ZP+1
7187	.$4b0a	SCSKP1  INC TMP2_ZP
7188	.$4b0c	BNE CMPSTRLOOP
7189	.$4b0e	INC TMP2_ZP+1
7190	.$4b10	CMPSTRLOOP LDA (TMP_ZP),Y
7191	.$4b12	CMP (TMP2_ZP),Y
7192	.$4b14	BNE STRCMPRES
7193	.$4b16	INY
7194	.$4b17	DEX
7195	.$4b18	BNE CMPSTRLOOP
7196	.$4b1a	STRCMPRES STX TMP3_ZP
7197	.$4b1c	RTS
7200	.$4b1d	REALFACPUSH STA TMP_ZP
7201	.$4b1f	STY TMP_ZP+1
7202	.$4b21	LDX FPSTACKP
7203	.$4b24	LDY FPSTACKP+1
7204	.$4b27	STX TMP2_ZP
7205	.$4b29	STY TMP2_ZP+1
7206	.$4b2b	LDY #0
7207	.$4b2d	LDA (TMP_ZP),Y
7208	.$4b2f	STA (TMP2_ZP),Y
7209	.$4b31	INY
7210	.$4b32	LDA (TMP_ZP),Y
7211	.$4b34	STA (TMP2_ZP),Y
7212	.$4b36	INY
7213	.$4b37	LDA (TMP_ZP),Y
7214	.$4b39	STA (TMP2_ZP),Y
7215	.$4b3b	INY
7216	.$4b3c	LDA (TMP_ZP),Y
7217	.$4b3e	STA (TMP2_ZP),Y
7218	.$4b40	INY
7219	.$4b41	LDA (TMP_ZP),Y
7220	.$4b43	STA (TMP2_ZP),Y
7221	.$4b45	TXA    
7222	.$4b46	CLC
7223	.$4b47	ADC #5
7224	.$4b49	STA FPSTACKP
7225	.$4b4c	BCC NOPVRFPXX
7226	.$4b4e	INC FPSTACKP+1
7227	.$4b51	NOPVRFPXX RTS
7230	.$4b52	PUSHREAL LDX FPSTACKP
7231	.$4b55	LDY FPSTACKP+1
7232	.$4b58	JSR FACMEM
7233	.$4b5b	LDA FPSTACKP
7234	.$4b5e	CLC
7235	.$4b5f	ADC #5
7236	.$4b61	STA FPSTACKP
7237	.$4b64	BCC NOPVPUR
7238	.$4b66	INC FPSTACKP+1
7239	.$4b69	NOPVPUR  RTS
7242	.$4b6a	POPREAL2X LDA FPSTACKP
7243	.$4b6d	SEC
7244	.$4b6e	SBC #5
7245	.$4b70	STA FPSTACKP
7246	.$4b73	BCS NOPVPR2X
7247	.$4b75	DEC FPSTACKP+1
7248	.$4b78	NOPVPR2X LDA FPSTACKP
7249	.$4b7b	LDY FPSTACKP+1
7250	.$4b7e	JSR REALFAC
7251	.$4b81	JSR XREGARG
7252	.$4b84	RTS
7255	.$4b85	POPREAL  LDA FPSTACKP
7256	.$4b88	SEC
7257	.$4b89	SBC #5
7258	.$4b8b	STA FPSTACKP
7259	.$4b8e	BCS NOPVPR
7260	.$4b90	DEC FPSTACKP+1
7261	.$4b93	NOPVPR  LDA FPSTACKP
7262	.$4b96	LDY FPSTACKP+1
7263	.$4b99	JMP REALFAC
7266	.$4b9c	POPREALXREG LDA FPSTACKP
7267	.$4b9f	SEC
7268	.$4ba0	SBC #5
7269	.$4ba2	STA FPSTACKP
7270	.$4ba5	BCS NOPVPRXR
7271	.$4ba7	DEC FPSTACKP+1
7272	.$4baa	NOPVPRXR LDA FPSTACKP
7273	.$4bad	LDY FPSTACKP+1
7274	.$4bb0	STA TMP_ZP
7275	.$4bb2	STY TMP_ZP+1
7276	.$4bb4	LDY #$4
7277	.$4bb6	LDA (TMP_ZP),Y
7278	.$4bb8	STA X_REG+4
7279	.$4bba	STA FACLO
7280	.$4bbc	DEY
7281	.$4bbd	LDA (TMP_ZP),Y
7282	.$4bbf	STA X_REG+3
7283	.$4bc1	STA FACMO
7284	.$4bc3	DEY
7285	.$4bc4	LDA (TMP_ZP),Y
7286	.$4bc6	STA X_REG+2
7287	.$4bc8	STA FACMOH
7288	.$4bca	DEY
7289	.$4bcb	LDA (TMP_ZP),Y
7290	.$4bcd	STA X_REG+1
7291	.$4bcf	STA FACSGN
7292	.$4bd1	ORA #$80
7293	.$4bd3	STA FACHO
7294	.$4bd5	DEY
7295	.$4bd6	LDA (TMP_ZP),Y
7296	.$4bd8	STA X_REG
7297	.$4bda	STA FACEXP
7298	.$4bdc	STY FACOV
7299	.$4bde	RTS
7302	.$4bdf	SHL   LDA FACEXP
7303	.$4be1	BEQ SHLOK
7304	.$4be3	CLC
7305	.$4be4	ADC A_REG
7306	.$4be7	BCC SHLOK
7307	.$4be9	LDA #0
7308	.$4beb	STA FACSGN
7309	.$4bed	STA FACLO
7310	.$4bef	STA FACMO
7311	.$4bf1	STA FACMOH
7312	.$4bf3	STA FACHO
7313	.$4bf5	LDA #$FF
7314	.$4bf7	SHLOK  STA FACEXP
7315	.$4bf9	RTS
7318	.$4bfa	INCTMPZP LDA TMP_ZP
7319	.$4bfc	CLC
7320	.$4bfd	ADC TMP3_ZP
7321	.$4bff	STA TMP_ZP
7322	.$4c01	BCC NOPV2
7323	.$4c03	INC TMP_ZP+1
7324	.$4c05	NOPV2  RTS
7327	.$4c06	COPY2_YREG_XYA
7328	.$4c06	LDY #0
7329	.$4c08	LDA Y_REG
7330	.$4c0b	STA (TMP_ZP),Y
7331	.$4c0d	INY
7332	.$4c0e	LDA Y_REG+1
7333	.$4c11	STA (TMP_ZP),Y
7334	.$4c13	INY
7335	.$4c14	LDA Y_REG+2
7336	.$4c17	STA (TMP_ZP),Y
7337	.$4c19	INY
7338	.$4c1a	LDA Y_REG+3
7339	.$4c1d	STA (TMP_ZP),Y
7340	.$4c1f	INY
7341	.$4c20	LDA Y_REG+4
7342	.$4c23	STA (TMP_ZP),Y
7343	.$4c25	RTS
7346	.$4c26	COPY2_XYA_XREG
7347	.$4c26	STA TMP3_ZP
7348	.$4c28	STY TMP3_ZP+1
7349	.$4c2a	COPY2_XY_XREG
7350	.$4c2a	LDX #<X_REG  
7351	.$4c2c	LDY #0
7352	.$4c2e	LDA (TMP3_ZP),Y
7353	.$4c30	STA X_REG
7354	.$4c32	INY
7355	.$4c33	LDA (TMP3_ZP),Y
7356	.$4c35	STA X_REG+1
7357	.$4c37	INY
7358	.$4c38	LDA (TMP3_ZP),Y
7359	.$4c3a	STA X_REG+2
7360	.$4c3c	INY
7361	.$4c3d	LDA (TMP3_ZP),Y
7362	.$4c3f	STA X_REG+3
7363	.$4c41	INY
7364	.$4c42	LDA (TMP3_ZP),Y
7365	.$4c44	STA X_REG+4
7366	.$4c46	RTS
7369	.$4c47	COPY2_XYA_YREG
7370	.$4c47	STA TMP3_ZP
7371	.$4c49	STY TMP3_ZP+1
7372	.$4c4b	COPY2_XY_YREG
7373	.$4c4b	LDX #<Y_REG  
7374	.$4c4d	LDY #0
7375	.$4c4f	LDA (TMP3_ZP),Y
7376	.$4c51	STA Y_REG
7377	.$4c54	INY
7378	.$4c55	LDA (TMP3_ZP),Y
7379	.$4c57	STA Y_REG+1
7380	.$4c5a	INY
7381	.$4c5b	LDA (TMP3_ZP),Y
7382	.$4c5d	STA Y_REG+2
7383	.$4c60	INY
7384	.$4c61	LDA (TMP3_ZP),Y
7385	.$4c63	STA Y_REG+3
7386	.$4c66	INY
7387	.$4c67	LDA (TMP3_ZP),Y
7388	.$4c69	STA Y_REG+4
7389	.$4c6c	RTS
7392	.$4c6d	COPY_XREG2YREG
7393	.$4c6d	LDA X_REG
7394	.$4c6f	STA Y_REG
7395	.$4c72	LDA X_REG+1
7396	.$4c74	STA Y_REG+1
7397	.$4c77	LDA X_REG+2
7398	.$4c79	STA Y_REG+2
7399	.$4c7c	LDA X_REG+3
7400	.$4c7e	STA Y_REG+3
7401	.$4c81	LDA X_REG+4
7402	.$4c83	STA Y_REG+4
7403	.$4c86	RTS
7407	.$4c87	FACWORD
7408	.$4c87	LDA FACEXP   
7409	.$4c89	BNE DOFACWORD
7410	.$4c8b	STA FACSGN   
7411	.$4c8d	DOFACWORD:
7412	.$4c8d	JMP XFACWORD
7416	.$4c90	ONETOFAC    LDX #129
7417	.$4c92	STX FAC
7418	.$4c94	DEX
7419	.$4c95	STX FAC+1
7420	.$4c97	LDX #0
7421	.$4c99	STX FAC+2
7422	.$4c9b	STX FAC+3
7423	.$4c9d	STX FAC+4
7424	.$4c9f	STX FAC+5
7425	.$4ca1	STX FAC+6
7426	.$4ca3	RTS
7429	.$4ca4	FASTAND  LDA ARGEXP   
7430	.$4ca6	BNE CHECKFAC
7431	.$4ca8	STA FACSGN   
7432	.$4caa	STA FACLO
7433	.$4cac	STA FACMO
7434	.$4cae	STA FACMOH
7435	.$4cb0	STA FACHO
7436	.$4cb2	STA FACEXP
7437	.$4cb4	RTS
7438	.$4cb5	CHECKFAC LDA FACEXP   
7439	.$4cb7	BNE FACNOTNULL
7440	.$4cb9	STA FACSGN   
7441	.$4cbb	RTS    
7442	.$4cbc	FACNOTNULL CMP #$81
7443	.$4cbe	BNE NORMALAND
7444	.$4cc0	LDA FACHO
7445	.$4cc2	CMP #$80
7446	.$4cc4	BNE NORMALAND
7447	.$4cc6	LDA FACMOH
7448	.$4cc8	BNE NORMALAND
7449	.$4cca	LDA FACMO
7450	.$4ccc	BNE NORMALAND
7451	.$4cce	LDA FACLO
7452	.$4cd0	BNE NORMALAND
7453	.$4cd2	LDA FACSGN
7454	.$4cd4	ROL
7455	.$4cd5	BCC NORMALAND
7456	.$4cd7	LDA ARGEXP   
7457	.$4cd9	CMP #$81
7458	.$4cdb	BNE NORMALAND
7459	.$4cdd	LDA ARGHO
7460	.$4cdf	CMP #$80
7461	.$4ce1	BNE NORMALAND
7462	.$4ce3	LDA ARGMOH
7463	.$4ce5	BNE NORMALAND
7464	.$4ce7	LDA ARGMO
7465	.$4ce9	BNE NORMALAND
7466	.$4ceb	LDA ARGLO
7467	.$4ced	BNE NORMALAND
7468	.$4cef	LDA ARGSGN
7469	.$4cf1	ROL
7470	.$4cf2	BCC NORMALAND
7471	.$4cf4	RTS    
7472	.$4cf5	NORMALAND JMP ARGAND
7475	.$4cf8	FASTOR  LDA FACEXP   
7476	.$4cfa	BNE CHECKFACOR
7477	.$4cfc	LDA ARGEXP   
7478	.$4cfe	BNE CHECKARGOR 
7479	.$4d00	LDA #0
7480	.$4d02	STA FACSGN   
7481	.$4d04	RTS    
7482	.$4d05	CHECKFACOR LDA FACEXP   
7483	.$4d07	CMP #$81
7484	.$4d09	BNE NORMALOR
7485	.$4d0b	LDA FACHO
7486	.$4d0d	CMP #$80
7487	.$4d0f	BNE NORMALOR
7488	.$4d11	LDA FACMOH
7489	.$4d13	BNE NORMALOR
7490	.$4d15	LDA FACMO
7491	.$4d17	BNE NORMALOR
7492	.$4d19	LDA FACLO
7493	.$4d1b	BNE NORMALOR
7494	.$4d1d	LDA FACSGN
7495	.$4d1f	ROL
7496	.$4d20	BCC NORMALOR
7497	.$4d22	CHECKARGOR LDA ARGEXP   
7498	.$4d24	BNE CHECKARGOR2
7499	.$4d26	RTS    
7500	.$4d27	CHECKARGOR2 CMP #$81
7501	.$4d29	BNE NORMALOR
7502	.$4d2b	LDA ARGHO
7503	.$4d2d	CMP #$80
7504	.$4d2f	BNE NORMALOR
7505	.$4d31	LDA ARGMOH
7506	.$4d33	BNE NORMALOR
7507	.$4d35	LDA ARGMO
7508	.$4d37	BNE NORMALOR
7509	.$4d39	LDA ARGLO
7510	.$4d3b	BNE NORMALOR
7511	.$4d3d	LDA ARGSGN
7512	.$4d3f	AND #$80
7513	.$4d41	CMP #$80
7514	.$4d43	BNE NORMALOR
7515	.$4d45	JMP ARGFAC  
7516	.$4d48	NORMALOR JMP FACOR
7519	.$4d4b	INITOUTCHANNEL
7520	.$4d4b	LDA CHLOCKFLAG
7521	.$4d4e	BEQ INITOUT2
7522	.$4d50	CMP #$FF
7523	.$4d52	BNE SKIPINITCH
7524	.$4d54	INITOUT2
7525	.$4d54	LDA #<C_REG
7526	.$4d56	LDY #>C_REG
7527	.$4d58	JSR REALFAC
7528	.$4d5b	JSR FACWORD
7529	.$4d5e	TYA
7530	.$4d5f	TAX
7531	.$4d60	CPX CMD_NUM
7532	.$4d63	BNE CMDNEQUAL
7533	.$4d65	LDY #0
7534	.$4d67	STY CMD_NUM   
7535	.$4d6a	CMDNEQUAL STA CHANNEL
7536	.$4d6d	STA CHLOCKFLAG
7537	.$4d70	JMP CHKOUT
7538	.$4d73	SKIPINITCH
7539	.$4d73	RTS
7542	.$4d74	CLRCHNEW
7543	.$4d74	LDA CHLOCKFLAG
7544	.$4d77	BNE SKIPCLRCH
7545	.$4d79	JMP CLRCH
7546	.$4d7c	SKIPCLRCH
7547	.$4d7c	RTS
7550	.$4d7d	TABCHANNEL
7551	.$4d7d	JSR INITOUTCHANNEL
7552	.$4d80	TABCHANNELINT
7553	.$4d80	LDA CHANNEL
7554	.$4d83	CMP #3  
7555	.$4d85	BEQ TABSCREEN
7556	.$4d87	TABCHANNEL2 LDA IOCHANNEL
7557	.$4d89	STA STORE1
7558	.$4d8c	LDA #1
7559	.$4d8e	STA IOCHANNEL  
7560	.$4d90	JSR YREGFAC
7561	.$4d93	JSR FACWORD
7562	.$4d96	TYA
7563	.$4d97	TAX
7564	.$4d98	JMP EXITCHANNEL
7565	.$4d9b	TABSCREEN
7566	.$4d9b	JSR CLRCHNEW
7567	.$4d9e	JMP TAB
7570	.$4da1	EXITCHANNEL CLC
7571	.$4da2	JSR TABSPC
7572	.$4da5	JSR CLRCHNEW
7573	.$4da8	LDA STORE1
7574	.$4dab	STA IOCHANNEL
7575	.$4dad	RTS
7578	.$4dae	CHECKCMD LDA CMD_NUM  
7579	.$4db1	BEQ NOCMD
7580	.$4db3	JSR REROUTE
7581	.$4db6	LDA #$20
7582	.$4db8	JMP CHROUT
7583	.$4dbb	JSR RESETROUTE
7584	.$4dbe	NOCMD  RTS
7587	.$4dbf	NEXTWOFOR
7591	.$4dbf	LDX #$0A
7592	.$4dc1	JMP ERRALL
7595	.$4dc4	OUTOFDATA
7599	.$4dc4	LDX #$0D
7600	.$4dc6	JMP ERRALL
7603	.$4dc9	OUTOFMEMORY
7607	.$4dc9	LDX #$10
7608	.$4dcb	JMP ERRALL
7611	.$4dce	SYNTAXERROR
7615	.$4dce	JMP ERRSYN
7618	.$4dd1	FACXREG  LDA FACLO
7619	.$4dd3	STA X_REG+4
7620	.$4dd5	LDA FACMO
7621	.$4dd7	STA X_REG+3
7622	.$4dd9	LDA FACMOH
7623	.$4ddb	STA X_REG+2
7624	.$4ddd	LDA FACSGN
7625	.$4ddf	ORA #$7F
7626	.$4de1	AND FACHO
7627	.$4de3	STA X_REG+1
7628	.$4de5	LDA FACEXP
7629	.$4de7	STA X_REG
7630	.$4de9	LDA #0   
7631	.$4deb	STA FACOV
7632	.$4ded	RTS
7635	.$4dee	FACYREG  LDA FACLO
7636	.$4df0	STA Y_REG+4
7637	.$4df3	LDA FACMO
7638	.$4df5	STA Y_REG+3
7639	.$4df8	LDA FACMOH
7640	.$4dfa	STA Y_REG+2
7641	.$4dfd	LDA FACSGN
7642	.$4dff	ORA #$7F
7643	.$4e01	AND FACHO
7644	.$4e03	STA Y_REG+1
7645	.$4e06	LDA FACEXP
7646	.$4e08	STA Y_REG
7647	.$4e0b	LDA #0   
7648	.$4e0d	STA FACOV
7649	.$4e0f	RTS
7652	.$4e10	XREGFAC  LDA X_REG+4
7653	.$4e12	STA FACLO
7654	.$4e14	LDA X_REG+3
7655	.$4e16	STA FACMO
7656	.$4e18	LDA X_REG+2
7657	.$4e1a	STA FACMOH
7658	.$4e1c	LDA X_REG+1
7659	.$4e1e	STA FACSGN
7660	.$4e20	ORA #$80
7661	.$4e22	STA FACHO
7662	.$4e24	LDA X_REG
7663	.$4e26	STA FACEXP
7664	.$4e28	LDA #0
7665	.$4e2a	STA FACOV
7666	.$4e2c	RTS
7669	.$4e2d	XREGARG  LDA X_REG+4
7670	.$4e2f	STA ARGLO
7671	.$4e31	LDA X_REG+3
7672	.$4e33	STA ARGMO
7673	.$4e35	LDA X_REG+2
7674	.$4e37	STA ARGMOH
7675	.$4e39	LDA X_REG+1
7676	.$4e3b	STA ARGSGN
7677	.$4e3d	EOR FACSGN
7678	.$4e3f	STA ARISGN
7679	.$4e41	LDA ARGSGN
7680	.$4e43	ORA #$80
7681	.$4e45	STA ARGHO
7682	.$4e47	LDA X_REG
7683	.$4e49	STA ARGEXP
7684	.$4e4b	LDA FACEXP
7685	.$4e4d	RTS
7688	.$4e4e	YREGFAC  LDA Y_REG+4
7689	.$4e51	STA FACLO
7690	.$4e53	LDA Y_REG+3
7691	.$4e56	STA FACMO
7692	.$4e58	LDA Y_REG+2
7693	.$4e5b	STA FACMOH
7694	.$4e5d	LDA Y_REG+1
7695	.$4e60	STA FACSGN
7696	.$4e62	ORA #$80
7697	.$4e64	STA FACHO
7698	.$4e66	LDA Y_REG
7699	.$4e69	STA FACEXP
7700	.$4e6b	LDA #0
7701	.$4e6d	STA FACOV
7702	.$4e6f	RTS
7816	.$4e70	INITVARS
7817	.$4e70	JSR INITSTRVARS
7818	.$4e73	LDA #0
7819	.$4e75	LDY #4
7820	.$4e77	REALINITLOOP0:
7821	.$4e77	STA VAR_DI,Y
7822	.$4e7a	STA VAR_KK,Y
7823	.$4e7d	STA VAR_SC,Y
7824	.$4e80	STA VAR_CH,Y
7825	.$4e83	STA VAR_E1,Y
7826	.$4e86	STA VAR_Z,Y
7827	.$4e89	STA VAR_E3,Y
7828	.$4e8c	STA VAR_Q,Y
7829	.$4e8f	STA VAR_H,Y
7830	.$4e92	STA VAR_Y,Y
7831	.$4e95	STA VAR_S,Y
7832	.$4e98	STA VAR_T,Y
7833	.$4e9b	STA VAR_V,Y
7834	.$4e9e	STA VAR_W,Y
7835	.$4ea1	STA VAR_DO,Y
7836	.$4ea4	STA VAR_SS,Y
7837	.$4ea7	STA VAR_N,Y
7838	.$4eaa	STA VAR_SO,Y
7839	.$4ead	STA VAR_M,Y
7840	.$4eb0	STA VAR_E2,Y
7841	.$4eb3	STA VAR_O,Y
7842	.$4eb6	STA VAR_R,Y
7843	.$4eb9	DEY
7844	.$4eba	BMI REALLOOPEXIT0
7845	.$4ebc	JMP REALINITLOOP0
7846	.$4ebf	REALLOOPEXIT0:
7847	.$4ebf	LDA #<VAR_DO[]
7848	.$4ec1	LDY #>VAR_DO[]
7849	.$4ec3	JSR INITSPARAMS
7850	.$4ec6	JSR INITNARRAY
7851	.$4ec9	LDA #<VAR_D[]
7852	.$4ecb	LDY #>VAR_D[]
7853	.$4ecd	JSR INITSPARAMS
7854	.$4ed0	JSR INITNARRAY
7855	.$4ed3	LDA #<VAR_B[]
7856	.$4ed5	LDY #>VAR_B[]
7857	.$4ed7	JSR INITSPARAMS
7858	.$4eda	JSR INITNARRAY
7859	.$4edd	LDA #0
7860	.$4edf	RTS
7864	.$4ee0	CONSTANTS
7870	.$4ee0	CONST_1R .REAL 240.0
7873	.$4ee5	CONST_2R .REAL 150.0
7875	.$4eea	CONST_3 .BYTE 5
7876	.$4eeb	.STRG "{clr}"
7888	.$4eec	CONST_7R .REAL 0.0
7891	.$4ef1	CONST_8 .REAL -1.0
7894	.$4ef6	CONST_9R .REAL 1.0
7897	.$4efb	CONST_10 .REAL 0.1
7900	.$4f00	CONST_11R .REAL 2.0
7903	.$4f05	CONST_12R .REAL 4.0
7906	.$4f0a	CONST_13 .REAL 2.0
7909	.$4f0f	CONST_14 .REAL 6.0
7912	.$4f14	CONST_15R .REAL 57.0
7915	.$4f19	CONST_16R .REAL 10000.0
7918	.$4f1e	CONST_17R .REAL 8143.0
7924	.$4f23	CONST_19R .REAL 22.0
7927	.$4f28	CONST_20R .REAL 62.0
7930	.$4f2d	CONST_21R .REAL 58.0
7933	.$4f32	CONST_22 .REAL 30720.0
7936	.$4f37	CONST_23R .REAL 7712.0
7939	.$4f3c	CONST_24R .REAL 3.0
7942	.$4f41	CONST_25R .REAL 5.0
7945	.$4f46	CONST_26 .REAL 57.0
7948	.$4f4b	CONST_27 .REAL 56.0
7951	.$4f50	CONST_28R .REAL 21.0
7954	.$4f55	CONST_29R .REAL 23.0
7957	.$4f5a	CONST_30R .REAL 60.0
7960	.$4f5f	CONST_31R .REAL 1000.0
7962	.$4f64	CONST_32 .BYTE 12
7963	.$4f65	.STRG "{home}{rvon}"
7966	.$4f67	CONST_33R .REAL 8.0
7969	.$4f6c	CONST_34R .REAL 61.0
7978	.$4f71	CONST_37R .REAL 16.0
7984	.$4f76	CONST_39R .REAL 63.0
7987	.$4f7b	CONST_40R .REAL 8164.0
7990	.$4f80	CONST_41R .REAL 12.0
7993	.$4f85	CONST_42R .REAL 250.0
7996	.$4f8a	CONST_43R .REAL 14.0
7999	.$4f8f	CONST_44R .REAL 10.0
8002	.$4f94	CONST_45R .REAL 8163.0
8005	.$4f99	CONST_46R .REAL 11.0
8008	.$4f9e	CONST_47R .REAL 100.0
8011	.$4fa3	CONST_48 .REAL 0.05
8013	.$4fa8	CONST_49 .BYTE 10
8014	.$4fa9	.STRG "{clr}{pur}"
8016	.$4fab	CONST_50 .BYTE 34
8017	.$4fac	.STRG ">>>>>>>>>>>>>>>>>>>>>{left}{inst}>"
8019	.$4fc4	CONST_51 .BYTE 6
8020	.$4fc5	.STRG "{home}"
8022	.$4fc6	CONST_52 .BYTE 12
8023	.$4fc7	.STRG "{down}{down}"
8026	.$4fc9	CONST_53R .REAL 6.0
8028	.$4fce	CONST_54 .BYTE 15
8029	.$4fcf	.STRG "?>>>>>>>>?{red}"
8031	.$4fda	CONST_55 .BYTE 20
8032	.$4fdb	.STRG "9{pur}88888888{red}9"
8034	.$4fe7	CONST_56 .BYTE 10
8035	.$4fe8	.STRG "9>>>>>>>>9"
8037	.$4ff2	CONST_57 .BYTE 15
8038	.$4ff3	.STRG "9>>>>>>>>9{pur}"
8040	.$4ffe	CONST_58 .BYTE 21
8041	.$4fff	.STRG ">88888888888888888888"
8043	.$5014	CONST_59 .BYTE 24
8044	.$5015	.STRG "{down}{down}{down}{down}"
8046	.$5019	CONST_60 .BYTE 6
8047	.$501a	.STRG "{rvon}"
8050	.$501b	CONST_61R .REAL 17.0
8056	.$5020	CONST_63R .REAL 7834.0
8059	.$5025	CONST_64R .REAL 110.0
8062	.$502a	CONST_65R .REAL 88.0
8065	.$502f	CONST_66 .REAL 0.5
8068	.$5034	CONST_67R .REAL 7812.0
8071	.$5039	CONST_68R .REAL 8142.0
8074	.$503e	CONST_69R .REAL 7833.0
8077	.$5043	CONST_70 .REAL 10000.0
8080	.$5048	CONST_71R .REAL 7616.0
8083	.$504d	CONST_72R .REAL 7679.0
8086	.$5052	CONST_73R .REAL 828.0
8089	.$5057	CONST_74 .REAL 914.0
8094	.$505c	CONST_76 .BYTE 65
8095	.$505d	.STRG "{clr}{blue}{down}{down}{rvson} THE HARDHAT CLIMBER {rvsoff}{down}"
8097	.$5079	CONST_77 .BYTE 16
8098	.$507a	.STRG "      written by"
8100	.$508a	CONST_78 .BYTE 30
8101	.$508b	.STRG "     {black}Chris Lesher{blue}"
8103	.$509e	CONST_79 .BYTE 20
8104	.$509f	.STRG "  Compute!'s Gazette"
8106	.$50b3	CONST_80 .BYTE 15
8107	.$50b4	.STRG "      Jan, 1984"
8109	.$50c3	CONST_81 .BYTE 20
8110	.$50c4	.STRG "  2023 turbo edition"
8112	.$50d8	CONST_82 .BYTE 20
8113	.$50d9	.STRG " by Antonino Porcino"
8115	.$50ed	CONST_83 .BYTE 26
8116	.$50ee	.STRG "{green}github.com/nippur72"
8118	.$5102	CONST_84 .BYTE 19
8119	.$5103	.STRG "/lo-scalatore{blue}"
8121	.$5111	CONST_85 .BYTE 17
8122	.$5112	.STRG "    press any key"
8124	.$5123	CONST_86 .BYTE 0
8125	.$5124	.STRG ""
8127	.$5124	CONST_87 .BYTE 22
8128	.$5125	.STRG "{clr}{blk}your score: "
8130	.$5133	CONST_88 .BYTE 37
8131	.$5134	.STRG "{down}{down}{down}{down}press any key"
8134	.$5145	DATAS
8135	.$5145	.BYTE 2
8136	.$5146	.BYTE 0
8137	.$5147	.STRG ""
8138	.$5147	.BYTE 3
8139	.$5148	.BYTE 1
8140	.$5149	.BYTE 21
8141	.$514a	.BYTE 22
8142	.$514b	.BYTE 23
8143	.$514c	.BYTE 24
8144	.$514d	.BYTE 42
8145	.$514e	.BYTE 43
8146	.$514f	.BYTE 44
8147	.$5150	.BYTE 45
8148	.$5151	.BYTE 46
8149	.$5152	.BYTE 47
8150	.$5153	.BYTE 3
8151	.$5154	.BYTE 255
8152	.$5155	.BYTE 3
8153	.$5156	.BYTE 255
8154	.$5157	.BYTE 153
8155	.$5158	.BYTE 102
8156	.$5159	.BYTE 102
8157	.$515a	.BYTE 153
8158	.$515b	.BYTE 3
8159	.$515c	.BYTE 255
8160	.$515d	.BYTE 3
8161	.$515e	.BYTE 255
8162	.$515f	.BYTE 195
8163	.$5160	.BYTE 3
8164	.$5161	.BYTE 255
8165	.$5162	.BYTE 3
8166	.$5163	.BYTE 255
8167	.$5164	.BYTE 195
8168	.$5165	.BYTE 195
8169	.$5166	.BYTE 3
8170	.$5167	.BYTE 255
8171	.$5168	.BYTE 3
8172	.$5169	.BYTE 255
8173	.$516a	.BYTE 195
8174	.$516b	.BYTE 60
8175	.$516c	.BYTE 60
8176	.$516d	.BYTE 25
8177	.$516e	.BYTE 3
8178	.$516f	.BYTE 255
8179	.$5170	.BYTE 188
8180	.$5171	.BYTE 60
8181	.$5172	.BYTE 36
8182	.$5173	.BYTE 231
8183	.$5174	.BYTE 3
8184	.$5175	.BYTE 3
8185	.$5176	.BYTE 4
8186	.$5177	.BYTE 24
8187	.$5178	.BYTE 24
8188	.$5179	.BYTE 60
8189	.$517a	.BYTE 126
8190	.$517b	.BYTE 126
8191	.$517c	.BYTE 60
8192	.$517d	.BYTE 60
8193	.$517e	.BYTE 66
8194	.$517f	.BYTE 165
8195	.$5180	.BYTE 153
8196	.$5181	.BYTE 153
8197	.$5182	.BYTE 165
8198	.$5183	.BYTE 66
8199	.$5184	.BYTE 60
8200	.$5185	.BYTE 2
8201	.$5186	.BYTE 0
8202	.$5187	.STRG ""
8203	.$5187	.BYTE 24
8204	.$5188	.BYTE 36
8205	.$5189	.BYTE 126
8206	.$518a	.BYTE 126
8207	.$518b	.BYTE 126
8208	.$518c	.BYTE 126
8209	.$518d	.BYTE 2
8210	.$518e	.BYTE 0
8211	.$518f	.STRG ""
8212	.$518f	.BYTE 2
8213	.$5190	.BYTE 0
8214	.$5191	.STRG ""
8215	.$5191	.BYTE 2
8216	.$5192	.BYTE 0
8217	.$5193	.STRG ""
8218	.$5193	.BYTE 2
8219	.$5194	.BYTE 0
8220	.$5195	.STRG ""
8221	.$5195	.BYTE 2
8222	.$5196	.BYTE 0
8223	.$5197	.STRG ""
8224	.$5197	.BYTE 2
8225	.$5198	.BYTE 0
8226	.$5199	.STRG ""
8227	.$5199	.BYTE 2
8228	.$519a	.BYTE 0
8229	.$519b	.STRG ""
8230	.$519b	.BYTE 2
8231	.$519c	.BYTE 0
8232	.$519d	.STRG ""
8233	.$519d	.BYTE 2
8234	.$519e	.BYTE 0
8235	.$519f	.STRG ""
8236	.$519f	.BYTE 2
8237	.$51a0	.BYTE 0
8238	.$51a1	.STRG ""
8239	.$51a1	.BYTE 2
8240	.$51a2	.BYTE 0
8241	.$51a3	.STRG ""
8242	.$51a3	.BYTE 2
8243	.$51a4	.BYTE 0
8244	.$51a5	.STRG ""
8245	.$51a5	.BYTE 2
8246	.$51a6	.BYTE 0
8247	.$51a7	.STRG ""
8248	.$51a7	.BYTE 2
8249	.$51a8	.BYTE 0
8250	.$51a9	.STRG ""
8251	.$51a9	.BYTE 2
8252	.$51aa	.BYTE 0
8253	.$51ab	.STRG ""
8254	.$51ab	.BYTE 2
8255	.$51ac	.BYTE 0
8256	.$51ad	.STRG ""
8257	.$51ad	.BYTE 2
8258	.$51ae	.BYTE 0
8259	.$51af	.STRG ""
8260	.$51af	.BYTE 169
8261	.$51b0	.BYTE 2
8262	.$51b1	.BYTE 0
8263	.$51b2	.STRG ""
8264	.$51b2	.BYTE 133
8265	.$51b3	.BYTE 3
8266	.$51b4	.BYTE 1
8267	.$51b5	.BYTE 169
8268	.$51b6	.BYTE 3
8269	.$51b7	.BYTE 255
8270	.$51b8	.BYTE 141
8271	.$51b9	.BYTE 34
8272	.$51ba	.BYTE 145
8273	.$51bb	.BYTE 169
8274	.$51bc	.BYTE 32
8275	.$51bd	.BYTE 44
8276	.$51be	.BYTE 31
8277	.$51bf	.BYTE 145
8278	.$51c0	.BYTE 208
8279	.$51c1	.BYTE 5
8280	.$51c2	.BYTE 169
8281	.$51c3	.BYTE 3
8282	.$51c4	.BYTE 1
8283	.$51c5	.BYTE 133
8284	.$51c6	.BYTE 3
8285	.$51c7	.BYTE 1
8286	.$51c8	.BYTE 96
8287	.$51c9	.BYTE 169
8288	.$51ca	.BYTE 8
8289	.$51cb	.BYTE 44
8290	.$51cc	.BYTE 31
8291	.$51cd	.BYTE 145
8292	.$51ce	.BYTE 208
8293	.$51cf	.BYTE 5
8294	.$51d0	.BYTE 169
8295	.$51d1	.BYTE 3
8296	.$51d2	.BYTE 2
8297	.$51d3	.BYTE 133
8298	.$51d4	.BYTE 3
8299	.$51d5	.BYTE 1
8300	.$51d6	.BYTE 96
8301	.$51d7	.BYTE 169
8302	.$51d8	.BYTE 16
8303	.$51d9	.BYTE 44
8304	.$51da	.BYTE 31
8305	.$51db	.BYTE 145
8306	.$51dc	.BYTE 208
8307	.$51dd	.BYTE 5
8308	.$51de	.BYTE 169
8309	.$51df	.BYTE 3
8310	.$51e0	.BYTE 3
8311	.$51e1	.BYTE 133
8312	.$51e2	.BYTE 3
8313	.$51e3	.BYTE 1
8314	.$51e4	.BYTE 96
8315	.$51e5	.BYTE 169
8316	.$51e6	.BYTE 4
8317	.$51e7	.BYTE 44
8318	.$51e8	.BYTE 31
8319	.$51e9	.BYTE 145
8320	.$51ea	.BYTE 208
8321	.$51eb	.BYTE 3
8322	.$51ec	.BYTE 3
8323	.$51ed	.BYTE 133
8324	.$51ee	.BYTE 3
8325	.$51ef	.BYTE 1
8326	.$51f0	.BYTE 96
8327	.$51f1	.BYTE 169
8328	.$51f2	.BYTE 127
8329	.$51f3	.BYTE 141
8330	.$51f4	.BYTE 34
8331	.$51f5	.BYTE 145
8332	.$51f6	.BYTE 169
8333	.$51f7	.BYTE 128
8334	.$51f8	.BYTE 44
8335	.$51f9	.BYTE 32
8336	.$51fa	.BYTE 145
8337	.$51fb	.BYTE 208
8338	.$51fc	.BYTE 4
8339	.$51fd	.BYTE 169
8340	.$51fe	.BYTE 5
8341	.$51ff	.BYTE 133
8342	.$5200	.BYTE 3
8343	.$5201	.BYTE 1
8344	.$5202	.BYTE 96
8345	.$5203	.BYTE 173
8346	.$5204	.BYTE 4
8347	.$5205	.BYTE 144
8348	.$5206	.BYTE 201
8349	.$5207	.BYTE 110
8350	.$5208	.BYTE 208
8351	.$5209	.BYTE 249
8352	.$520a	.BYTE 173
8353	.$520b	.BYTE 4
8354	.$520c	.BYTE 144
8355	.$520d	.BYTE 201
8356	.$520e	.BYTE 111
8357	.$520f	.BYTE 208
8358	.$5210	.BYTE 249
8359	.$5211	.BYTE 96
8360	.$5212	.BYTE $FF
8362	.$5213	CONSTANTS_END
8365	.$5213	VARIABLES
8367	.$5213	.BYTE 1
8368	.$5214	.WORD 55
8369	.$5216	VAR_DO[] .ARRAY 55
8371	.$524d	VAR_DI .REAL 0.0
8373	.$5252	VAR_KK .REAL 0.0
8375	.$5257	VAR_SC .REAL 0.0
8377	.$525c	VAR_CH .REAL 0.0
8379	.$5261	VAR_E1 .REAL 0.0
8381	.$5266	.BYTE 1
8382	.$5267	.WORD 55
8383	.$5269	VAR_D[] .ARRAY 55
8385	.$52a0	VAR_Z .REAL 0.0
8387	.$52a5	VAR_E3 .REAL 0.0
8389	.$52aa	VAR_Q .REAL 0.0
8391	.$52af	VAR_H .REAL 0.0
8393	.$52b4	VAR_Y .REAL 0.0
8395	.$52b9	VAR_S .REAL 0.0
8397	.$52be	VAR_T .REAL 0.0
8399	.$52c3	.BYTE 1
8400	.$52c4	.WORD 60
8401	.$52c6	VAR_B[] .ARRAY 60
8403	.$5302	VAR_V .REAL 0.0
8405	.$5307	VAR_W .REAL 0.0
8407	.$530c	VAR_DO .REAL 0.0
8409	.$5311	VAR_SS .REAL 0.0
8411	.$5316	VAR_N .REAL 0.0
8413	.$531b	VAR_SO .REAL 0.0
8415	.$5320	VAR_M .REAL 0.0
8417	.$5325	VAR_E2 .REAL 0.0
8419	.$532a	VAR_O .REAL 0.0
8421	.$532f	VAR_R .REAL 0.0
8422	.$5334	STRINGVARS_START
8424	.$5334	VAR_K$ .WORD EMPTYSTR
8426	.$5336	VAR_TI$ .WORD EMPTYSTR
8427	.$5338	STRINGVARS_END
8428	.$5338	STRINGARRAYS_START
8429	.$5338	STRINGARRAYS_END
8430	.$5338	VARIABLES_END
8432	.$5338	Y_REG .REAL 0.0
8433	.$533d	C_REG .REAL 0.0
8434	.$5342	D_REG .REAL 0.0
8435	.$5347	E_REG .REAL 0.0
8436	.$534c	F_REG .REAL 0.0
8437	.$5351	A_REG .WORD 0
8438	.$5353	B_REG .WORD 0
8439	.$5355	CMD_NUM .BYTE 0
8440	.$5356	CHANNEL .BYTE 0
8441	.$5357	SP_SAVE .BYTE 0
8442	.$5358	TMP2_REG .WORD 0
8443	.$535a	TMP3_REG .WORD 0
8444	.$535c	TMP4_REG .WORD 0
8445	.$535e	AS_TMP .WORD 0
8446	.$5360	BPOINTER_TMP .WORD 0
8447	.$5362	BASICTEXTP .BYTE 0
8448	.$5363	STORE1 .WORD 0
8449	.$5365	STORE2 .WORD 0
8450	.$5367	STORE3 .WORD 0
8451	.$5369	STORE4 .WORD 0
8452	.$536b	GCSTART .WORD 0
8453	.$536d	GCLEN .WORD 0
8454	.$536f	GCWORK .WORD 0
8455	.$5371	TMP_FREG .REAL 0
8456	.$5376	TMP2_FREG .REAL 0
8457	.$537b	TMP_FLAG .BYTE 0
8458	.$537c	REAL_CONST_ONE .REAL 1.0
8459	.$5381	REAL_CONST_ZERO .REAL 0.0
8460	.$5386	REAL_CONST_MINUS_ONE .REAL -1.0
8461	.$538b	CHLOCKFLAG .BYTE 0
8462	.$538c	EMPTYSTR .BYTE 0
8463	.$538d	FPSTACKP .WORD FPSTACK
8464	.$538f	FORSTACKP .WORD FORSTACK
8465	.$5391	DATASP .WORD DATAS
8466	.$5393	LASTVAR .WORD 0
8467	.$5395	LASTVARP .WORD 0
8468	.$5397	HIGHP .WORD STRBUF
8469	.$5399	STRBUFP .WORD STRBUF
8470	.$539b	ENDSTRBUF .WORD 0
8471	.$539d	INPUTQUEUEP .BYTE 0
8472	.$539e	PROGRAMEND
8473	.$539e	INPUTQUEUE .ARRAY $0F
8474	.$53ad	FPSTACK .ARRAY 50
8475	.$53df	FORSTACK .ARRAY 170
8476	.$5489	STRBUF .BYTE 0
