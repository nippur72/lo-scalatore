PROGRAMSTART:
JSR START
0:
NOP
MOVB 648,#30{INTEGER}
NOP
MOVB 36869,#240{INTEGER}
NOP
MOVB 36866,#150{INTEGER}
NOP
MOV A,#{clr}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOVB 36869,#255{INTEGER}
NOP
MOVB 36878,#143.0{REAL}
NOP
MOVB 36879,#27{INTEGER}
10:
NOP
JSR GOSUB
JSR 100
NOP
MOVB 36869,#255{INTEGER}
20:
NOP
MOV Y,#56{INTEGER}
MOV T{REAL},Y
NOP
MOV Y,#63{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(T{REAL})
JSR INITFOR
30:
NOP
MOV A,#{right}{right}{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,T{REAL}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV A,#{right}{right}{rvon}{STRING}
JSR STROUT
NOP
MOV X,T{REAL}
JSR REALOUT
JSR CRSRRIGHT
NOP
MOV A,#{rvsoff}{STRING}
JSR STROUT
JSR LINEBREAK
40:
NOP
JSR LINEBREAK
50:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
60:
NOP
JSR END
RTS
100:
101:
102:
103:
106:
107:
108:
109:
NOP
MOV Y,#0{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
MOV Y,N{REAL}
PUSH Y
JSR READNUMBER
POP X
MOV G,B[]{REAL}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#7616{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#7679{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV M{REAL},Y
NOP
MOV Y,N{REAL}
PUSH Y
MOV X,M{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
110:
NOP
MOV Y,#828{INTEGER}
MOV N{REAL},Y
NOP
MOV Y,#899{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(N{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV M{REAL},Y
NOP
MOV Y,N{REAL}
PUSH Y
MOV X,M{REAL}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JSR RETURN
RTS
